<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="789.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="789.00"> </text><svg id="frames" x="10" width="1180" total_samples="20743"><g><title>`0x7FFEBDE546BB (3 samples, 0.01%)</title><rect x="0.0096%" y="629" width="0.0145%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="3"/><text x="0.2596%" y="639.50"></text></g><g><title>`0x7FFEBDE54906 (3 samples, 0.01%)</title><rect x="0.0096%" y="613" width="0.0145%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="3"/><text x="0.2596%" y="623.50"></text></g><g><title>`0x7FFEBDE588B6 (7 samples, 0.03%)</title><rect x="0.0000%" y="693" width="0.0337%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="7"/><text x="0.2500%" y="703.50"></text></g><g><title>`0x7FFEBDE5DDA9 (7 samples, 0.03%)</title><rect x="0.0000%" y="677" width="0.0337%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="7"/><text x="0.2500%" y="687.50"></text></g><g><title>`0x7FFEBDE5CE29 (7 samples, 0.03%)</title><rect x="0.0000%" y="661" width="0.0337%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="7"/><text x="0.2500%" y="671.50"></text></g><g><title>`0x7FFEBDE5C3F8 (5 samples, 0.02%)</title><rect x="0.0096%" y="645" width="0.0241%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="5"/><text x="0.2596%" y="655.50"></text></g><g><title>`0x7FF5BFCD0955 (13 samples, 0.06%)</title><rect x="0.0000%" y="741" width="0.0627%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="13"/><text x="0.2500%" y="751.50"></text></g><g><title>`0x7FFEBDE5A25A (13 samples, 0.06%)</title><rect x="0.0000%" y="725" width="0.0627%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="13"/><text x="0.2500%" y="735.50"></text></g><g><title>`0x7FFEBDE48CAC (13 samples, 0.06%)</title><rect x="0.0000%" y="709" width="0.0627%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="13"/><text x="0.2500%" y="719.50"></text></g><g><title>`0x7FFEBDE58940 (5 samples, 0.02%)</title><rect x="0.0386%" y="693" width="0.0241%" height="15" fill="rgb(220,122,19)" fg:x="8" fg:w="5"/><text x="0.2886%" y="703.50"></text></g><g><title>`0x7FFEBDE5D62D (5 samples, 0.02%)</title><rect x="0.0386%" y="677" width="0.0241%" height="15" fill="rgb(250,228,42)" fg:x="8" fg:w="5"/><text x="0.2886%" y="687.50"></text></g><g><title>`0x7FFEBDE9CE60 (5 samples, 0.02%)</title><rect x="0.0386%" y="661" width="0.0241%" height="15" fill="rgb(240,193,28)" fg:x="8" fg:w="5"/><text x="0.2886%" y="671.50"></text></g><g><title>`0x7FFEBDE9CDEE (5 samples, 0.02%)</title><rect x="0.0386%" y="645" width="0.0241%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="5"/><text x="0.2886%" y="655.50"></text></g><g><title>`0x7FFEBDE9D03D (5 samples, 0.02%)</title><rect x="0.0386%" y="629" width="0.0241%" height="15" fill="rgb(206,188,39)" fg:x="8" fg:w="5"/><text x="0.2886%" y="639.50"></text></g><g><title>`0x7FFEBDE5869F (5 samples, 0.02%)</title><rect x="0.0386%" y="613" width="0.0241%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="5"/><text x="0.2886%" y="623.50"></text></g><g><title>`0x7FFEBDE5452F (4 samples, 0.02%)</title><rect x="0.0820%" y="613" width="0.0193%" height="15" fill="rgb(231,73,38)" fg:x="17" fg:w="4"/><text x="0.3320%" y="623.50"></text></g><g><title>`0x7FFEBDEA151C (4 samples, 0.02%)</title><rect x="0.0820%" y="597" width="0.0193%" height="15" fill="rgb(225,20,46)" fg:x="17" fg:w="4"/><text x="0.3320%" y="607.50"></text></g><g><title>`0x7FFEBCAF1081 (3 samples, 0.01%)</title><rect x="0.0868%" y="581" width="0.0145%" height="15" fill="rgb(210,31,41)" fg:x="18" fg:w="3"/><text x="0.3368%" y="591.50"></text></g><g><title>`0x7FFEBB7449E0 (3 samples, 0.01%)</title><rect x="0.0868%" y="565" width="0.0145%" height="15" fill="rgb(221,200,47)" fg:x="18" fg:w="3"/><text x="0.3368%" y="575.50"></text></g><g><title>`0x7FFEBCAE67A7 (3 samples, 0.01%)</title><rect x="0.0868%" y="549" width="0.0145%" height="15" fill="rgb(226,26,5)" fg:x="18" fg:w="3"/><text x="0.3368%" y="559.50"></text></g><g><title>`0x7FFEBDE588D4 (9 samples, 0.04%)</title><rect x="0.0627%" y="693" width="0.0434%" height="15" fill="rgb(249,33,26)" fg:x="13" fg:w="9"/><text x="0.3127%" y="703.50"></text></g><g><title>`0x7FFEBDE40F90 (9 samples, 0.04%)</title><rect x="0.0627%" y="677" width="0.0434%" height="15" fill="rgb(235,183,28)" fg:x="13" fg:w="9"/><text x="0.3127%" y="687.50"></text></g><g><title>`0x7FFEBDE40BC8 (8 samples, 0.04%)</title><rect x="0.0675%" y="661" width="0.0386%" height="15" fill="rgb(221,5,38)" fg:x="14" fg:w="8"/><text x="0.3175%" y="671.50"></text></g><g><title>`0x7FFEBDE4070F (7 samples, 0.03%)</title><rect x="0.0723%" y="645" width="0.0337%" height="15" fill="rgb(247,18,42)" fg:x="15" fg:w="7"/><text x="0.3223%" y="655.50"></text></g><g><title>`0x7FFEBDE5C3F8 (5 samples, 0.02%)</title><rect x="0.0820%" y="629" width="0.0241%" height="15" fill="rgb(241,131,45)" fg:x="17" fg:w="5"/><text x="0.3320%" y="639.50"></text></g><g><title>`0x7FF5BFCD099E (12 samples, 0.06%)</title><rect x="0.0627%" y="741" width="0.0579%" height="15" fill="rgb(249,31,29)" fg:x="13" fg:w="12"/><text x="0.3127%" y="751.50"></text></g><g><title>`0x7FFEBDE5A25A (12 samples, 0.06%)</title><rect x="0.0627%" y="725" width="0.0579%" height="15" fill="rgb(225,111,53)" fg:x="13" fg:w="12"/><text x="0.3127%" y="735.50"></text></g><g><title>`0x7FFEBDE48CAC (12 samples, 0.06%)</title><rect x="0.0627%" y="709" width="0.0579%" height="15" fill="rgb(238,160,17)" fg:x="13" fg:w="12"/><text x="0.3127%" y="719.50"></text></g><g><title>`0x7FFEBDE58940 (3 samples, 0.01%)</title><rect x="0.1061%" y="693" width="0.0145%" height="15" fill="rgb(214,148,48)" fg:x="22" fg:w="3"/><text x="0.3561%" y="703.50"></text></g><g><title>`0x7FFEBDE5D62D (3 samples, 0.01%)</title><rect x="0.1061%" y="677" width="0.0145%" height="15" fill="rgb(232,36,49)" fg:x="22" fg:w="3"/><text x="0.3561%" y="687.50"></text></g><g><title>`0x7FFEBDE9CDEE (3 samples, 0.01%)</title><rect x="0.1061%" y="661" width="0.0145%" height="15" fill="rgb(209,103,24)" fg:x="22" fg:w="3"/><text x="0.3561%" y="671.50"></text></g><g><title>`0x7FFEBDE9D03D (3 samples, 0.01%)</title><rect x="0.1061%" y="645" width="0.0145%" height="15" fill="rgb(229,88,8)" fg:x="22" fg:w="3"/><text x="0.3561%" y="655.50"></text></g><g><title>`0x7FFEBDE5869F (3 samples, 0.01%)</title><rect x="0.1061%" y="629" width="0.0145%" height="15" fill="rgb(213,181,19)" fg:x="22" fg:w="3"/><text x="0.3561%" y="639.50"></text></g><g><title>`0x7FFE7E05E3E5 (3 samples, 0.01%)</title><rect x="0.1061%" y="613" width="0.0145%" height="15" fill="rgb(254,191,54)" fg:x="22" fg:w="3"/><text x="0.3561%" y="623.50"></text></g><g><title>`0x7FFEBDE4070F (4 samples, 0.02%)</title><rect x="0.1253%" y="645" width="0.0193%" height="15" fill="rgb(241,83,37)" fg:x="26" fg:w="4"/><text x="0.3753%" y="655.50"></text></g><g><title>`0x7FFEBDE5C3F8 (3 samples, 0.01%)</title><rect x="0.1302%" y="629" width="0.0145%" height="15" fill="rgb(233,36,39)" fg:x="27" fg:w="3"/><text x="0.3802%" y="639.50"></text></g><g><title>`0x7FFEBDE5452F (3 samples, 0.01%)</title><rect x="0.1302%" y="613" width="0.0145%" height="15" fill="rgb(226,3,54)" fg:x="27" fg:w="3"/><text x="0.3802%" y="623.50"></text></g><g><title>`0x7FFEBDEA151C (3 samples, 0.01%)</title><rect x="0.1302%" y="597" width="0.0145%" height="15" fill="rgb(245,192,40)" fg:x="27" fg:w="3"/><text x="0.3802%" y="607.50"></text></g><g><title>`0x7FFEBCAF1081 (3 samples, 0.01%)</title><rect x="0.1302%" y="581" width="0.0145%" height="15" fill="rgb(238,167,29)" fg:x="27" fg:w="3"/><text x="0.3802%" y="591.50"></text></g><g><title>`0x7FFEBB7449E0 (3 samples, 0.01%)</title><rect x="0.1302%" y="565" width="0.0145%" height="15" fill="rgb(232,182,51)" fg:x="27" fg:w="3"/><text x="0.3802%" y="575.50"></text></g><g><title>`0x7FFEBCAE67A7 (3 samples, 0.01%)</title><rect x="0.1302%" y="549" width="0.0145%" height="15" fill="rgb(231,60,39)" fg:x="27" fg:w="3"/><text x="0.3802%" y="559.50"></text></g><g><title>`0x7FFEBDE588D4 (6 samples, 0.03%)</title><rect x="0.1205%" y="693" width="0.0289%" height="15" fill="rgb(208,69,12)" fg:x="25" fg:w="6"/><text x="0.3705%" y="703.50"></text></g><g><title>`0x7FFEBDE40F90 (6 samples, 0.03%)</title><rect x="0.1205%" y="677" width="0.0289%" height="15" fill="rgb(235,93,37)" fg:x="25" fg:w="6"/><text x="0.3705%" y="687.50"></text></g><g><title>`0x7FFEBDE40BC8 (5 samples, 0.02%)</title><rect x="0.1253%" y="661" width="0.0241%" height="15" fill="rgb(213,116,39)" fg:x="26" fg:w="5"/><text x="0.3753%" y="671.50"></text></g><g><title>`0x7FFE74575196 (8 samples, 0.04%)</title><rect x="0.1687%" y="581" width="0.0386%" height="15" fill="rgb(222,207,29)" fg:x="35" fg:w="8"/><text x="0.4187%" y="591.50"></text></g><g><title>`0x7FFE74574A66 (8 samples, 0.04%)</title><rect x="0.1687%" y="565" width="0.0386%" height="15" fill="rgb(206,96,30)" fg:x="35" fg:w="8"/><text x="0.4187%" y="575.50"></text></g><g><title>`0x7FFE7E068FE8 (3 samples, 0.01%)</title><rect x="0.2121%" y="485" width="0.0145%" height="15" fill="rgb(218,138,4)" fg:x="44" fg:w="3"/><text x="0.4621%" y="495.50"></text></g><g><title>`0x7FFE7E06C665 (3 samples, 0.01%)</title><rect x="0.2121%" y="469" width="0.0145%" height="15" fill="rgb(250,191,14)" fg:x="44" fg:w="3"/><text x="0.4621%" y="479.50"></text></g><g><title>`0x7FFE7E082FBF (3 samples, 0.01%)</title><rect x="0.2121%" y="453" width="0.0145%" height="15" fill="rgb(239,60,40)" fg:x="44" fg:w="3"/><text x="0.4621%" y="463.50"></text></g><g><title>`0x7FFE7E08372B (3 samples, 0.01%)</title><rect x="0.2121%" y="437" width="0.0145%" height="15" fill="rgb(206,27,48)" fg:x="44" fg:w="3"/><text x="0.4621%" y="447.50"></text></g><g><title>`0x7FF5BFCD09D2 (24 samples, 0.12%)</title><rect x="0.1205%" y="741" width="0.1157%" height="15" fill="rgb(225,35,8)" fg:x="25" fg:w="24"/><text x="0.3705%" y="751.50"></text></g><g><title>`0x7FFEBDE5A25A (24 samples, 0.12%)</title><rect x="0.1205%" y="725" width="0.1157%" height="15" fill="rgb(250,213,24)" fg:x="25" fg:w="24"/><text x="0.3705%" y="735.50"></text></g><g><title>`0x7FFEBDE48CAC (24 samples, 0.12%)</title><rect x="0.1205%" y="709" width="0.1157%" height="15" fill="rgb(247,123,22)" fg:x="25" fg:w="24"/><text x="0.3705%" y="719.50"></text></g><g><title>`0x7FFEBDE58940 (18 samples, 0.09%)</title><rect x="0.1494%" y="693" width="0.0868%" height="15" fill="rgb(231,138,38)" fg:x="31" fg:w="18"/><text x="0.3994%" y="703.50"></text></g><g><title>`0x7FFEBDE5D62D (18 samples, 0.09%)</title><rect x="0.1494%" y="677" width="0.0868%" height="15" fill="rgb(231,145,46)" fg:x="31" fg:w="18"/><text x="0.3994%" y="687.50"></text></g><g><title>`0x7FFEBDE9CDEE (18 samples, 0.09%)</title><rect x="0.1494%" y="661" width="0.0868%" height="15" fill="rgb(251,118,11)" fg:x="31" fg:w="18"/><text x="0.3994%" y="671.50"></text></g><g><title>`0x7FFEBDE9D03D (18 samples, 0.09%)</title><rect x="0.1494%" y="645" width="0.0868%" height="15" fill="rgb(217,147,25)" fg:x="31" fg:w="18"/><text x="0.3994%" y="655.50"></text></g><g><title>`0x7FFEBDE5869F (18 samples, 0.09%)</title><rect x="0.1494%" y="629" width="0.0868%" height="15" fill="rgb(247,81,37)" fg:x="31" fg:w="18"/><text x="0.3994%" y="639.50"></text></g><g><title>`0x7FFE7451BE5A (18 samples, 0.09%)</title><rect x="0.1494%" y="613" width="0.0868%" height="15" fill="rgb(209,12,38)" fg:x="31" fg:w="18"/><text x="0.3994%" y="623.50"></text></g><g><title>`0x7FFE7451D925 (14 samples, 0.07%)</title><rect x="0.1687%" y="597" width="0.0675%" height="15" fill="rgb(227,1,9)" fg:x="35" fg:w="14"/><text x="0.4187%" y="607.50"></text></g><g><title>`0x7FFE745751FC (6 samples, 0.03%)</title><rect x="0.2073%" y="581" width="0.0289%" height="15" fill="rgb(248,47,43)" fg:x="43" fg:w="6"/><text x="0.4573%" y="591.50"></text></g><g><title>`0x7FFE7451EE94 (6 samples, 0.03%)</title><rect x="0.2073%" y="565" width="0.0289%" height="15" fill="rgb(221,10,30)" fg:x="43" fg:w="6"/><text x="0.4573%" y="575.50"></text></g><g><title>`0x7FFE7E059895 (6 samples, 0.03%)</title><rect x="0.2073%" y="549" width="0.0289%" height="15" fill="rgb(210,229,1)" fg:x="43" fg:w="6"/><text x="0.4573%" y="559.50"></text></g><g><title>`0x7FFE7E06E8B8 (6 samples, 0.03%)</title><rect x="0.2073%" y="533" width="0.0289%" height="15" fill="rgb(222,148,37)" fg:x="43" fg:w="6"/><text x="0.4573%" y="543.50"></text></g><g><title>`0x7FFE7E072385 (6 samples, 0.03%)</title><rect x="0.2073%" y="517" width="0.0289%" height="15" fill="rgb(234,67,33)" fg:x="43" fg:w="6"/><text x="0.4573%" y="527.50"></text></g><g><title>`0x7FFE7E070AF5 (6 samples, 0.03%)</title><rect x="0.2073%" y="501" width="0.0289%" height="15" fill="rgb(247,98,35)" fg:x="43" fg:w="6"/><text x="0.4573%" y="511.50"></text></g><g><title>`0x7FFEBDE8AA20 (16 samples, 0.08%)</title><rect x="0.2362%" y="741" width="0.0771%" height="15" fill="rgb(247,138,52)" fg:x="49" fg:w="16"/><text x="0.4862%" y="751.50"></text></g><g><title>labs2024.exe`_mi_arenas_collect(bool, mi_stats_s*) (3 samples, 0.01%)</title><rect x="0.3134%" y="533" width="0.0145%" height="15" fill="rgb(213,79,30)" fg:x="65" fg:w="3"/><text x="0.5634%" y="543.50"></text></g><g><title>labs2024.exe`mi_arenas_try_purge(bool, bool, mi_stats_s*) (3 samples, 0.01%)</title><rect x="0.3134%" y="517" width="0.0145%" height="15" fill="rgb(246,177,23)" fg:x="65" fg:w="3"/><text x="0.5634%" y="527.50"></text></g><g><title>labs2024.exe`mi_arena_try_purge(mi_arena_s*, long long, bool, mi_stats_s*) (3 samples, 0.01%)</title><rect x="0.3134%" y="501" width="0.0145%" height="15" fill="rgb(230,62,27)" fg:x="65" fg:w="3"/><text x="0.5634%" y="511.50"></text></g><g><title>labs2024.exe`mi_arena_purge_range(mi_arena_s*, unsigned long long, unsigned long long, unsigned long long, unsigned long long, mi_stats_s*) (3 samples, 0.01%)</title><rect x="0.3134%" y="485" width="0.0145%" height="15" fill="rgb(216,154,8)" fg:x="65" fg:w="3"/><text x="0.5634%" y="495.50"></text></g><g><title>labs2024.exe`mi_arena_purge(mi_arena_s*, unsigned long long, unsigned long long, mi_stats_s*) (3 samples, 0.01%)</title><rect x="0.3134%" y="469" width="0.0145%" height="15" fill="rgb(244,35,45)" fg:x="65" fg:w="3"/><text x="0.5634%" y="479.50"></text></g><g><title>`0x7FFEBB5BC087 (5 samples, 0.02%)</title><rect x="0.3134%" y="693" width="0.0241%" height="15" fill="rgb(251,115,12)" fg:x="65" fg:w="5"/><text x="0.5634%" y="703.50"></text></g><g><title>`0x7FFEBB5BBF6A (5 samples, 0.02%)</title><rect x="0.3134%" y="677" width="0.0241%" height="15" fill="rgb(240,54,50)" fg:x="65" fg:w="5"/><text x="0.5634%" y="687.50"></text></g><g><title>`0x7FFEBB5BBFC6 (5 samples, 0.02%)</title><rect x="0.3134%" y="661" width="0.0241%" height="15" fill="rgb(233,84,52)" fg:x="65" fg:w="5"/><text x="0.5634%" y="671.50"></text></g><g><title>`0x7FFEBB5BDDDD (5 samples, 0.02%)</title><rect x="0.3134%" y="645" width="0.0241%" height="15" fill="rgb(207,117,47)" fg:x="65" fg:w="5"/><text x="0.5634%" y="655.50"></text></g><g><title>`0x7FFEBB5C042E (5 samples, 0.02%)</title><rect x="0.3134%" y="629" width="0.0241%" height="15" fill="rgb(249,43,39)" fg:x="65" fg:w="5"/><text x="0.5634%" y="639.50"></text></g><g><title>`0x7FFEBB5F3A53 (5 samples, 0.02%)</title><rect x="0.3134%" y="613" width="0.0241%" height="15" fill="rgb(209,38,44)" fg:x="65" fg:w="5"/><text x="0.5634%" y="623.50"></text></g><g><title>labs2024.exe`mi_process_done() (5 samples, 0.02%)</title><rect x="0.3134%" y="597" width="0.0241%" height="15" fill="rgb(236,212,23)" fg:x="65" fg:w="5"/><text x="0.5634%" y="607.50"></text></g><g><title>labs2024.exe`mi_option_is_enabled(mi_option_e) (5 samples, 0.02%)</title><rect x="0.3134%" y="581" width="0.0241%" height="15" fill="rgb(242,79,21)" fg:x="65" fg:w="5"/><text x="0.5634%" y="591.50"></text></g><g><title>labs2024.exe`mi_option_get(mi_option_e) (5 samples, 0.02%)</title><rect x="0.3134%" y="565" width="0.0241%" height="15" fill="rgb(211,96,35)" fg:x="65" fg:w="5"/><text x="0.5634%" y="575.50"></text></g><g><title>labs2024.exe`mi_heap_collect_ex(mi_heap_s*, mi_collect_e) (5 samples, 0.02%)</title><rect x="0.3134%" y="549" width="0.0241%" height="15" fill="rgb(253,215,40)" fg:x="65" fg:w="5"/><text x="0.5634%" y="559.50"></text></g><g><title>`0x7FFEBDE41082 (3 samples, 0.01%)</title><rect x="0.3375%" y="549" width="0.0145%" height="15" fill="rgb(211,81,21)" fg:x="70" fg:w="3"/><text x="0.5875%" y="559.50"></text></g><g><title>`0x7FFEBDE5A407 (3 samples, 0.01%)</title><rect x="0.3375%" y="533" width="0.0145%" height="15" fill="rgb(208,190,38)" fg:x="70" fg:w="3"/><text x="0.5875%" y="543.50"></text></g><g><title>`0x7FFEBDE5AC49 (3 samples, 0.01%)</title><rect x="0.3375%" y="517" width="0.0145%" height="15" fill="rgb(235,213,38)" fg:x="70" fg:w="3"/><text x="0.5875%" y="527.50"></text></g><g><title>`0x7FFEBDED00F4 (3 samples, 0.01%)</title><rect x="0.3375%" y="501" width="0.0145%" height="15" fill="rgb(237,122,38)" fg:x="70" fg:w="3"/><text x="0.5875%" y="511.50"></text></g><g><title>`0x7FFEBDE588D4 (8 samples, 0.04%)</title><rect x="0.3375%" y="581" width="0.0386%" height="15" fill="rgb(244,218,35)" fg:x="70" fg:w="8"/><text x="0.5875%" y="591.50"></text></g><g><title>`0x7FFEBDE40EBF (8 samples, 0.04%)</title><rect x="0.3375%" y="565" width="0.0386%" height="15" fill="rgb(240,68,47)" fg:x="70" fg:w="8"/><text x="0.5875%" y="575.50"></text></g><g><title>`0x7FFEBDE410F0 (5 samples, 0.02%)</title><rect x="0.3519%" y="549" width="0.0241%" height="15" fill="rgb(210,16,53)" fg:x="73" fg:w="5"/><text x="0.6019%" y="559.50"></text></g><g><title>`0x7FFEBDE4070F (3 samples, 0.01%)</title><rect x="0.3616%" y="533" width="0.0145%" height="15" fill="rgb(235,124,12)" fg:x="75" fg:w="3"/><text x="0.6116%" y="543.50"></text></g><g><title>`0x7FFEBB5BBEA8 (9 samples, 0.04%)</title><rect x="0.3375%" y="677" width="0.0434%" height="15" fill="rgb(224,169,11)" fg:x="70" fg:w="9"/><text x="0.5875%" y="687.50"></text></g><g><title>`0x7FFEBB5C8FB1 (9 samples, 0.04%)</title><rect x="0.3375%" y="661" width="0.0434%" height="15" fill="rgb(250,166,2)" fg:x="70" fg:w="9"/><text x="0.5875%" y="671.50"></text></g><g><title>`0x7FFEBB5C1C03 (9 samples, 0.04%)</title><rect x="0.3375%" y="645" width="0.0434%" height="15" fill="rgb(242,216,29)" fg:x="70" fg:w="9"/><text x="0.5875%" y="655.50"></text></g><g><title>`0x7FFEBB6E61E2 (9 samples, 0.04%)</title><rect x="0.3375%" y="629" width="0.0434%" height="15" fill="rgb(230,116,27)" fg:x="70" fg:w="9"/><text x="0.5875%" y="639.50"></text></g><g><title>`0x7FFEBDE5A25A (9 samples, 0.04%)</title><rect x="0.3375%" y="613" width="0.0434%" height="15" fill="rgb(228,99,48)" fg:x="70" fg:w="9"/><text x="0.5875%" y="623.50"></text></g><g><title>`0x7FFEBDE48CAC (9 samples, 0.04%)</title><rect x="0.3375%" y="597" width="0.0434%" height="15" fill="rgb(253,11,6)" fg:x="70" fg:w="9"/><text x="0.5875%" y="607.50"></text></g><g><title>`0x7FFEBB5BC099 (10 samples, 0.05%)</title><rect x="0.3375%" y="693" width="0.0482%" height="15" fill="rgb(247,143,39)" fg:x="70" fg:w="10"/><text x="0.5875%" y="703.50"></text></g><g><title>labs2024.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt; &gt;,usize,usize,labs2024::main::closure_env$1,core::iter::traits::accum::impl$48::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,labs2024::main::closure_env$1&gt; &gt; &gt;*, unsigned long long, tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$&lt;alloc::vec::Vec (17 samples, 0.08%)</title><rect x="0.4098%" y="453" width="0.0820%" height="15" fill="rgb(236,97,10)" fg:x="85" fg:w="17"/><text x="0.6598%" y="463.50"></text></g><g><title>labs2024.exe`core::iter::traits::accum::impl$48::sum::closure$0(core::iter::traits::accum::impl$48::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::vec::Vec (17 samples, 0.08%)</title><rect x="0.4098%" y="437" width="0.0820%" height="15" fill="rgb(233,208,19)" fg:x="85" fg:w="17"/><text x="0.6598%" y="447.50"></text></g><g><title>labs2024.exe`core::iter::traits::iterator::Iterator::sum(core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::vec::Vec (19 samples, 0.09%)</title><rect x="0.4098%" y="517" width="0.0916%" height="15" fill="rgb(216,164,2)" fg:x="85" fg:w="19"/><text x="0.6598%" y="527.50"></text></g><g><title>labs2024.exe`core::iter::traits::accum::impl$48::sum(core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::vec::Vec (19 samples, 0.09%)</title><rect x="0.4098%" y="501" width="0.0916%" height="15" fill="rgb(220,129,5)" fg:x="85" fg:w="19"/><text x="0.6598%" y="511.50"></text></g><g><title>labs2024.exe`core::iter::adapters::map::impl$2::fold&lt;usize,std::collections::hash::map::Iter&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,labs2024::main::closure_env$1,usize,core::iter::traits::accum::impl$48::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,labs2024::main::closure_env$1&gt; &gt; &gt;(core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,labs2024::main::closure_env$1&gt;, unsigned long long, core::iter::traits::accum::impl$48::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::vec::Vec (19 samples, 0.09%)</title><rect x="0.4098%" y="485" width="0.0916%" height="15" fill="rgb(242,17,10)" fg:x="85" fg:w="19"/><text x="0.6598%" y="495.50"></text></g><g><title>labs2024.exe`core::iter::traits::iterator::Iterator::fold(std::collections::hash::map::Iter&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;, unsigned long long, core::iter::adapters::map::map_fold::closure_env$0&lt;tuple$&lt;ref$&lt;alloc::string::String&gt;,ref$&lt;alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt; &gt;,usize,usize,labs2024::main::closure_env$1,core::iter::traits::accum::impl$48::sum::closure_env$0&lt;core::iter::adapters::map::Map&lt;std::collections::hash::map::Iter&lt;alloc::string::String,alloc::vec::Vec (19 samples, 0.09%)</title><rect x="0.4098%" y="469" width="0.0916%" height="15" fill="rgb(242,107,0)" fg:x="85" fg:w="19"/><text x="0.6598%" y="479.50"></text></g><g><title>labs2024.exe`_mi_segment_page_free(mi_page_s*, bool, mi_segments_tld_s*) (3 samples, 0.01%)</title><rect x="0.5496%" y="229" width="0.0145%" height="15" fill="rgb(251,28,31)" fg:x="114" fg:w="3"/><text x="0.7996%" y="239.50"></text></g><g><title>labs2024.exe`mi_segment_page_clear(mi_page_s*, mi_segments_tld_s*) (3 samples, 0.01%)</title><rect x="0.5496%" y="213" width="0.0145%" height="15" fill="rgb(233,223,10)" fg:x="114" fg:w="3"/><text x="0.7996%" y="223.50"></text></g><g><title>labs2024.exe`_mi_segment_page_of(mi_segment_s const*, void const*) (71 samples, 0.34%)</title><rect x="0.6894%" y="213" width="0.3423%" height="15" fill="rgb(215,21,27)" fg:x="143" fg:w="71"/><text x="0.9394%" y="223.50"></text></g><g><title>labs2024.exe`mi_slice_first(mi_page_s const*) (60 samples, 0.29%)</title><rect x="0.7424%" y="197" width="0.2893%" height="15" fill="rgb(232,23,21)" fg:x="154" fg:w="60"/><text x="0.9924%" y="207.50"></text></g><g><title>labs2024.exe`mi_free(void*) (114 samples, 0.55%)</title><rect x="0.5640%" y="229" width="0.5496%" height="15" fill="rgb(244,5,23)" fg:x="117" fg:w="114"/><text x="0.8140%" y="239.50"></text></g><g><title>labs2024.exe`mi_checked_ptr_segment(void const*, char const*) (17 samples, 0.08%)</title><rect x="1.0317%" y="213" width="0.0820%" height="15" fill="rgb(226,81,46)" fg:x="214" fg:w="17"/><text x="1.2817%" y="223.50"></text></g><g><title>labs2024.exe`_mi_ptr_segment(void const*) (17 samples, 0.08%)</title><rect x="1.0317%" y="197" width="0.0820%" height="15" fill="rgb(247,70,30)" fg:x="214" fg:w="17"/><text x="1.2817%" y="207.50"></text></g><g><title>labs2024.exe`mi_free_block_local(mi_page_s*, mi_block_s*, bool, bool) (371 samples, 1.79%)</title><rect x="1.1136%" y="229" width="1.7886%" height="15" fill="rgb(212,68,19)" fg:x="231" fg:w="371"/><text x="1.3636%" y="239.50">l..</text></g><g><title>labs2024.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (493 samples, 2.38%)</title><rect x="0.5303%" y="293" width="2.3767%" height="15" fill="rgb(240,187,13)" fg:x="110" fg:w="493"/><text x="0.7803%" y="303.50">la..</text></g><g><title>labs2024.exe`alloc::alloc::dealloc (493 samples, 2.38%)</title><rect x="0.5303%" y="277" width="2.3767%" height="15" fill="rgb(223,113,26)" fg:x="110" fg:w="493"/><text x="0.7803%" y="287.50">la..</text></g><g><title>labs2024.exe`labs2024::_::__rust_dealloc (493 samples, 2.38%)</title><rect x="0.5303%" y="261" width="2.3767%" height="15" fill="rgb(206,192,2)" fg:x="110" fg:w="493"/><text x="0.7803%" y="271.50">la..</text></g><g><title>labs2024.exe`mimalloc::impl$0::dealloc (493 samples, 2.38%)</title><rect x="0.5303%" y="245" width="2.3767%" height="15" fill="rgb(241,108,4)" fg:x="110" fg:w="493"/><text x="0.7803%" y="255.50">la..</text></g><g><title>labs2024.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (797 samples, 3.84%)</title><rect x="0.5014%" y="373" width="3.8423%" height="15" fill="rgb(247,173,49)" fg:x="104" fg:w="797"/><text x="0.7514%" y="383.50">labs..</text></g><g><title>labs2024.exe`core::ptr::drop_in_place (795 samples, 3.83%)</title><rect x="0.5110%" y="357" width="3.8326%" height="15" fill="rgb(224,114,35)" fg:x="106" fg:w="795"/><text x="0.7610%" y="367.50">labs..</text></g><g><title>labs2024.exe`core::ptr::drop_in_place(alloc::vec::Vec (795 samples, 3.83%)</title><rect x="0.5110%" y="341" width="3.8326%" height="15" fill="rgb(245,159,27)" fg:x="106" fg:w="795"/><text x="0.7610%" y="351.50">labs..</text></g><g><title>labs2024.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (795 samples, 3.83%)</title><rect x="0.5110%" y="325" width="3.8326%" height="15" fill="rgb(245,172,44)" fg:x="106" fg:w="795"/><text x="0.7610%" y="335.50">labs..</text></g><g><title>labs2024.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (795 samples, 3.83%)</title><rect x="0.5110%" y="309" width="3.8326%" height="15" fill="rgb(236,23,11)" fg:x="106" fg:w="795"/><text x="0.7610%" y="319.50">labs..</text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory (298 samples, 1.44%)</title><rect x="2.9070%" y="293" width="1.4366%" height="15" fill="rgb(205,117,38)" fg:x="603" fg:w="298"/><text x="3.1570%" y="303.50"></text></g><g><title>labs2024.exe`mi_free(void*) (8 samples, 0.04%)</title><rect x="4.3436%" y="373" width="0.0386%" height="15" fill="rgb(237,72,25)" fg:x="901" fg:w="8"/><text x="4.5936%" y="383.50"></text></g><g><title>labs2024.exe`_mi_segment_page_of(mi_segment_s const*, void const*) (8 samples, 0.04%)</title><rect x="4.3436%" y="357" width="0.0386%" height="15" fill="rgb(244,70,9)" fg:x="901" fg:w="8"/><text x="4.5936%" y="367.50"></text></g><g><title>labs2024.exe`mi_slice_first(mi_page_s const*) (6 samples, 0.03%)</title><rect x="4.3533%" y="341" width="0.0289%" height="15" fill="rgb(217,125,39)" fg:x="903" fg:w="6"/><text x="4.6033%" y="351.50"></text></g><g><title>labs2024.exe`alloc::vec::impl$24::drop(alloc::vec::Vec (824 samples, 3.97%)</title><rect x="0.5014%" y="389" width="3.9724%" height="15" fill="rgb(235,36,10)" fg:x="104" fg:w="824"/><text x="0.7514%" y="399.50">labs..</text></g><g><title>labs2024.exe`mi_free_block_local(mi_page_s*, mi_block_s*, bool, bool) (19 samples, 0.09%)</title><rect x="4.3822%" y="373" width="0.0916%" height="15" fill="rgb(251,123,47)" fg:x="909" fg:w="19"/><text x="4.6322%" y="383.50"></text></g><g><title>labs2024.exe`_mi_segment_page_free(mi_page_s*, bool, mi_segments_tld_s*) (5 samples, 0.02%)</title><rect x="4.4738%" y="293" width="0.0241%" height="15" fill="rgb(221,13,13)" fg:x="928" fg:w="5"/><text x="4.7238%" y="303.50"></text></g><g><title>labs2024.exe`mi_segment_page_clear(mi_page_s*, mi_segments_tld_s*) (4 samples, 0.02%)</title><rect x="4.4786%" y="277" width="0.0193%" height="15" fill="rgb(238,131,9)" fg:x="929" fg:w="4"/><text x="4.7286%" y="287.50"></text></g><g><title>labs2024.exe`mi_segment_span_free_coalesce(mi_page_s*, mi_segments_tld_s*) (4 samples, 0.02%)</title><rect x="4.4786%" y="261" width="0.0193%" height="15" fill="rgb(211,50,8)" fg:x="929" fg:w="4"/><text x="4.7286%" y="271.50"></text></g><g><title>labs2024.exe`mi_segment_span_free(mi_segment_s*, unsigned long long, unsigned long long, bool, mi_segments_tld_s*) (3 samples, 0.01%)</title><rect x="4.4834%" y="245" width="0.0145%" height="15" fill="rgb(245,182,24)" fg:x="930" fg:w="3"/><text x="4.7334%" y="255.50"></text></g><g><title>labs2024.exe`mi_segment_schedule_purge(mi_segment_s*, unsigned char*, unsigned long long, mi_stats_s*) (3 samples, 0.01%)</title><rect x="4.4834%" y="229" width="0.0145%" height="15" fill="rgb(242,14,37)" fg:x="930" fg:w="3"/><text x="4.7334%" y="239.50"></text></g><g><title>labs2024.exe`_mi_segment_page_of(mi_segment_s const*, void const*) (10 samples, 0.05%)</title><rect x="4.5075%" y="277" width="0.0482%" height="15" fill="rgb(246,228,12)" fg:x="935" fg:w="10"/><text x="4.7575%" y="287.50"></text></g><g><title>labs2024.exe`mi_slice_first(mi_page_s const*) (9 samples, 0.04%)</title><rect x="4.5124%" y="261" width="0.0434%" height="15" fill="rgb(213,55,15)" fg:x="936" fg:w="9"/><text x="4.7624%" y="271.50"></text></g><g><title>labs2024.exe`mi_free(void*) (14 samples, 0.07%)</title><rect x="4.4979%" y="293" width="0.0675%" height="15" fill="rgb(209,9,3)" fg:x="933" fg:w="14"/><text x="4.7479%" y="303.50"></text></g><g><title>labs2024.exe`mi_free_block_local(mi_page_s*, mi_block_s*, bool, bool) (8 samples, 0.04%)</title><rect x="4.5654%" y="293" width="0.0386%" height="15" fill="rgb(230,59,30)" fg:x="947" fg:w="8"/><text x="4.8154%" y="303.50"></text></g><g><title>labs2024.exe`core::ptr::drop_in_place(alloc::vec::Vec (853 samples, 4.11%)</title><rect x="0.5014%" y="405" width="4.1122%" height="15" fill="rgb(209,121,21)" fg:x="104" fg:w="853"/><text x="0.7514%" y="415.50">labs..</text></g><g><title>labs2024.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (29 samples, 0.14%)</title><rect x="4.4738%" y="389" width="0.1398%" height="15" fill="rgb(220,109,13)" fg:x="928" fg:w="29"/><text x="4.7238%" y="399.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (29 samples, 0.14%)</title><rect x="4.4738%" y="373" width="0.1398%" height="15" fill="rgb(232,18,1)" fg:x="928" fg:w="29"/><text x="4.7238%" y="383.50"></text></g><g><title>labs2024.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (29 samples, 0.14%)</title><rect x="4.4738%" y="357" width="0.1398%" height="15" fill="rgb(215,41,42)" fg:x="928" fg:w="29"/><text x="4.7238%" y="367.50"></text></g><g><title>labs2024.exe`alloc::alloc::dealloc (29 samples, 0.14%)</title><rect x="4.4738%" y="341" width="0.1398%" height="15" fill="rgb(224,123,36)" fg:x="928" fg:w="29"/><text x="4.7238%" y="351.50"></text></g><g><title>labs2024.exe`labs2024::_::__rust_dealloc (29 samples, 0.14%)</title><rect x="4.4738%" y="325" width="0.1398%" height="15" fill="rgb(240,125,3)" fg:x="928" fg:w="29"/><text x="4.7238%" y="335.50"></text></g><g><title>labs2024.exe`mimalloc::impl$0::dealloc (29 samples, 0.14%)</title><rect x="4.4738%" y="309" width="0.1398%" height="15" fill="rgb(205,98,50)" fg:x="928" fg:w="29"/><text x="4.7238%" y="319.50"></text></g><g><title>labs2024.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt; &gt;::drop (867 samples, 4.18%)</title><rect x="0.5014%" y="453" width="4.1797%" height="15" fill="rgb(205,185,37)" fg:x="104" fg:w="867"/><text x="0.7514%" y="463.50">labs2..</text></g><g><title>labs2024.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$&lt;alloc::string::String,alloc::vec::Vec (867 samples, 4.18%)</title><rect x="0.5014%" y="437" width="4.1797%" height="15" fill="rgb(238,207,15)" fg:x="104" fg:w="867"/><text x="0.7514%" y="447.50">labs2..</text></g><g><title>labs2024.exe`core::ptr::drop_in_place(tuple$&lt;alloc::string::String,alloc::vec::Vec (867 samples, 4.18%)</title><rect x="0.5014%" y="421" width="4.1797%" height="15" fill="rgb(213,199,42)" fg:x="104" fg:w="867"/><text x="0.7514%" y="431.50">labs2..</text></g><g><title>labs2024.exe`core::ptr::drop_in_place (14 samples, 0.07%)</title><rect x="4.6136%" y="405" width="0.0675%" height="15" fill="rgb(235,201,11)" fg:x="957" fg:w="14"/><text x="4.8636%" y="415.50"></text></g><g><title>labs2024.exe`core::ptr::drop_in_place(alloc::vec::Vec (14 samples, 0.07%)</title><rect x="4.6136%" y="389" width="0.0675%" height="15" fill="rgb(207,46,11)" fg:x="957" fg:w="14"/><text x="4.8636%" y="399.50"></text></g><g><title>labs2024.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (14 samples, 0.07%)</title><rect x="4.6136%" y="373" width="0.0675%" height="15" fill="rgb(241,35,35)" fg:x="957" fg:w="14"/><text x="4.8636%" y="383.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (14 samples, 0.07%)</title><rect x="4.6136%" y="357" width="0.0675%" height="15" fill="rgb(243,32,47)" fg:x="957" fg:w="14"/><text x="4.8636%" y="367.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory (14 samples, 0.07%)</title><rect x="4.6136%" y="341" width="0.0675%" height="15" fill="rgb(247,202,23)" fg:x="957" fg:w="14"/><text x="4.8636%" y="351.50"></text></g><g><title>labs2024.exe`core::mem::drop (869 samples, 4.19%)</title><rect x="0.5014%" y="517" width="4.1894%" height="15" fill="rgb(219,102,11)" fg:x="104" fg:w="869"/><text x="0.7514%" y="527.50">labs2..</text></g><g><title>labs2024.exe`core::ptr::drop_in_place (869 samples, 4.19%)</title><rect x="0.5014%" y="501" width="4.1894%" height="15" fill="rgb(243,110,44)" fg:x="104" fg:w="869"/><text x="0.7514%" y="511.50">labs2..</text></g><g><title>labs2024.exe`hashbrown::raw::impl$17::drop&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec (869 samples, 4.19%)</title><rect x="0.5014%" y="485" width="4.1894%" height="15" fill="rgb(222,74,54)" fg:x="104" fg:w="869"/><text x="0.7514%" y="495.50">labs2..</text></g><g><title>labs2024.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::drop_elements (869 samples, 4.19%)</title><rect x="0.5014%" y="469" width="4.1894%" height="15" fill="rgb(216,99,12)" fg:x="104" fg:w="869"/><text x="0.7514%" y="479.50">labs2..</text></g><g><title>labs2024.exe`mi_free(void*) (5 samples, 0.02%)</title><rect x="4.6907%" y="261" width="0.0241%" height="15" fill="rgb(226,22,26)" fg:x="973" fg:w="5"/><text x="4.9407%" y="271.50"></text></g><g><title>labs2024.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (11 samples, 0.05%)</title><rect x="4.6907%" y="325" width="0.0530%" height="15" fill="rgb(217,163,10)" fg:x="973" fg:w="11"/><text x="4.9407%" y="335.50"></text></g><g><title>labs2024.exe`alloc::alloc::dealloc (11 samples, 0.05%)</title><rect x="4.6907%" y="309" width="0.0530%" height="15" fill="rgb(213,25,53)" fg:x="973" fg:w="11"/><text x="4.9407%" y="319.50"></text></g><g><title>labs2024.exe`labs2024::_::__rust_dealloc (11 samples, 0.05%)</title><rect x="4.6907%" y="293" width="0.0530%" height="15" fill="rgb(252,105,26)" fg:x="973" fg:w="11"/><text x="4.9407%" y="303.50"></text></g><g><title>labs2024.exe`mimalloc::impl$0::dealloc (11 samples, 0.05%)</title><rect x="4.6907%" y="277" width="0.0530%" height="15" fill="rgb(220,39,43)" fg:x="973" fg:w="11"/><text x="4.9407%" y="287.50"></text></g><g><title>labs2024.exe`mi_free_block_local(mi_page_s*, mi_block_s*, bool, bool) (6 samples, 0.03%)</title><rect x="4.7148%" y="261" width="0.0289%" height="15" fill="rgb(229,68,48)" fg:x="978" fg:w="6"/><text x="4.9648%" y="271.50"></text></g><g><title>labs2024.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,f64&gt; &gt;::drop (20 samples, 0.10%)</title><rect x="4.6907%" y="437" width="0.0964%" height="15" fill="rgb(252,8,32)" fg:x="973" fg:w="20"/><text x="4.9407%" y="447.50"></text></g><g><title>labs2024.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (20 samples, 0.10%)</title><rect x="4.6907%" y="421" width="0.0964%" height="15" fill="rgb(223,20,43)" fg:x="973" fg:w="20"/><text x="4.9407%" y="431.50"></text></g><g><title>labs2024.exe`core::ptr::drop_in_place(tuple$ (20 samples, 0.10%)</title><rect x="4.6907%" y="405" width="0.0964%" height="15" fill="rgb(229,81,49)" fg:x="973" fg:w="20"/><text x="4.9407%" y="415.50"></text></g><g><title>labs2024.exe`core::ptr::drop_in_place (20 samples, 0.10%)</title><rect x="4.6907%" y="389" width="0.0964%" height="15" fill="rgb(236,28,36)" fg:x="973" fg:w="20"/><text x="4.9407%" y="399.50"></text></g><g><title>labs2024.exe`core::ptr::drop_in_place(alloc::vec::Vec (20 samples, 0.10%)</title><rect x="4.6907%" y="373" width="0.0964%" height="15" fill="rgb(249,185,26)" fg:x="973" fg:w="20"/><text x="4.9407%" y="383.50"></text></g><g><title>labs2024.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (20 samples, 0.10%)</title><rect x="4.6907%" y="357" width="0.0964%" height="15" fill="rgb(249,174,33)" fg:x="973" fg:w="20"/><text x="4.9407%" y="367.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (20 samples, 0.10%)</title><rect x="4.6907%" y="341" width="0.0964%" height="15" fill="rgb(233,201,37)" fg:x="973" fg:w="20"/><text x="4.9407%" y="351.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory (9 samples, 0.04%)</title><rect x="4.7438%" y="325" width="0.0434%" height="15" fill="rgb(221,78,26)" fg:x="984" fg:w="9"/><text x="4.9938%" y="335.50"></text></g><g><title>labs2024.exe`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,f64,std::collections::hash::map::RandomState&gt; &gt;(std::collections::hash::map::HashMap (24 samples, 0.12%)</title><rect x="4.6907%" y="517" width="0.1157%" height="15" fill="rgb(250,127,30)" fg:x="973" fg:w="24"/><text x="4.9407%" y="527.50"></text></g><g><title>labs2024.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (24 samples, 0.12%)</title><rect x="4.6907%" y="501" width="0.1157%" height="15" fill="rgb(230,49,44)" fg:x="973" fg:w="24"/><text x="4.9407%" y="511.50"></text></g><g><title>labs2024.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (24 samples, 0.12%)</title><rect x="4.6907%" y="485" width="0.1157%" height="15" fill="rgb(229,67,23)" fg:x="973" fg:w="24"/><text x="4.9407%" y="495.50"></text></g><g><title>labs2024.exe`hashbrown::raw::impl$17::drop(hashbrown::raw::RawTable&lt;tuple$ (24 samples, 0.12%)</title><rect x="4.6907%" y="469" width="0.1157%" height="15" fill="rgb(249,83,47)" fg:x="973" fg:w="24"/><text x="4.9407%" y="479.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,f64&gt;,alloc::alloc::Global&gt;::drop_elements (24 samples, 0.12%)</title><rect x="4.6907%" y="453" width="0.1157%" height="15" fill="rgb(215,43,3)" fg:x="973" fg:w="24"/><text x="4.9407%" y="463.50"></text></g><g><title>labs2024.exe`hashbrown::raw::impl$27::next(hashbrown::raw::RawIter&lt;tuple$ (4 samples, 0.02%)</title><rect x="4.7872%" y="437" width="0.0193%" height="15" fill="rgb(238,154,13)" fg:x="993" fg:w="4"/><text x="5.0372%" y="447.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawIterRange&lt;tuple$&lt;alloc::string::String,f64&gt; &gt;::next_impl (3 samples, 0.01%)</title><rect x="4.7920%" y="421" width="0.0145%" height="15" fill="rgb(219,56,2)" fg:x="994" fg:w="3"/><text x="5.0420%" y="431.50"></text></g><g><title>labs2024.exe`hashbrown::raw::sse2::Group::load_aligned (3 samples, 0.01%)</title><rect x="4.7920%" y="405" width="0.0145%" height="15" fill="rgb(233,0,4)" fg:x="994" fg:w="3"/><text x="5.0420%" y="415.50"></text></g><g><title>labs2024.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (3 samples, 0.01%)</title><rect x="4.7920%" y="389" width="0.0145%" height="15" fill="rgb(235,30,7)" fg:x="994" fg:w="3"/><text x="5.0420%" y="399.50"></text></g><g><title>labs2024.exe`mi_page_extend_free(mi_heap_s*, mi_page_s*, mi_tld_s*) (3 samples, 0.01%)</title><rect x="5.1294%" y="197" width="0.0145%" height="15" fill="rgb(250,79,13)" fg:x="1064" fg:w="3"/><text x="5.3794%" y="207.50"></text></g><g><title>labs2024.exe`mi_page_free_list_extend(mi_page_s* const, const unsigned long long, const unsigned long long, mi_stats_s* const) (3 samples, 0.01%)</title><rect x="5.1294%" y="181" width="0.0145%" height="15" fill="rgb(211,146,34)" fg:x="1064" fg:w="3"/><text x="5.3794%" y="191.50"></text></g><g><title>labs2024.exe`_mi_malloc_generic(mi_heap_s*, unsigned long long, bool, unsigned long long) (5 samples, 0.02%)</title><rect x="5.1294%" y="229" width="0.0241%" height="15" fill="rgb(228,22,38)" fg:x="1064" fg:w="5"/><text x="5.3794%" y="239.50"></text></g><g><title>labs2024.exe`mi_page_queue_find_free_ex(mi_heap_s*, mi_page_queue_s*, bool) (5 samples, 0.02%)</title><rect x="5.1294%" y="213" width="0.0241%" height="15" fill="rgb(235,168,5)" fg:x="1064" fg:w="5"/><text x="5.3794%" y="223.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_aligned_at(mi_heap_s*, unsigned long long, unsigned long long, unsigned long long) (13 samples, 0.06%)</title><rect x="5.1246%" y="245" width="0.0627%" height="15" fill="rgb(221,155,16)" fg:x="1063" fg:w="13"/><text x="5.3746%" y="255.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_zero_aligned_at(mi_heap_s* const, const unsigned long long, const unsigned long long, const unsigned long long, const bool) (7 samples, 0.03%)</title><rect x="5.1535%" y="229" width="0.0337%" height="15" fill="rgb(215,215,53)" fg:x="1069" fg:w="7"/><text x="5.4035%" y="239.50"></text></g><g><title>labs2024.exe`_mi_page_malloc(mi_heap_s*, mi_page_s*, unsigned long long, bool) (3 samples, 0.01%)</title><rect x="5.1728%" y="213" width="0.0145%" height="15" fill="rgb(223,4,10)" fg:x="1073" fg:w="3"/><text x="5.4228%" y="223.50"></text></g><g><title>labs2024.exe`alloc::string::impl$47::to_string(ref$ (17 samples, 0.08%)</title><rect x="5.1150%" y="501" width="0.0820%" height="15" fill="rgb(234,103,6)" fg:x="1061" fg:w="17"/><text x="5.3650%" y="511.50"></text></g><g><title>labs2024.exe`alloc::string::impl$54::from(ref$ (17 samples, 0.08%)</title><rect x="5.1150%" y="485" width="0.0820%" height="15" fill="rgb(227,97,0)" fg:x="1061" fg:w="17"/><text x="5.3650%" y="495.50"></text></g><g><title>labs2024.exe`alloc::str::impl$4::to_owned(ref$ (17 samples, 0.08%)</title><rect x="5.1150%" y="469" width="0.0820%" height="15" fill="rgb(234,150,53)" fg:x="1061" fg:w="17"/><text x="5.3650%" y="479.50"></text></g><g><title>labs2024.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (17 samples, 0.08%)</title><rect x="5.1150%" y="453" width="0.0820%" height="15" fill="rgb(228,201,54)" fg:x="1061" fg:w="17"/><text x="5.3650%" y="463.50"></text></g><g><title>labs2024.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (15 samples, 0.07%)</title><rect x="5.1246%" y="437" width="0.0723%" height="15" fill="rgb(222,22,37)" fg:x="1063" fg:w="15"/><text x="5.3746%" y="447.50"></text></g><g><title>labs2024.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (15 samples, 0.07%)</title><rect x="5.1246%" y="421" width="0.0723%" height="15" fill="rgb(237,53,32)" fg:x="1063" fg:w="15"/><text x="5.3746%" y="431.50"></text></g><g><title>labs2024.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (15 samples, 0.07%)</title><rect x="5.1246%" y="405" width="0.0723%" height="15" fill="rgb(233,25,53)" fg:x="1063" fg:w="15"/><text x="5.3746%" y="415.50"></text></g><g><title>labs2024.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (15 samples, 0.07%)</title><rect x="5.1246%" y="389" width="0.0723%" height="15" fill="rgb(210,40,34)" fg:x="1063" fg:w="15"/><text x="5.3746%" y="399.50"></text></g><g><title>labs2024.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (15 samples, 0.07%)</title><rect x="5.1246%" y="373" width="0.0723%" height="15" fill="rgb(241,220,44)" fg:x="1063" fg:w="15"/><text x="5.3746%" y="383.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (15 samples, 0.07%)</title><rect x="5.1246%" y="357" width="0.0723%" height="15" fill="rgb(235,28,35)" fg:x="1063" fg:w="15"/><text x="5.3746%" y="367.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::allocate_in (15 samples, 0.07%)</title><rect x="5.1246%" y="341" width="0.0723%" height="15" fill="rgb(210,56,17)" fg:x="1063" fg:w="15"/><text x="5.3746%" y="351.50"></text></g><g><title>labs2024.exe`alloc::alloc::impl$1::allocate (15 samples, 0.07%)</title><rect x="5.1246%" y="325" width="0.0723%" height="15" fill="rgb(224,130,29)" fg:x="1063" fg:w="15"/><text x="5.3746%" y="335.50"></text></g><g><title>labs2024.exe`alloc::alloc::Global::alloc_impl (15 samples, 0.07%)</title><rect x="5.1246%" y="309" width="0.0723%" height="15" fill="rgb(235,212,8)" fg:x="1063" fg:w="15"/><text x="5.3746%" y="319.50"></text></g><g><title>labs2024.exe`alloc::alloc::alloc (15 samples, 0.07%)</title><rect x="5.1246%" y="293" width="0.0723%" height="15" fill="rgb(223,33,50)" fg:x="1063" fg:w="15"/><text x="5.3746%" y="303.50"></text></g><g><title>labs2024.exe`labs2024::_::__rust_alloc (15 samples, 0.07%)</title><rect x="5.1246%" y="277" width="0.0723%" height="15" fill="rgb(219,149,13)" fg:x="1063" fg:w="15"/><text x="5.3746%" y="287.50"></text></g><g><title>labs2024.exe`mimalloc::impl$0::alloc (15 samples, 0.07%)</title><rect x="5.1246%" y="261" width="0.0723%" height="15" fill="rgb(250,156,29)" fg:x="1063" fg:w="15"/><text x="5.3746%" y="271.50"></text></g><g><title>labs2024.exe`_mi_malloc_generic(mi_heap_s*, unsigned long long, bool, unsigned long long) (10 samples, 0.05%)</title><rect x="5.2162%" y="325" width="0.0482%" height="15" fill="rgb(216,193,19)" fg:x="1082" fg:w="10"/><text x="5.4662%" y="335.50"></text></g><g><title>labs2024.exe`mi_page_queue_find_free_ex(mi_heap_s*, mi_page_queue_s*, bool) (7 samples, 0.03%)</title><rect x="5.2307%" y="309" width="0.0337%" height="15" fill="rgb(216,135,14)" fg:x="1085" fg:w="7"/><text x="5.4807%" y="319.50"></text></g><g><title>labs2024.exe`mi_page_extend_free(mi_heap_s*, mi_page_s*, mi_tld_s*) (6 samples, 0.03%)</title><rect x="5.2355%" y="293" width="0.0289%" height="15" fill="rgb(241,47,5)" fg:x="1086" fg:w="6"/><text x="5.4855%" y="303.50"></text></g><g><title>labs2024.exe`mi_page_free_list_extend(mi_page_s* const, const unsigned long long, const unsigned long long, mi_stats_s* const) (6 samples, 0.03%)</title><rect x="5.2355%" y="277" width="0.0289%" height="15" fill="rgb(233,42,35)" fg:x="1086" fg:w="6"/><text x="5.4855%" y="287.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_small(mi_heap_s*, unsigned long long) (8 samples, 0.04%)</title><rect x="5.2692%" y="325" width="0.0386%" height="15" fill="rgb(231,13,6)" fg:x="1093" fg:w="8"/><text x="5.5192%" y="335.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_small_zero(mi_heap_s*, unsigned long long, bool) (8 samples, 0.04%)</title><rect x="5.2692%" y="309" width="0.0386%" height="15" fill="rgb(207,181,40)" fg:x="1093" fg:w="8"/><text x="5.5192%" y="319.50"></text></g><g><title>labs2024.exe`_mi_page_malloc(mi_heap_s*, mi_page_s*, unsigned long long, bool) (6 samples, 0.03%)</title><rect x="5.2789%" y="293" width="0.0289%" height="15" fill="rgb(254,173,49)" fg:x="1095" fg:w="6"/><text x="5.5289%" y="303.50"></text></g><g><title>labs2024.exe`alloc::vec::Vec::with_capacity_in (22 samples, 0.11%)</title><rect x="5.2114%" y="421" width="0.1061%" height="15" fill="rgb(221,1,38)" fg:x="1081" fg:w="22"/><text x="5.4614%" y="431.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec::with_capacity_in (22 samples, 0.11%)</title><rect x="5.2114%" y="405" width="0.1061%" height="15" fill="rgb(206,124,46)" fg:x="1081" fg:w="22"/><text x="5.4614%" y="415.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec::allocate_in (22 samples, 0.11%)</title><rect x="5.2114%" y="389" width="0.1061%" height="15" fill="rgb(249,21,11)" fg:x="1081" fg:w="22"/><text x="5.4614%" y="399.50"></text></g><g><title>labs2024.exe`alloc::alloc::impl$1::allocate (21 samples, 0.10%)</title><rect x="5.2162%" y="373" width="0.1012%" height="15" fill="rgb(222,201,40)" fg:x="1082" fg:w="21"/><text x="5.4662%" y="383.50"></text></g><g><title>labs2024.exe`alloc::alloc::Global::alloc_impl (21 samples, 0.10%)</title><rect x="5.2162%" y="357" width="0.1012%" height="15" fill="rgb(235,61,29)" fg:x="1082" fg:w="21"/><text x="5.4662%" y="367.50"></text></g><g><title>labs2024.exe`alloc::alloc::alloc (21 samples, 0.10%)</title><rect x="5.2162%" y="341" width="0.1012%" height="15" fill="rgb(219,207,3)" fg:x="1082" fg:w="21"/><text x="5.4662%" y="351.50"></text></g><g><title>labs2024.exe`alloc::string::impl$6::clone (29 samples, 0.14%)</title><rect x="5.1969%" y="501" width="0.1398%" height="15" fill="rgb(222,56,46)" fg:x="1078" fg:w="29"/><text x="5.4469%" y="511.50"></text></g><g><title>labs2024.exe`alloc::vec::impl$10::clone (26 samples, 0.13%)</title><rect x="5.2114%" y="485" width="0.1253%" height="15" fill="rgb(239,76,54)" fg:x="1081" fg:w="26"/><text x="5.4614%" y="495.50"></text></g><g><title>labs2024.exe`alloc::slice::impl$0::to_vec_in (26 samples, 0.13%)</title><rect x="5.2114%" y="469" width="0.1253%" height="15" fill="rgb(231,124,27)" fg:x="1081" fg:w="26"/><text x="5.4614%" y="479.50"></text></g><g><title>labs2024.exe`alloc::slice::hack::to_vec (26 samples, 0.13%)</title><rect x="5.2114%" y="453" width="0.1253%" height="15" fill="rgb(249,195,6)" fg:x="1081" fg:w="26"/><text x="5.4614%" y="463.50"></text></g><g><title>labs2024.exe`alloc::slice::hack::impl$1::to_vec (26 samples, 0.13%)</title><rect x="5.2114%" y="437" width="0.1253%" height="15" fill="rgb(237,174,47)" fg:x="1081" fg:w="26"/><text x="5.4614%" y="447.50"></text></g><g><title>labs2024.exe`core::ptr::const_ptr::impl$0::copy_to_nonoverlapping (4 samples, 0.02%)</title><rect x="5.3175%" y="421" width="0.0193%" height="15" fill="rgb(206,201,31)" fg:x="1103" fg:w="4"/><text x="5.5675%" y="431.50"></text></g><g><title>labs2024.exe`core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="5.3175%" y="405" width="0.0193%" height="15" fill="rgb(231,57,52)" fg:x="1103" fg:w="4"/><text x="5.5675%" y="415.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::current_memory (3 samples, 0.01%)</title><rect x="5.5007%" y="453" width="0.0145%" height="15" fill="rgb(248,177,22)" fg:x="1141" fg:w="3"/><text x="5.7507%" y="463.50"></text></g><g><title>labs2024.exe`_mi_page_malloc(mi_heap_s*, mi_page_s*, unsigned long long, bool) (14 samples, 0.07%)</title><rect x="5.5922%" y="373" width="0.0675%" height="15" fill="rgb(215,211,37)" fg:x="1160" fg:w="14"/><text x="5.8422%" y="383.50"></text></g><g><title>labs2024.exe`mi_find_page(mi_heap_s*, unsigned long long, unsigned long long) (3 samples, 0.01%)</title><rect x="5.6597%" y="373" width="0.0145%" height="15" fill="rgb(241,128,51)" fg:x="1174" fg:w="3"/><text x="5.9097%" y="383.50"></text></g><g><title>labs2024.exe`mi_find_free_page(mi_heap_s*, unsigned long long) (3 samples, 0.01%)</title><rect x="5.6597%" y="357" width="0.0145%" height="15" fill="rgb(227,165,31)" fg:x="1174" fg:w="3"/><text x="5.9097%" y="367.50"></text></g><g><title>labs2024.exe`mi_page_extend_free(mi_heap_s*, mi_page_s*, mi_tld_s*) (106 samples, 0.51%)</title><rect x="5.6887%" y="357" width="0.5110%" height="15" fill="rgb(228,167,24)" fg:x="1180" fg:w="106"/><text x="5.9387%" y="367.50"></text></g><g><title>labs2024.exe`mi_page_free_list_extend(mi_page_s* const, const unsigned long long, const unsigned long long, mi_stats_s* const) (105 samples, 0.51%)</title><rect x="5.6935%" y="341" width="0.5062%" height="15" fill="rgb(228,143,12)" fg:x="1181" fg:w="105"/><text x="5.9435%" y="351.50"></text></g><g><title>labs2024.exe`mi_segment_span_free_coalesce(mi_page_s*, mi_segments_tld_s*) (4 samples, 0.02%)</title><rect x="6.1997%" y="293" width="0.0193%" height="15" fill="rgb(249,149,8)" fg:x="1286" fg:w="4"/><text x="6.4497%" y="303.50"></text></g><g><title>labs2024.exe`mi_segment_span_free(mi_segment_s*, unsigned long long, unsigned long long, bool, mi_segments_tld_s*) (3 samples, 0.01%)</title><rect x="6.2045%" y="277" width="0.0145%" height="15" fill="rgb(243,35,44)" fg:x="1287" fg:w="3"/><text x="6.4545%" y="287.50"></text></g><g><title>labs2024.exe`mi_segment_schedule_purge(mi_segment_s*, unsigned char*, unsigned long long, mi_stats_s*) (3 samples, 0.01%)</title><rect x="6.2045%" y="261" width="0.0145%" height="15" fill="rgb(246,89,9)" fg:x="1287" fg:w="3"/><text x="6.4545%" y="271.50"></text></g><g><title>labs2024.exe`_mi_heap_collect_retired(mi_heap_s*, bool) (5 samples, 0.02%)</title><rect x="6.1997%" y="341" width="0.0241%" height="15" fill="rgb(233,213,13)" fg:x="1286" fg:w="5"/><text x="6.4497%" y="351.50"></text></g><g><title>labs2024.exe`_mi_segment_page_free(mi_page_s*, bool, mi_segments_tld_s*) (5 samples, 0.02%)</title><rect x="6.1997%" y="325" width="0.0241%" height="15" fill="rgb(233,141,41)" fg:x="1286" fg:w="5"/><text x="6.4497%" y="335.50"></text></g><g><title>labs2024.exe`mi_segment_page_clear(mi_page_s*, mi_segments_tld_s*) (5 samples, 0.02%)</title><rect x="6.1997%" y="309" width="0.0241%" height="15" fill="rgb(239,167,4)" fg:x="1286" fg:w="5"/><text x="6.4497%" y="319.50"></text></g><g><title>labs2024.exe`_mi_segment_page_alloc(mi_heap_s*, unsigned long long, unsigned long long, mi_segments_tld_s*, mi_os_tld_s*) (8 samples, 0.04%)</title><rect x="6.2238%" y="325" width="0.0386%" height="15" fill="rgb(209,217,16)" fg:x="1291" fg:w="8"/><text x="6.4738%" y="335.50"></text></g><g><title>labs2024.exe`mi_segments_page_alloc(mi_heap_s*, mi_page_kind_e, unsigned long long, unsigned long long, mi_segments_tld_s*, mi_os_tld_s*) (8 samples, 0.04%)</title><rect x="6.2238%" y="309" width="0.0386%" height="15" fill="rgb(219,88,35)" fg:x="1291" fg:w="8"/><text x="6.4738%" y="319.50"></text></g><g><title>labs2024.exe`mi_segments_page_find_and_allocate(unsigned long long, int, mi_segments_tld_s*) (8 samples, 0.04%)</title><rect x="6.2238%" y="293" width="0.0386%" height="15" fill="rgb(220,193,23)" fg:x="1291" fg:w="8"/><text x="6.4738%" y="303.50"></text></g><g><title>labs2024.exe`mi_segment_span_allocate(mi_segment_s*, unsigned long long, unsigned long long, mi_segments_tld_s*) (7 samples, 0.03%)</title><rect x="6.2286%" y="277" width="0.0337%" height="15" fill="rgb(230,90,52)" fg:x="1292" fg:w="7"/><text x="6.4786%" y="287.50"></text></g><g><title>labs2024.exe`mi_segment_commit(mi_segment_s*, unsigned char*, unsigned long long, mi_stats_s*) (7 samples, 0.03%)</title><rect x="6.2286%" y="261" width="0.0337%" height="15" fill="rgb(252,106,19)" fg:x="1292" fg:w="7"/><text x="6.4786%" y="271.50"></text></g><g><title>labs2024.exe`mi_option_get(mi_option_e) (3 samples, 0.01%)</title><rect x="6.2479%" y="245" width="0.0145%" height="15" fill="rgb(206,74,20)" fg:x="1296" fg:w="3"/><text x="6.4979%" y="255.50"></text></g><g><title>labs2024.exe`_mi_prim_clock_now() (3 samples, 0.01%)</title><rect x="6.2479%" y="229" width="0.0145%" height="15" fill="rgb(230,138,44)" fg:x="1296" fg:w="3"/><text x="6.4979%" y="239.50"></text></g><g><title>labs2024.exe`mi_to_msecs(_LARGE_INTEGER) (3 samples, 0.01%)</title><rect x="6.2479%" y="213" width="0.0145%" height="15" fill="rgb(235,182,43)" fg:x="1296" fg:w="3"/><text x="6.4979%" y="223.50"></text></g><g><title>labs2024.exe`mi_page_fresh(mi_heap_s*, mi_page_queue_s*) (26 samples, 0.13%)</title><rect x="6.1997%" y="357" width="0.1253%" height="15" fill="rgb(242,16,51)" fg:x="1286" fg:w="26"/><text x="6.4497%" y="367.50"></text></g><g><title>labs2024.exe`mi_page_fresh_alloc(mi_heap_s*, mi_page_queue_s*, unsigned long long, unsigned long long) (21 samples, 0.10%)</title><rect x="6.2238%" y="341" width="0.1012%" height="15" fill="rgb(248,9,4)" fg:x="1291" fg:w="21"/><text x="6.4738%" y="351.50"></text></g><g><title>labs2024.exe`mi_page_extend_free(mi_heap_s*, mi_page_s*, mi_tld_s*) (13 samples, 0.06%)</title><rect x="6.2624%" y="325" width="0.0627%" height="15" fill="rgb(210,31,22)" fg:x="1299" fg:w="13"/><text x="6.5124%" y="335.50"></text></g><g><title>labs2024.exe`mi_page_free_list_extend(mi_page_s* const, const unsigned long long, const unsigned long long, mi_stats_s* const) (13 samples, 0.06%)</title><rect x="6.2624%" y="309" width="0.0627%" height="15" fill="rgb(239,54,39)" fg:x="1299" fg:w="13"/><text x="6.5124%" y="319.50"></text></g><g><title>labs2024.exe`_mi_malloc_generic(mi_heap_s*, unsigned long long, bool, unsigned long long) (157 samples, 0.76%)</title><rect x="5.5778%" y="389" width="0.7569%" height="15" fill="rgb(230,99,41)" fg:x="1157" fg:w="157"/><text x="5.8278%" y="399.50"></text></g><g><title>labs2024.exe`mi_page_queue_find_free_ex(mi_heap_s*, mi_page_queue_s*, bool) (137 samples, 0.66%)</title><rect x="5.6742%" y="373" width="0.6605%" height="15" fill="rgb(253,106,12)" fg:x="1177" fg:w="137"/><text x="5.9242%" y="383.50"></text></g><g><title>labs2024.exe`_mi_memcpy(void*, void const*, unsigned long long) (82 samples, 0.40%)</title><rect x="6.3347%" y="389" width="0.3953%" height="15" fill="rgb(213,46,41)" fg:x="1314" fg:w="82"/><text x="6.5847%" y="399.50"></text></g><g><title>labs2024.exe`_mi_segment_page_free(mi_page_s*, bool, mi_segments_tld_s*) (8 samples, 0.04%)</title><rect x="6.7300%" y="389" width="0.0386%" height="15" fill="rgb(215,133,35)" fg:x="1396" fg:w="8"/><text x="6.9800%" y="399.50"></text></g><g><title>labs2024.exe`mi_segment_page_clear(mi_page_s*, mi_segments_tld_s*) (8 samples, 0.04%)</title><rect x="6.7300%" y="373" width="0.0386%" height="15" fill="rgb(213,28,5)" fg:x="1396" fg:w="8"/><text x="6.9800%" y="383.50"></text></g><g><title>labs2024.exe`mi_segment_span_free_coalesce(mi_page_s*, mi_segments_tld_s*) (8 samples, 0.04%)</title><rect x="6.7300%" y="357" width="0.0386%" height="15" fill="rgb(215,77,49)" fg:x="1396" fg:w="8"/><text x="6.9800%" y="367.50"></text></g><g><title>labs2024.exe`mi_segment_span_free(mi_segment_s*, unsigned long long, unsigned long long, bool, mi_segments_tld_s*) (8 samples, 0.04%)</title><rect x="6.7300%" y="341" width="0.0386%" height="15" fill="rgb(248,100,22)" fg:x="1396" fg:w="8"/><text x="6.9800%" y="351.50"></text></g><g><title>labs2024.exe`mi_segment_schedule_purge(mi_segment_s*, unsigned char*, unsigned long long, mi_stats_s*) (8 samples, 0.04%)</title><rect x="6.7300%" y="325" width="0.0386%" height="15" fill="rgb(208,67,9)" fg:x="1396" fg:w="8"/><text x="6.9800%" y="335.50"></text></g><g><title>labs2024.exe`mi_segment_try_purge(mi_segment_s*, bool, mi_stats_s*) (6 samples, 0.03%)</title><rect x="6.7396%" y="309" width="0.0289%" height="15" fill="rgb(219,133,21)" fg:x="1398" fg:w="6"/><text x="6.9896%" y="319.50"></text></g><g><title>labs2024.exe`mi_segment_purge(mi_segment_s*, unsigned char*, unsigned long long, mi_stats_s*) (6 samples, 0.03%)</title><rect x="6.7396%" y="293" width="0.0289%" height="15" fill="rgb(246,46,29)" fg:x="1398" fg:w="6"/><text x="6.9896%" y="303.50"></text></g><g><title>labs2024.exe`_mi_os_purge_ex(void*, unsigned long long, bool, mi_stats_s*) (6 samples, 0.03%)</title><rect x="6.7396%" y="277" width="0.0289%" height="15" fill="rgb(246,185,52)" fg:x="1398" fg:w="6"/><text x="6.9896%" y="287.50"></text></g><g><title>labs2024.exe`mi_os_decommit_ex(void*, unsigned long long, bool*, mi_stats_s*) (6 samples, 0.03%)</title><rect x="6.7396%" y="261" width="0.0289%" height="15" fill="rgb(252,136,11)" fg:x="1398" fg:w="6"/><text x="6.9896%" y="271.50"></text></g><g><title>labs2024.exe`_mi_prim_decommit(void*, unsigned long long, bool*) (6 samples, 0.03%)</title><rect x="6.7396%" y="245" width="0.0289%" height="15" fill="rgb(219,138,53)" fg:x="1398" fg:w="6"/><text x="6.9896%" y="255.50"></text></g><g><title>`0x7FFEBB727942 (6 samples, 0.03%)</title><rect x="6.7396%" y="229" width="0.0289%" height="15" fill="rgb(211,51,23)" fg:x="1398" fg:w="6"/><text x="6.9896%" y="239.50"></text></g><g><title>`0x7FFEBDECFD14 (6 samples, 0.03%)</title><rect x="6.7396%" y="213" width="0.0289%" height="15" fill="rgb(247,221,28)" fg:x="1398" fg:w="6"/><text x="6.9896%" y="223.50"></text></g><g><title>labs2024.exe`_mi_usable_size(void const*, char const*) (6 samples, 0.03%)</title><rect x="6.7685%" y="389" width="0.0289%" height="15" fill="rgb(251,222,45)" fg:x="1404" fg:w="6"/><text x="7.0185%" y="399.50"></text></g><g><title>labs2024.exe`_mi_segment_page_of(mi_segment_s const*, void const*) (6 samples, 0.03%)</title><rect x="6.7685%" y="373" width="0.0289%" height="15" fill="rgb(217,162,53)" fg:x="1404" fg:w="6"/><text x="7.0185%" y="383.50"></text></g><g><title>labs2024.exe`mi_slice_first(mi_page_s const*) (6 samples, 0.03%)</title><rect x="6.7685%" y="357" width="0.0289%" height="15" fill="rgb(229,93,14)" fg:x="1404" fg:w="6"/><text x="7.0185%" y="367.50"></text></g><g><title>labs2024.exe`mi_free(void*) (7 samples, 0.03%)</title><rect x="6.7975%" y="389" width="0.0337%" height="15" fill="rgb(209,67,49)" fg:x="1410" fg:w="7"/><text x="7.0475%" y="399.50"></text></g><g><title>labs2024.exe`_mi_segment_page_of(mi_segment_s const*, void const*) (3 samples, 0.01%)</title><rect x="6.8168%" y="373" width="0.0145%" height="15" fill="rgb(213,87,29)" fg:x="1414" fg:w="3"/><text x="7.0668%" y="383.50"></text></g><g><title>labs2024.exe`mi_free_block_local(mi_page_s*, mi_block_s*, bool, bool) (6 samples, 0.03%)</title><rect x="6.8312%" y="389" width="0.0289%" height="15" fill="rgb(205,151,52)" fg:x="1417" fg:w="6"/><text x="7.0812%" y="399.50"></text></g><g><title>labs2024.exe`mi_heap_malloc(mi_heap_s*, unsigned long long) (30 samples, 0.14%)</title><rect x="6.8650%" y="389" width="0.1446%" height="15" fill="rgb(253,215,39)" fg:x="1424" fg:w="30"/><text x="7.1150%" y="399.50"></text></g><g><title>labs2024.exe`_mi_heap_malloc_zero(mi_heap_s*, unsigned long long, bool) (30 samples, 0.14%)</title><rect x="6.8650%" y="373" width="0.1446%" height="15" fill="rgb(221,220,41)" fg:x="1424" fg:w="30"/><text x="7.1150%" y="383.50"></text></g><g><title>labs2024.exe`_mi_heap_malloc_zero_ex(mi_heap_s*, unsigned long long, bool, unsigned long long) (30 samples, 0.14%)</title><rect x="6.8650%" y="357" width="0.1446%" height="15" fill="rgb(218,133,21)" fg:x="1424" fg:w="30"/><text x="7.1150%" y="367.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_small_zero(mi_heap_s*, unsigned long long, bool) (30 samples, 0.14%)</title><rect x="6.8650%" y="341" width="0.1446%" height="15" fill="rgb(221,193,43)" fg:x="1424" fg:w="30"/><text x="7.1150%" y="351.50"></text></g><g><title>labs2024.exe`_mi_page_malloc(mi_heap_s*, mi_page_s*, unsigned long long, bool) (30 samples, 0.14%)</title><rect x="6.8650%" y="325" width="0.1446%" height="15" fill="rgb(240,128,52)" fg:x="1424" fg:w="30"/><text x="7.1150%" y="335.50"></text></g><g><title>labs2024.exe`_mi_heap_realloc_zero(mi_heap_s*, void*, unsigned long long, bool) (304 samples, 1.47%)</title><rect x="5.5489%" y="405" width="1.4656%" height="15" fill="rgb(253,114,12)" fg:x="1151" fg:w="304"/><text x="5.7989%" y="415.50"></text></g><g><title>labs2024.exe`mi_page_extend_free(mi_heap_s*, mi_page_s*, mi_tld_s*) (8 samples, 0.04%)</title><rect x="7.0433%" y="357" width="0.0386%" height="15" fill="rgb(215,223,47)" fg:x="1461" fg:w="8"/><text x="7.2933%" y="367.50"></text></g><g><title>labs2024.exe`mi_page_free_list_extend(mi_page_s* const, const unsigned long long, const unsigned long long, mi_stats_s* const) (8 samples, 0.04%)</title><rect x="7.0433%" y="341" width="0.0386%" height="15" fill="rgb(248,225,23)" fg:x="1461" fg:w="8"/><text x="7.2933%" y="351.50"></text></g><g><title>labs2024.exe`_mi_malloc_generic(mi_heap_s*, unsigned long long, bool, unsigned long long) (15 samples, 0.07%)</title><rect x="7.0241%" y="389" width="0.0723%" height="15" fill="rgb(250,108,0)" fg:x="1457" fg:w="15"/><text x="7.2741%" y="399.50"></text></g><g><title>labs2024.exe`mi_page_queue_find_free_ex(mi_heap_s*, mi_page_queue_s*, bool) (12 samples, 0.06%)</title><rect x="7.0385%" y="373" width="0.0579%" height="15" fill="rgb(228,208,7)" fg:x="1460" fg:w="12"/><text x="7.2885%" y="383.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_aligned_at(mi_heap_s*, unsigned long long, unsigned long long, unsigned long long) (56 samples, 0.27%)</title><rect x="7.0144%" y="405" width="0.2700%" height="15" fill="rgb(244,45,10)" fg:x="1455" fg:w="56"/><text x="7.2644%" y="415.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_zero_aligned_at(mi_heap_s* const, const unsigned long long, const unsigned long long, const unsigned long long, const bool) (39 samples, 0.19%)</title><rect x="7.0964%" y="389" width="0.1880%" height="15" fill="rgb(207,125,25)" fg:x="1472" fg:w="39"/><text x="7.3464%" y="399.50"></text></g><g><title>labs2024.exe`_mi_page_malloc(mi_heap_s*, mi_page_s*, unsigned long long, bool) (35 samples, 0.17%)</title><rect x="7.1157%" y="373" width="0.1687%" height="15" fill="rgb(210,195,18)" fg:x="1476" fg:w="35"/><text x="7.3657%" y="383.50"></text></g><g><title>labs2024.exe`mi_malloc_aligned(unsigned long long, unsigned long long) (3 samples, 0.01%)</title><rect x="7.2844%" y="405" width="0.0145%" height="15" fill="rgb(249,80,12)" fg:x="1511" fg:w="3"/><text x="7.5344%" y="415.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_aligned(mi_heap_s*, unsigned long long, unsigned long long) (3 samples, 0.01%)</title><rect x="7.2844%" y="389" width="0.0145%" height="15" fill="rgb(221,65,9)" fg:x="1511" fg:w="3"/><text x="7.5344%" y="399.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::reserve_for_push&lt;alloc::string::String,alloc::alloc::Global&gt; (383 samples, 1.85%)</title><rect x="5.4621%" y="485" width="1.8464%" height="15" fill="rgb(235,49,36)" fg:x="1133" fg:w="383"/><text x="5.7121%" y="495.50">l..</text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::grow_amortized (381 samples, 1.84%)</title><rect x="5.4717%" y="469" width="1.8368%" height="15" fill="rgb(225,32,20)" fg:x="1135" fg:w="381"/><text x="5.7217%" y="479.50">l..</text></g><g><title>labs2024.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (372 samples, 1.79%)</title><rect x="5.5151%" y="453" width="1.7934%" height="15" fill="rgb(215,141,46)" fg:x="1144" fg:w="372"/><text x="5.7651%" y="463.50">l..</text></g><g><title>labs2024.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (370 samples, 1.78%)</title><rect x="5.5248%" y="437" width="1.7837%" height="15" fill="rgb(250,160,47)" fg:x="1146" fg:w="370"/><text x="5.7748%" y="447.50">l..</text></g><g><title>labs2024.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (365 samples, 1.76%)</title><rect x="5.5489%" y="421" width="1.7596%" height="15" fill="rgb(216,222,40)" fg:x="1151" fg:w="365"/><text x="5.7989%" y="431.50"></text></g><g><title>`0x7FFEA30111EA (3 samples, 0.01%)</title><rect x="7.4194%" y="469" width="0.0145%" height="15" fill="rgb(234,217,39)" fg:x="1539" fg:w="3"/><text x="7.6694%" y="479.50"></text></g><g><title>labs2024.exe`mi_page_extend_free(mi_heap_s*, mi_page_s*, mi_tld_s*) (70 samples, 0.34%)</title><rect x="7.5110%" y="277" width="0.3375%" height="15" fill="rgb(207,178,40)" fg:x="1558" fg:w="70"/><text x="7.7610%" y="287.50"></text></g><g><title>labs2024.exe`mi_page_free_list_extend(mi_page_s* const, const unsigned long long, const unsigned long long, mi_stats_s* const) (70 samples, 0.34%)</title><rect x="7.5110%" y="261" width="0.3375%" height="15" fill="rgb(221,136,13)" fg:x="1558" fg:w="70"/><text x="7.7610%" y="271.50"></text></g><g><title>labs2024.exe`_mi_heap_collect_retired(mi_heap_s*, bool) (9 samples, 0.04%)</title><rect x="7.8484%" y="261" width="0.0434%" height="15" fill="rgb(249,199,10)" fg:x="1628" fg:w="9"/><text x="8.0984%" y="271.50"></text></g><g><title>labs2024.exe`_mi_segment_page_alloc(mi_heap_s*, unsigned long long, unsigned long long, mi_segments_tld_s*, mi_os_tld_s*) (6 samples, 0.03%)</title><rect x="7.8918%" y="245" width="0.0289%" height="15" fill="rgb(249,222,13)" fg:x="1637" fg:w="6"/><text x="8.1418%" y="255.50"></text></g><g><title>labs2024.exe`mi_segments_page_alloc(mi_heap_s*, mi_page_kind_e, unsigned long long, unsigned long long, mi_segments_tld_s*, mi_os_tld_s*) (5 samples, 0.02%)</title><rect x="7.8966%" y="229" width="0.0241%" height="15" fill="rgb(244,185,38)" fg:x="1638" fg:w="5"/><text x="8.1466%" y="239.50"></text></g><g><title>labs2024.exe`mi_segments_page_find_and_allocate(unsigned long long, int, mi_segments_tld_s*) (5 samples, 0.02%)</title><rect x="7.8966%" y="213" width="0.0241%" height="15" fill="rgb(236,202,9)" fg:x="1638" fg:w="5"/><text x="8.1466%" y="223.50"></text></g><g><title>labs2024.exe`mi_segment_span_allocate(mi_segment_s*, unsigned long long, unsigned long long, mi_segments_tld_s*) (5 samples, 0.02%)</title><rect x="7.8966%" y="197" width="0.0241%" height="15" fill="rgb(250,229,37)" fg:x="1638" fg:w="5"/><text x="8.1466%" y="207.50"></text></g><g><title>labs2024.exe`mi_segment_commit(mi_segment_s*, unsigned char*, unsigned long long, mi_stats_s*) (5 samples, 0.02%)</title><rect x="7.8966%" y="181" width="0.0241%" height="15" fill="rgb(206,174,23)" fg:x="1638" fg:w="5"/><text x="8.1466%" y="191.50"></text></g><g><title>labs2024.exe`mi_option_get(mi_option_e) (4 samples, 0.02%)</title><rect x="7.9015%" y="165" width="0.0193%" height="15" fill="rgb(211,33,43)" fg:x="1639" fg:w="4"/><text x="8.1515%" y="175.50"></text></g><g><title>labs2024.exe`_mi_prim_clock_now() (4 samples, 0.02%)</title><rect x="7.9015%" y="149" width="0.0193%" height="15" fill="rgb(245,58,50)" fg:x="1639" fg:w="4"/><text x="8.1515%" y="159.50"></text></g><g><title>labs2024.exe`mi_to_msecs(_LARGE_INTEGER) (4 samples, 0.02%)</title><rect x="7.9015%" y="133" width="0.0193%" height="15" fill="rgb(244,68,36)" fg:x="1639" fg:w="4"/><text x="8.1515%" y="143.50"></text></g><g><title>labs2024.exe`mi_page_fresh(mi_heap_s*, mi_page_queue_s*) (24 samples, 0.12%)</title><rect x="7.8484%" y="277" width="0.1157%" height="15" fill="rgb(232,229,15)" fg:x="1628" fg:w="24"/><text x="8.0984%" y="287.50"></text></g><g><title>labs2024.exe`mi_page_fresh_alloc(mi_heap_s*, mi_page_queue_s*, unsigned long long, unsigned long long) (15 samples, 0.07%)</title><rect x="7.8918%" y="261" width="0.0723%" height="15" fill="rgb(254,30,23)" fg:x="1637" fg:w="15"/><text x="8.1418%" y="271.50"></text></g><g><title>labs2024.exe`mi_page_extend_free(mi_heap_s*, mi_page_s*, mi_tld_s*) (9 samples, 0.04%)</title><rect x="7.9207%" y="245" width="0.0434%" height="15" fill="rgb(235,160,14)" fg:x="1643" fg:w="9"/><text x="8.1707%" y="255.50"></text></g><g><title>labs2024.exe`mi_page_free_list_extend(mi_page_s* const, const unsigned long long, const unsigned long long, mi_stats_s* const) (9 samples, 0.04%)</title><rect x="7.9207%" y="229" width="0.0434%" height="15" fill="rgb(212,155,44)" fg:x="1643" fg:w="9"/><text x="8.1707%" y="239.50"></text></g><g><title>labs2024.exe`_mi_malloc_generic(mi_heap_s*, unsigned long long, bool, unsigned long long) (99 samples, 0.48%)</title><rect x="7.4965%" y="309" width="0.4773%" height="15" fill="rgb(226,2,50)" fg:x="1555" fg:w="99"/><text x="7.7465%" y="319.50"></text></g><g><title>labs2024.exe`mi_page_queue_find_free_ex(mi_heap_s*, mi_page_queue_s*, bool) (97 samples, 0.47%)</title><rect x="7.5061%" y="293" width="0.4676%" height="15" fill="rgb(234,177,6)" fg:x="1557" fg:w="97"/><text x="7.7561%" y="303.50"></text></g><g><title>labs2024.exe`labs2024::_::__rust_alloc (7 samples, 0.03%)</title><rect x="7.9738%" y="309" width="0.0337%" height="15" fill="rgb(217,24,9)" fg:x="1654" fg:w="7"/><text x="8.2238%" y="319.50"></text></g><g><title>labs2024.exe`mimalloc::impl$0::alloc (7 samples, 0.03%)</title><rect x="7.9738%" y="293" width="0.0337%" height="15" fill="rgb(220,13,46)" fg:x="1654" fg:w="7"/><text x="8.2238%" y="303.50"></text></g><g><title>labs2024.exe`_mi_heap_get_free_small_page(mi_heap_s*, unsigned long long) (9 samples, 0.04%)</title><rect x="8.0123%" y="277" width="0.0434%" height="15" fill="rgb(239,221,27)" fg:x="1662" fg:w="9"/><text x="8.2623%" y="287.50"></text></g><g><title>labs2024.exe`_mi_wsize_from_size(unsigned long long) (9 samples, 0.04%)</title><rect x="8.0123%" y="261" width="0.0434%" height="15" fill="rgb(222,198,25)" fg:x="1662" fg:w="9"/><text x="8.2623%" y="271.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_small(mi_heap_s*, unsigned long long) (21 samples, 0.10%)</title><rect x="8.0075%" y="309" width="0.1012%" height="15" fill="rgb(211,99,13)" fg:x="1661" fg:w="21"/><text x="8.2575%" y="319.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_small_zero(mi_heap_s*, unsigned long long, bool) (20 samples, 0.10%)</title><rect x="8.0123%" y="293" width="0.0964%" height="15" fill="rgb(232,111,31)" fg:x="1662" fg:w="20"/><text x="8.2623%" y="303.50"></text></g><g><title>labs2024.exe`_mi_page_malloc(mi_heap_s*, mi_page_s*, unsigned long long, bool) (11 samples, 0.05%)</title><rect x="8.0557%" y="277" width="0.0530%" height="15" fill="rgb(245,82,37)" fg:x="1671" fg:w="11"/><text x="8.3057%" y="287.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_aligned(mi_heap_s*, unsigned long long, unsigned long long) (12 samples, 0.06%)</title><rect x="8.1088%" y="293" width="0.0579%" height="15" fill="rgb(227,149,46)" fg:x="1682" fg:w="12"/><text x="8.3588%" y="303.50"></text></g><g><title>labs2024.exe`_mi_is_power_of_two(unsigned long long) (9 samples, 0.04%)</title><rect x="8.1232%" y="277" width="0.0434%" height="15" fill="rgb(218,36,50)" fg:x="1685" fg:w="9"/><text x="8.3732%" y="287.50"></text></g><g><title>labs2024.exe`alloc::vec::Vec::with_capacity_in (155 samples, 0.75%)</title><rect x="7.4435%" y="405" width="0.7472%" height="15" fill="rgb(226,80,48)" fg:x="1544" fg:w="155"/><text x="7.6935%" y="415.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec::with_capacity_in (155 samples, 0.75%)</title><rect x="7.4435%" y="389" width="0.7472%" height="15" fill="rgb(238,224,15)" fg:x="1544" fg:w="155"/><text x="7.6935%" y="399.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec::allocate_in (155 samples, 0.75%)</title><rect x="7.4435%" y="373" width="0.7472%" height="15" fill="rgb(241,136,10)" fg:x="1544" fg:w="155"/><text x="7.6935%" y="383.50"></text></g><g><title>labs2024.exe`alloc::alloc::impl$1::allocate (144 samples, 0.69%)</title><rect x="7.4965%" y="357" width="0.6942%" height="15" fill="rgb(208,32,45)" fg:x="1555" fg:w="144"/><text x="7.7465%" y="367.50"></text></g><g><title>labs2024.exe`alloc::alloc::Global::alloc_impl (144 samples, 0.69%)</title><rect x="7.4965%" y="341" width="0.6942%" height="15" fill="rgb(207,135,9)" fg:x="1555" fg:w="144"/><text x="7.7465%" y="351.50"></text></g><g><title>labs2024.exe`alloc::alloc::alloc (144 samples, 0.69%)</title><rect x="7.4965%" y="325" width="0.6942%" height="15" fill="rgb(206,86,44)" fg:x="1555" fg:w="144"/><text x="7.7465%" y="335.50"></text></g><g><title>labs2024.exe`mi_malloc_aligned(unsigned long long, unsigned long long) (17 samples, 0.08%)</title><rect x="8.1088%" y="309" width="0.0820%" height="15" fill="rgb(245,177,15)" fg:x="1682" fg:w="17"/><text x="8.3588%" y="319.50"></text></g><g><title>labs2024.exe`mi_prim_get_default_heap() (5 samples, 0.02%)</title><rect x="8.1666%" y="293" width="0.0241%" height="15" fill="rgb(206,64,50)" fg:x="1694" fg:w="5"/><text x="8.4166%" y="303.50"></text></g><g><title>labs2024.exe`alloc::vec::impl$10::clone (167 samples, 0.81%)</title><rect x="7.4435%" y="469" width="0.8051%" height="15" fill="rgb(234,36,40)" fg:x="1544" fg:w="167"/><text x="7.6935%" y="479.50"></text></g><g><title>labs2024.exe`alloc::slice::impl$0::to_vec_in (167 samples, 0.81%)</title><rect x="7.4435%" y="453" width="0.8051%" height="15" fill="rgb(213,64,8)" fg:x="1544" fg:w="167"/><text x="7.6935%" y="463.50"></text></g><g><title>labs2024.exe`alloc::slice::hack::to_vec (167 samples, 0.81%)</title><rect x="7.4435%" y="437" width="0.8051%" height="15" fill="rgb(210,75,36)" fg:x="1544" fg:w="167"/><text x="7.6935%" y="447.50"></text></g><g><title>labs2024.exe`alloc::slice::hack::impl$1::to_vec (167 samples, 0.81%)</title><rect x="7.4435%" y="421" width="0.8051%" height="15" fill="rgb(229,88,21)" fg:x="1544" fg:w="167"/><text x="7.6935%" y="431.50"></text></g><g><title>labs2024.exe`core::ptr::const_ptr::impl$0::copy_to_nonoverlapping (12 samples, 0.06%)</title><rect x="8.1907%" y="405" width="0.0579%" height="15" fill="rgb(252,204,47)" fg:x="1699" fg:w="12"/><text x="8.4407%" y="415.50"></text></g><g><title>labs2024.exe`core::intrinsics::copy_nonoverlapping (12 samples, 0.06%)</title><rect x="8.1907%" y="389" width="0.0579%" height="15" fill="rgb(208,77,27)" fg:x="1699" fg:w="12"/><text x="8.4407%" y="399.50"></text></g><g><title>labs2024.exe`alloc::string::impl$6::clone (203 samples, 0.98%)</title><rect x="7.3085%" y="485" width="0.9786%" height="15" fill="rgb(221,76,26)" fg:x="1516" fg:w="203"/><text x="7.5585%" y="495.50"></text></g><g><title>labs2024.exe`memcpy (8 samples, 0.04%)</title><rect x="8.2486%" y="469" width="0.0386%" height="15" fill="rgb(225,139,18)" fg:x="1711" fg:w="8"/><text x="8.4986%" y="479.50"></text></g><g><title>labs2024.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (799 samples, 3.85%)</title><rect x="5.3416%" y="501" width="3.8519%" height="15" fill="rgb(230,137,11)" fg:x="1108" fg:w="799"/><text x="5.5916%" y="511.50">labs..</text></g><g><title>labs2024.exe`core::ptr::write (187 samples, 0.90%)</title><rect x="8.2920%" y="485" width="0.9015%" height="15" fill="rgb(212,28,1)" fg:x="1720" fg:w="187"/><text x="8.5420%" y="495.50"></text></g><g><title>`0x7FFEA3010FC9 (4 samples, 0.02%)</title><rect x="19.6355%" y="373" width="0.0193%" height="15" fill="rgb(248,164,17)" fg:x="4073" fg:w="4"/><text x="19.8855%" y="383.50"></text></g><g><title>`0x7FFEA3010FEB (12 samples, 0.06%)</title><rect x="19.6596%" y="373" width="0.0579%" height="15" fill="rgb(222,171,42)" fg:x="4078" fg:w="12"/><text x="19.9096%" y="383.50"></text></g><g><title>`0x7FFEA3011002 (6 samples, 0.03%)</title><rect x="19.7175%" y="373" width="0.0289%" height="15" fill="rgb(243,84,45)" fg:x="4090" fg:w="6"/><text x="19.9675%" y="383.50"></text></g><g><title>`0x7FFEA301100A (35 samples, 0.17%)</title><rect x="19.7464%" y="373" width="0.1687%" height="15" fill="rgb(252,49,23)" fg:x="4096" fg:w="35"/><text x="19.9964%" y="383.50"></text></g><g><title>`0x7FFEA3011010 (8 samples, 0.04%)</title><rect x="19.9200%" y="373" width="0.0386%" height="15" fill="rgb(215,19,7)" fg:x="4132" fg:w="8"/><text x="20.1700%" y="383.50"></text></g><g><title>`0x7FFEA3011013 (262 samples, 1.26%)</title><rect x="19.9585%" y="373" width="1.2631%" height="15" fill="rgb(238,81,41)" fg:x="4140" fg:w="262"/><text x="20.2085%" y="383.50"></text></g><g><title>`0x7FFEA3011019 (31 samples, 0.15%)</title><rect x="21.2216%" y="373" width="0.1494%" height="15" fill="rgb(210,199,37)" fg:x="4402" fg:w="31"/><text x="21.4716%" y="383.50"></text></g><g><title>`0x7FFEA301101D (5 samples, 0.02%)</title><rect x="21.3711%" y="373" width="0.0241%" height="15" fill="rgb(244,192,49)" fg:x="4433" fg:w="5"/><text x="21.6211%" y="383.50"></text></g><g><title>`0x7FFEA3011024 (11 samples, 0.05%)</title><rect x="21.3952%" y="373" width="0.0530%" height="15" fill="rgb(226,211,11)" fg:x="4438" fg:w="11"/><text x="21.6452%" y="383.50"></text></g><g><title>`0x7FFEA301102F (14 samples, 0.07%)</title><rect x="21.4530%" y="373" width="0.0675%" height="15" fill="rgb(236,162,54)" fg:x="4450" fg:w="14"/><text x="21.7030%" y="383.50"></text></g><g><title>`0x7FFEA301103A (5 samples, 0.02%)</title><rect x="21.5253%" y="373" width="0.0241%" height="15" fill="rgb(220,229,9)" fg:x="4465" fg:w="5"/><text x="21.7753%" y="383.50"></text></g><g><title>`0x7FFEA3011043 (8 samples, 0.04%)</title><rect x="21.5543%" y="373" width="0.0386%" height="15" fill="rgb(250,87,22)" fg:x="4471" fg:w="8"/><text x="21.8043%" y="383.50"></text></g><g><title>`0x7FFEA301104A (3 samples, 0.01%)</title><rect x="21.5928%" y="373" width="0.0145%" height="15" fill="rgb(239,43,17)" fg:x="4479" fg:w="3"/><text x="21.8428%" y="383.50"></text></g><g><title>`0x7FFEA3011074 (11 samples, 0.05%)</title><rect x="21.6121%" y="373" width="0.0530%" height="15" fill="rgb(231,177,25)" fg:x="4483" fg:w="11"/><text x="21.8621%" y="383.50"></text></g><g><title>`0x7FFEA301107B (5 samples, 0.02%)</title><rect x="21.6700%" y="373" width="0.0241%" height="15" fill="rgb(219,179,1)" fg:x="4495" fg:w="5"/><text x="21.9200%" y="383.50"></text></g><g><title>`0x7FFEA301107E (5 samples, 0.02%)</title><rect x="21.6941%" y="373" width="0.0241%" height="15" fill="rgb(238,219,53)" fg:x="4500" fg:w="5"/><text x="21.9441%" y="383.50"></text></g><g><title>`0x7FFEA3011081 (8 samples, 0.04%)</title><rect x="21.7182%" y="373" width="0.0386%" height="15" fill="rgb(232,167,36)" fg:x="4505" fg:w="8"/><text x="21.9682%" y="383.50"></text></g><g><title>`0x7FFEA3011083 (9 samples, 0.04%)</title><rect x="21.7567%" y="373" width="0.0434%" height="15" fill="rgb(244,19,51)" fg:x="4513" fg:w="9"/><text x="22.0067%" y="383.50"></text></g><g><title>`0x7FFEA3011086 (8 samples, 0.04%)</title><rect x="21.8001%" y="373" width="0.0386%" height="15" fill="rgb(224,6,22)" fg:x="4522" fg:w="8"/><text x="22.0501%" y="383.50"></text></g><g><title>labs2024.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (2,658 samples, 12.81%)</title><rect x="9.1935%" y="501" width="12.8140%" height="15" fill="rgb(224,145,5)" fg:x="1907" fg:w="2658"/><text x="9.4435%" y="511.50">labs2024.exe`alloc:..</text></g><g><title>labs2024.exe`core::option::impl$14::eq(enum2$&lt;core::option::Option&lt;ref$&lt;alloc::string::String&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$ (2,480 samples, 11.96%)</title><rect x="10.0516%" y="485" width="11.9558%" height="15" fill="rgb(234,130,49)" fg:x="2085" fg:w="2480"/><text x="10.3016%" y="495.50">labs2024.exe`core:..</text></g><g><title>labs2024.exe`core::option::impl$15::eq(enum2$&lt;core::option::Option&lt;ref$&lt;alloc::string::String&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$ (2,480 samples, 11.96%)</title><rect x="10.0516%" y="469" width="11.9558%" height="15" fill="rgb(254,6,2)" fg:x="2085" fg:w="2480"/><text x="10.3016%" y="479.50">labs2024.exe`core:..</text></g><g><title>labs2024.exe`core::cmp::impls::impl$9::eq (2,480 samples, 11.96%)</title><rect x="10.0516%" y="453" width="11.9558%" height="15" fill="rgb(208,96,46)" fg:x="2085" fg:w="2480"/><text x="10.3016%" y="463.50">labs2024.exe`core:..</text></g><g><title>labs2024.exe`alloc::string::impl$80::eq (2,480 samples, 11.96%)</title><rect x="10.0516%" y="437" width="11.9558%" height="15" fill="rgb(239,3,39)" fg:x="2085" fg:w="2480"/><text x="10.3016%" y="447.50">labs2024.exe`alloc..</text></g><g><title>labs2024.exe`alloc::vec::partial_eq::impl$0::eq(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, alloc::vec::Vec (2,480 samples, 11.96%)</title><rect x="10.0516%" y="421" width="11.9558%" height="15" fill="rgb(233,210,1)" fg:x="2085" fg:w="2480"/><text x="10.3016%" y="431.50">labs2024.exe`alloc..</text></g><g><title>labs2024.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (2,457 samples, 11.84%)</title><rect x="10.1625%" y="405" width="11.8450%" height="15" fill="rgb(244,137,37)" fg:x="2108" fg:w="2457"/><text x="10.4125%" y="415.50">labs2024.exe`core:..</text></g><g><title>labs2024.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (2,457 samples, 11.84%)</title><rect x="10.1625%" y="389" width="11.8450%" height="15" fill="rgb(240,136,2)" fg:x="2108" fg:w="2457"/><text x="10.4125%" y="399.50">labs2024.exe`core:..</text></g><g><title>labs2024.exe`memcmp (35 samples, 0.17%)</title><rect x="21.8387%" y="373" width="0.1687%" height="15" fill="rgb(239,18,37)" fg:x="4530" fg:w="35"/><text x="22.0887%" y="383.50"></text></g><g><title>labs2024.exe`alloc::vec::into_iter::impl$5::next(alloc::vec::into_iter::IntoIter (11 samples, 0.05%)</title><rect x="22.0074%" y="501" width="0.0530%" height="15" fill="rgb(218,185,22)" fg:x="4565" fg:w="11"/><text x="22.2574%" y="511.50"></text></g><g><title>labs2024.exe`mi_arenas_try_purge(bool, bool, mi_stats_s*) (4 samples, 0.02%)</title><rect x="22.0701%" y="453" width="0.0193%" height="15" fill="rgb(225,218,4)" fg:x="4578" fg:w="4"/><text x="22.3201%" y="463.50"></text></g><g><title>labs2024.exe`mi_arena_try_purge(mi_arena_s*, long long, bool, mi_stats_s*) (4 samples, 0.02%)</title><rect x="22.0701%" y="437" width="0.0193%" height="15" fill="rgb(230,182,32)" fg:x="4578" fg:w="4"/><text x="22.3201%" y="447.50"></text></g><g><title>labs2024.exe`mi_arena_purge_range(mi_arena_s*, unsigned long long, unsigned long long, unsigned long long, unsigned long long, mi_stats_s*) (4 samples, 0.02%)</title><rect x="22.0701%" y="421" width="0.0193%" height="15" fill="rgb(242,56,43)" fg:x="4578" fg:w="4"/><text x="22.3201%" y="431.50"></text></g><g><title>labs2024.exe`mi_arena_purge(mi_arena_s*, unsigned long long, unsigned long long, mi_stats_s*) (4 samples, 0.02%)</title><rect x="22.0701%" y="405" width="0.0193%" height="15" fill="rgb(233,99,24)" fg:x="4578" fg:w="4"/><text x="22.3201%" y="415.50"></text></g><g><title>labs2024.exe`_mi_os_purge(void*, unsigned long long, mi_stats_s*) (4 samples, 0.02%)</title><rect x="22.0701%" y="389" width="0.0193%" height="15" fill="rgb(234,209,42)" fg:x="4578" fg:w="4"/><text x="22.3201%" y="399.50"></text></g><g><title>labs2024.exe`_mi_os_purge_ex(void*, unsigned long long, bool, mi_stats_s*) (4 samples, 0.02%)</title><rect x="22.0701%" y="373" width="0.0193%" height="15" fill="rgb(227,7,12)" fg:x="4578" fg:w="4"/><text x="22.3201%" y="383.50"></text></g><g><title>labs2024.exe`mi_os_decommit_ex(void*, unsigned long long, bool*, mi_stats_s*) (4 samples, 0.02%)</title><rect x="22.0701%" y="357" width="0.0193%" height="15" fill="rgb(245,203,43)" fg:x="4578" fg:w="4"/><text x="22.3201%" y="367.50"></text></g><g><title>labs2024.exe`_mi_prim_decommit(void*, unsigned long long, bool*) (4 samples, 0.02%)</title><rect x="22.0701%" y="341" width="0.0193%" height="15" fill="rgb(238,205,33)" fg:x="4578" fg:w="4"/><text x="22.3201%" y="351.50"></text></g><g><title>`0x7FFEBB727942 (4 samples, 0.02%)</title><rect x="22.0701%" y="325" width="0.0193%" height="15" fill="rgb(231,56,7)" fg:x="4578" fg:w="4"/><text x="22.3201%" y="335.50"></text></g><g><title>`0x7FFEBDECFD14 (4 samples, 0.02%)</title><rect x="22.0701%" y="309" width="0.0193%" height="15" fill="rgb(244,186,29)" fg:x="4578" fg:w="4"/><text x="22.3201%" y="319.50"></text></g><g><title>labs2024.exe`core::iter::adapters::take::impl$1::next(core::iter::adapters::take::Take&lt;std::io::Lines&lt;std::io::buffered::bufreader::BufReader (8 samples, 0.04%)</title><rect x="22.0605%" y="501" width="0.0386%" height="15" fill="rgb(234,111,31)" fg:x="4576" fg:w="8"/><text x="22.3105%" y="511.50"></text></g><g><title>labs2024.exe`mi_segment_free(mi_segment_s*, bool, mi_segments_tld_s*) (6 samples, 0.03%)</title><rect x="22.0701%" y="485" width="0.0289%" height="15" fill="rgb(241,149,10)" fg:x="4578" fg:w="6"/><text x="22.3201%" y="495.50"></text></g><g><title>labs2024.exe`_mi_arena_free(void*, unsigned long long, unsigned long long, mi_memid_s, mi_stats_s*) (6 samples, 0.03%)</title><rect x="22.0701%" y="469" width="0.0289%" height="15" fill="rgb(249,206,44)" fg:x="4578" fg:w="6"/><text x="22.3201%" y="479.50"></text></g><g><title>labs2024.exe`core::num::impl$9::rotate_left (4 samples, 0.02%)</title><rect x="22.2195%" y="277" width="0.0193%" height="15" fill="rgb(251,153,30)" fg:x="4609" fg:w="4"/><text x="22.4695%" y="287.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$8::c_rounds (11 samples, 0.05%)</title><rect x="22.1906%" y="293" width="0.0530%" height="15" fill="rgb(239,152,38)" fg:x="4603" fg:w="11"/><text x="22.4406%" y="303.50"></text></g><g><title>labs2024.exe`core::hash::impls::impl$5::hash (26 samples, 0.13%)</title><rect x="22.1328%" y="421" width="0.1253%" height="15" fill="rgb(249,139,47)" fg:x="4591" fg:w="26"/><text x="22.3828%" y="431.50"></text></g><g><title>labs2024.exe`alloc::string::impl$23::hash (26 samples, 0.13%)</title><rect x="22.1328%" y="405" width="0.1253%" height="15" fill="rgb(244,64,35)" fg:x="4591" fg:w="26"/><text x="22.3828%" y="415.50"></text></g><g><title>labs2024.exe`core::hash::impls::impl$2::hash(ref$ (26 samples, 0.13%)</title><rect x="22.1328%" y="389" width="0.1253%" height="15" fill="rgb(216,46,15)" fg:x="4591" fg:w="26"/><text x="22.3828%" y="399.50"></text></g><g><title>labs2024.exe`std::collections::hash::map::impl$86::write_str(std::collections::hash::map::DefaultHasher*, ref$ (26 samples, 0.13%)</title><rect x="22.1328%" y="373" width="0.1253%" height="15" fill="rgb(250,74,19)" fg:x="4591" fg:w="26"/><text x="22.3828%" y="383.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$4::write_str(core::hash::sip::SipHasher13*, ref$ (26 samples, 0.13%)</title><rect x="22.1328%" y="357" width="0.1253%" height="15" fill="rgb(249,42,33)" fg:x="4591" fg:w="26"/><text x="22.3828%" y="367.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::write_str(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$ (26 samples, 0.13%)</title><rect x="22.1328%" y="341" width="0.1253%" height="15" fill="rgb(242,149,17)" fg:x="4591" fg:w="26"/><text x="22.3828%" y="351.50"></text></g><g><title>labs2024.exe`core::hash::Hasher::write_u8(core::hash::sip::Hasher (25 samples, 0.12%)</title><rect x="22.1376%" y="325" width="0.1205%" height="15" fill="rgb(244,29,21)" fg:x="4592" fg:w="25"/><text x="22.3876%" y="335.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (23 samples, 0.11%)</title><rect x="22.1472%" y="309" width="0.1109%" height="15" fill="rgb(220,130,37)" fg:x="4594" fg:w="23"/><text x="22.3972%" y="319.50"></text></g><g><title>labs2024.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="22.2436%" y="293" width="0.0145%" height="15" fill="rgb(211,67,2)" fg:x="4614" fg:w="3"/><text x="22.4936%" y="303.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (7 samples, 0.03%)</title><rect x="22.2822%" y="373" width="0.0337%" height="15" fill="rgb(235,68,52)" fg:x="4622" fg:w="7"/><text x="22.5322%" y="383.50"></text></g><g><title>labs2024.exe`core::num::impl$9::rotate_left (4 samples, 0.02%)</title><rect x="22.3304%" y="357" width="0.0193%" height="15" fill="rgb(246,142,3)" fg:x="4632" fg:w="4"/><text x="22.5804%" y="367.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::reserve(unsigned long long, hashbrown::map::make_hasher::closure_env$0&lt;alloc::string::String,alloc::vec::Vec (48 samples, 0.23%)</title><rect x="22.1231%" y="453" width="0.2314%" height="15" fill="rgb(241,25,7)" fg:x="4589" fg:w="48"/><text x="22.3731%" y="463.50"></text></g><g><title>labs2024.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;alloc::string::String&gt; &gt; (48 samples, 0.23%)</title><rect x="22.1231%" y="437" width="0.2314%" height="15" fill="rgb(242,119,39)" fg:x="4589" fg:w="48"/><text x="22.3731%" y="447.50"></text></g><g><title>labs2024.exe`std::collections::hash::map::impl$86::finish (20 samples, 0.10%)</title><rect x="22.2581%" y="421" width="0.0964%" height="15" fill="rgb(241,98,45)" fg:x="4617" fg:w="20"/><text x="22.5081%" y="431.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$4::finish (20 samples, 0.10%)</title><rect x="22.2581%" y="405" width="0.0964%" height="15" fill="rgb(254,28,30)" fg:x="4617" fg:w="20"/><text x="22.5081%" y="415.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (20 samples, 0.10%)</title><rect x="22.2581%" y="389" width="0.0964%" height="15" fill="rgb(241,142,54)" fg:x="4617" fg:w="20"/><text x="22.5081%" y="399.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$8::d_rounds (7 samples, 0.03%)</title><rect x="22.3208%" y="373" width="0.0337%" height="15" fill="rgb(222,85,15)" fg:x="4630" fg:w="7"/><text x="22.5708%" y="383.50"></text></g><g><title>labs2024.exe`core::intrinsics::copy_nonoverlapping (107 samples, 0.52%)</title><rect x="22.3642%" y="405" width="0.5158%" height="15" fill="rgb(210,85,47)" fg:x="4639" fg:w="107"/><text x="22.6142%" y="415.50"></text></g><g><title>labs2024.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (6 samples, 0.03%)</title><rect x="22.9186%" y="341" width="0.0289%" height="15" fill="rgb(224,206,25)" fg:x="4754" fg:w="6"/><text x="23.1686%" y="351.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_insert_slot_in_group (12 samples, 0.06%)</title><rect x="22.8993%" y="373" width="0.0579%" height="15" fill="rgb(243,201,19)" fg:x="4750" fg:w="12"/><text x="23.1493%" y="383.50"></text></g><g><title>labs2024.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (8 samples, 0.04%)</title><rect x="22.9186%" y="357" width="0.0386%" height="15" fill="rgb(236,59,4)" fg:x="4754" fg:w="8"/><text x="23.1686%" y="367.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::fix_insert_slot (7 samples, 0.03%)</title><rect x="22.9571%" y="373" width="0.0337%" height="15" fill="rgb(254,179,45)" fg:x="4762" fg:w="7"/><text x="23.2071%" y="383.50"></text></g><g><title>labs2024.exe`core::num::impl$9::rotate_left (6 samples, 0.03%)</title><rect x="23.6224%" y="197" width="0.0289%" height="15" fill="rgb(226,14,10)" fg:x="4900" fg:w="6"/><text x="23.8724%" y="207.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$8::c_rounds (124 samples, 0.60%)</title><rect x="23.0584%" y="213" width="0.5978%" height="15" fill="rgb(244,27,41)" fg:x="4783" fg:w="124"/><text x="23.3084%" y="223.50"></text></g><g><title>labs2024.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (25 samples, 0.12%)</title><rect x="23.6562%" y="213" width="0.1205%" height="15" fill="rgb(235,35,32)" fg:x="4907" fg:w="25"/><text x="23.9062%" y="223.50"></text></g><g><title>labs2024.exe`core::intrinsics::copy_nonoverlapping (15 samples, 0.07%)</title><rect x="23.7044%" y="197" width="0.0723%" height="15" fill="rgb(218,68,31)" fg:x="4917" fg:w="15"/><text x="23.9544%" y="207.50"></text></g><g><title>labs2024.exe`core::hash::impls::impl$5::hash (160 samples, 0.77%)</title><rect x="23.0102%" y="341" width="0.7713%" height="15" fill="rgb(207,120,37)" fg:x="4773" fg:w="160"/><text x="23.2602%" y="351.50"></text></g><g><title>labs2024.exe`alloc::string::impl$23::hash (156 samples, 0.75%)</title><rect x="23.0295%" y="325" width="0.7521%" height="15" fill="rgb(227,98,0)" fg:x="4777" fg:w="156"/><text x="23.2795%" y="335.50"></text></g><g><title>labs2024.exe`core::hash::impls::impl$2::hash(ref$ (156 samples, 0.75%)</title><rect x="23.0295%" y="309" width="0.7521%" height="15" fill="rgb(207,7,3)" fg:x="4777" fg:w="156"/><text x="23.2795%" y="319.50"></text></g><g><title>labs2024.exe`std::collections::hash::map::impl$86::write_str(std::collections::hash::map::DefaultHasher*, ref$ (156 samples, 0.75%)</title><rect x="23.0295%" y="293" width="0.7521%" height="15" fill="rgb(206,98,19)" fg:x="4777" fg:w="156"/><text x="23.2795%" y="303.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$4::write_str(core::hash::sip::SipHasher13*, ref$ (156 samples, 0.75%)</title><rect x="23.0295%" y="277" width="0.7521%" height="15" fill="rgb(217,5,26)" fg:x="4777" fg:w="156"/><text x="23.2795%" y="287.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::write_str(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$ (156 samples, 0.75%)</title><rect x="23.0295%" y="261" width="0.7521%" height="15" fill="rgb(235,190,38)" fg:x="4777" fg:w="156"/><text x="23.2795%" y="271.50"></text></g><g><title>labs2024.exe`core::hash::Hasher::write_u8(core::hash::sip::Hasher (155 samples, 0.75%)</title><rect x="23.0343%" y="245" width="0.7472%" height="15" fill="rgb(247,86,24)" fg:x="4778" fg:w="155"/><text x="23.2843%" y="255.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (155 samples, 0.75%)</title><rect x="23.0343%" y="229" width="0.7472%" height="15" fill="rgb(205,101,16)" fg:x="4778" fg:w="155"/><text x="23.2843%" y="239.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (8 samples, 0.04%)</title><rect x="23.8153%" y="293" width="0.0386%" height="15" fill="rgb(246,168,33)" fg:x="4940" fg:w="8"/><text x="24.0653%" y="303.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$8::c_rounds (3 samples, 0.01%)</title><rect x="23.8538%" y="293" width="0.0145%" height="15" fill="rgb(231,114,1)" fg:x="4948" fg:w="3"/><text x="24.1038%" y="303.50"></text></g><g><title>labs2024.exe`core::num::impl$9::rotate_left (8 samples, 0.04%)</title><rect x="23.8828%" y="277" width="0.0386%" height="15" fill="rgb(207,184,53)" fg:x="4954" fg:w="8"/><text x="24.1328%" y="287.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::probe_seq (198 samples, 0.95%)</title><rect x="22.9909%" y="373" width="0.9545%" height="15" fill="rgb(224,95,51)" fg:x="4769" fg:w="198"/><text x="23.2409%" y="383.50"></text></g><g><title>labs2024.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;alloc::string::String&gt; &gt; (197 samples, 0.95%)</title><rect x="22.9957%" y="357" width="0.9497%" height="15" fill="rgb(212,188,45)" fg:x="4770" fg:w="197"/><text x="23.2457%" y="367.50"></text></g><g><title>labs2024.exe`std::collections::hash::map::impl$86::finish (32 samples, 0.15%)</title><rect x="23.7912%" y="341" width="0.1543%" height="15" fill="rgb(223,154,38)" fg:x="4935" fg:w="32"/><text x="24.0412%" y="351.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$4::finish (32 samples, 0.15%)</title><rect x="23.7912%" y="325" width="0.1543%" height="15" fill="rgb(251,22,52)" fg:x="4935" fg:w="32"/><text x="24.0412%" y="335.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (32 samples, 0.15%)</title><rect x="23.7912%" y="309" width="0.1543%" height="15" fill="rgb(229,209,22)" fg:x="4935" fg:w="32"/><text x="24.0412%" y="319.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$8::d_rounds (16 samples, 0.08%)</title><rect x="23.8683%" y="293" width="0.0771%" height="15" fill="rgb(234,138,34)" fg:x="4951" fg:w="16"/><text x="24.1183%" y="303.50"></text></g><g><title>labs2024.exe`core::num::impl$9::wrapping_add (5 samples, 0.02%)</title><rect x="23.9213%" y="277" width="0.0241%" height="15" fill="rgb(212,95,11)" fg:x="4962" fg:w="5"/><text x="24.1713%" y="287.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_insert_slot (219 samples, 1.06%)</title><rect x="22.8993%" y="405" width="1.0558%" height="15" fill="rgb(240,179,47)" fg:x="4750" fg:w="219"/><text x="23.1493%" y="415.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_insert_slot (219 samples, 1.06%)</title><rect x="22.8993%" y="389" width="1.0558%" height="15" fill="rgb(240,163,11)" fg:x="4750" fg:w="219"/><text x="23.1493%" y="399.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize (4 samples, 0.02%)</title><rect x="23.9551%" y="405" width="0.0193%" height="15" fill="rgb(236,37,12)" fg:x="4969" fg:w="4"/><text x="24.2051%" y="415.50"></text></g><g><title>`0x7FFEA3011759 (4 samples, 0.02%)</title><rect x="23.9551%" y="389" width="0.0193%" height="15" fill="rgb(232,164,16)" fg:x="4969" fg:w="4"/><text x="24.2051%" y="399.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;,std::collections::hash::map::RandomState&gt; &gt;(unsigned long long, hashbrown::map::make_hasher::closure_env$0&lt;alloc::string::String,alloc::vec::Vec (337 samples, 1.62%)</title><rect x="22.3545%" y="453" width="1.6246%" height="15" fill="rgb(244,205,15)" fg:x="4637" fg:w="337"/><text x="22.6045%" y="463.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::reserve_rehash_inner(unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt; &gt;,usize&gt;,assoc$&lt;Output,u64&gt; &gt; &gt; &gt;, hashbrown::raw::Fallibility, hashbrown::raw::TableLayout, enum2$&lt;core::option::Option&lt;void (*)(ptr_mut$ (337 samples, 1.62%)</title><rect x="22.3545%" y="437" width="1.6246%" height="15" fill="rgb(223,117,47)" fg:x="4637" fg:w="337"/><text x="22.6045%" y="447.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::resize_inner(unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt; &gt;,usize&gt;,assoc$ (337 samples, 1.62%)</title><rect x="22.3545%" y="421" width="1.6246%" height="15" fill="rgb(244,107,35)" fg:x="4637" fg:w="337"/><text x="22.6045%" y="431.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_insert_slot_in_group (4 samples, 0.02%)</title><rect x="23.9888%" y="437" width="0.0193%" height="15" fill="rgb(205,140,8)" fg:x="4976" fg:w="4"/><text x="24.2388%" y="447.50"></text></g><g><title>labs2024.exe`hashbrown::raw::h2 (5 samples, 0.02%)</title><rect x="24.0177%" y="437" width="0.0241%" height="15" fill="rgb(228,84,46)" fg:x="4982" fg:w="5"/><text x="24.2677%" y="447.50"></text></g><g><title>labs2024.exe`hashbrown::raw::sse2::Group::match_byte (3 samples, 0.01%)</title><rect x="24.0467%" y="437" width="0.0145%" height="15" fill="rgb(254,188,9)" fg:x="4988" fg:w="3"/><text x="24.2967%" y="447.50"></text></g><g><title>labs2024.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.01%)</title><rect x="24.0467%" y="421" width="0.0145%" height="15" fill="rgb(206,112,54)" fg:x="4988" fg:w="3"/><text x="24.2967%" y="431.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;alloc::string::String,alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;, hashbrown::map::make_hasher::closure_env$0&lt;alloc::string::String,alloc::vec::Vec (406 samples, 1.96%)</title><rect x="22.1183%" y="469" width="1.9573%" height="15" fill="rgb(216,84,49)" fg:x="4588" fg:w="406"/><text x="22.3683%" y="479.50">l..</text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (20 samples, 0.10%)</title><rect x="23.9792%" y="453" width="0.0964%" height="15" fill="rgb(214,194,35)" fg:x="4974" fg:w="20"/><text x="24.2292%" y="463.50"></text></g><g><title>labs2024.exe`hashbrown::raw::sse2::Group::match_empty (3 samples, 0.01%)</title><rect x="24.0611%" y="437" width="0.0145%" height="15" fill="rgb(249,28,3)" fg:x="4991" fg:w="3"/><text x="24.3111%" y="447.50"></text></g><g><title>labs2024.exe`hashbrown::raw::sse2::Group::match_byte (3 samples, 0.01%)</title><rect x="24.0611%" y="421" width="0.0145%" height="15" fill="rgb(222,56,52)" fg:x="4991" fg:w="3"/><text x="24.3111%" y="431.50"></text></g><g><title>labs2024.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.01%)</title><rect x="24.0611%" y="405" width="0.0145%" height="15" fill="rgb(245,217,50)" fg:x="4991" fg:w="3"/><text x="24.3111%" y="415.50"></text></g><g><title>labs2024.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt; &gt;::write(tuple$&lt;alloc::string::String,alloc::vec::Vec (23 samples, 0.11%)</title><rect x="24.0756%" y="453" width="0.1109%" height="15" fill="rgb(213,201,24)" fg:x="4994" fg:w="23"/><text x="24.3256%" y="463.50"></text></g><g><title>labs2024.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;*, tuple$&lt;alloc::string::String,alloc::vec::Vec (23 samples, 0.11%)</title><rect x="24.0756%" y="437" width="0.1109%" height="15" fill="rgb(248,116,28)" fg:x="4994" fg:w="23"/><text x="24.3256%" y="447.50"></text></g><g><title>labs2024.exe`core::ptr::write(tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;*, tuple$&lt;alloc::string::String,alloc::vec::Vec (23 samples, 0.11%)</title><rect x="24.0756%" y="421" width="0.1109%" height="15" fill="rgb(219,72,43)" fg:x="4994" fg:w="23"/><text x="24.3256%" y="431.50"></text></g><g><title>labs2024.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::vec::Vec (435 samples, 2.10%)</title><rect x="22.0990%" y="501" width="2.0971%" height="15" fill="rgb(209,138,14)" fg:x="4584" fg:w="435"/><text x="22.3490%" y="511.50">l..</text></g><g><title>labs2024.exe`hashbrown::map::HashMap&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;(alloc::string::String, alloc::vec::Vec (435 samples, 2.10%)</title><rect x="22.0990%" y="485" width="2.0971%" height="15" fill="rgb(222,18,33)" fg:x="4584" fg:w="435"/><text x="22.3490%" y="495.50">l..</text></g><g><title>labs2024.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$&lt;alloc::string::String,alloc::vec::Vec (25 samples, 0.12%)</title><rect x="24.0756%" y="469" width="0.1205%" height="15" fill="rgb(213,199,7)" fg:x="4994" fg:w="25"/><text x="24.3256%" y="479.50"></text></g><g><title>labs2024.exe`_mi_segment_page_of(mi_segment_s const*, void const*) (14 samples, 0.07%)</title><rect x="24.2684%" y="357" width="0.0675%" height="15" fill="rgb(250,110,10)" fg:x="5034" fg:w="14"/><text x="24.5184%" y="367.50"></text></g><g><title>labs2024.exe`mi_slice_first(mi_page_s const*) (4 samples, 0.02%)</title><rect x="24.3166%" y="341" width="0.0193%" height="15" fill="rgb(248,123,6)" fg:x="5044" fg:w="4"/><text x="24.5666%" y="351.50"></text></g><g><title>labs2024.exe`mi_free(void*) (46 samples, 0.22%)</title><rect x="24.2058%" y="373" width="0.2218%" height="15" fill="rgb(206,91,31)" fg:x="5021" fg:w="46"/><text x="24.4558%" y="383.50"></text></g><g><title>labs2024.exe`mi_checked_ptr_segment(void const*, char const*) (19 samples, 0.09%)</title><rect x="24.3359%" y="357" width="0.0916%" height="15" fill="rgb(211,154,13)" fg:x="5048" fg:w="19"/><text x="24.5859%" y="367.50"></text></g><g><title>labs2024.exe`_mi_ptr_segment(void const*) (19 samples, 0.09%)</title><rect x="24.3359%" y="341" width="0.0916%" height="15" fill="rgb(225,148,7)" fg:x="5048" fg:w="19"/><text x="24.5859%" y="351.50"></text></g><g><title>labs2024.exe`mi_free_block_local(mi_page_s*, mi_block_s*, bool, bool) (20 samples, 0.10%)</title><rect x="24.4275%" y="373" width="0.0964%" height="15" fill="rgb(220,160,43)" fg:x="5067" fg:w="20"/><text x="24.6775%" y="383.50"></text></g><g><title>labs2024.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (69 samples, 0.33%)</title><rect x="24.1961%" y="437" width="0.3326%" height="15" fill="rgb(213,52,39)" fg:x="5019" fg:w="69"/><text x="24.4461%" y="447.50"></text></g><g><title>labs2024.exe`alloc::alloc::dealloc (69 samples, 0.33%)</title><rect x="24.1961%" y="421" width="0.3326%" height="15" fill="rgb(243,137,7)" fg:x="5019" fg:w="69"/><text x="24.4461%" y="431.50"></text></g><g><title>labs2024.exe`labs2024::_::__rust_dealloc (69 samples, 0.33%)</title><rect x="24.1961%" y="405" width="0.3326%" height="15" fill="rgb(230,79,13)" fg:x="5019" fg:w="69"/><text x="24.4461%" y="415.50"></text></g><g><title>labs2024.exe`mimalloc::impl$0::dealloc (69 samples, 0.33%)</title><rect x="24.1961%" y="389" width="0.3326%" height="15" fill="rgb(247,105,23)" fg:x="5019" fg:w="69"/><text x="24.4461%" y="399.50"></text></g><g><title>labs2024.exe`core::ptr::drop_in_place (82 samples, 0.40%)</title><rect x="24.1961%" y="501" width="0.3953%" height="15" fill="rgb(223,179,41)" fg:x="5019" fg:w="82"/><text x="24.4461%" y="511.50"></text></g><g><title>labs2024.exe`core::ptr::drop_in_place(alloc::vec::Vec (82 samples, 0.40%)</title><rect x="24.1961%" y="485" width="0.3953%" height="15" fill="rgb(218,9,34)" fg:x="5019" fg:w="82"/><text x="24.4461%" y="495.50"></text></g><g><title>labs2024.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (82 samples, 0.40%)</title><rect x="24.1961%" y="469" width="0.3953%" height="15" fill="rgb(222,106,8)" fg:x="5019" fg:w="82"/><text x="24.4461%" y="479.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (82 samples, 0.40%)</title><rect x="24.1961%" y="453" width="0.3953%" height="15" fill="rgb(211,220,0)" fg:x="5019" fg:w="82"/><text x="24.4461%" y="463.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory (13 samples, 0.06%)</title><rect x="24.5288%" y="437" width="0.0627%" height="15" fill="rgb(229,52,16)" fg:x="5088" fg:w="13"/><text x="24.7788%" y="447.50"></text></g><g><title>labs2024.exe`core::slice::cmp::impl$5::equal (27 samples, 0.13%)</title><rect x="25.0687%" y="437" width="0.1302%" height="15" fill="rgb(212,155,18)" fg:x="5200" fg:w="27"/><text x="25.3187%" y="447.50"></text></g><g><title>labs2024.exe`memcmp (12 samples, 0.06%)</title><rect x="25.1410%" y="421" width="0.0579%" height="15" fill="rgb(242,21,14)" fg:x="5215" fg:w="12"/><text x="25.3910%" y="431.50"></text></g><g><title>labs2024.exe`core::slice::index::impl$0::index (36 samples, 0.17%)</title><rect x="25.0687%" y="453" width="0.1736%" height="15" fill="rgb(222,19,48)" fg:x="5200" fg:w="36"/><text x="25.3187%" y="463.50"></text></g><g><title>labs2024.exe`core::slice::index::impl$5::index (8 samples, 0.04%)</title><rect x="25.2037%" y="437" width="0.0386%" height="15" fill="rgb(232,45,27)" fg:x="5228" fg:w="8"/><text x="25.4537%" y="447.50"></text></g><g><title>labs2024.exe`core::slice::index::impl$4::index (8 samples, 0.04%)</title><rect x="25.2037%" y="421" width="0.0386%" height="15" fill="rgb(249,103,42)" fg:x="5228" fg:w="8"/><text x="25.4537%" y="431.50"></text></g><g><title>labs2024.exe`core::str::pattern::TwoWaySearcher::byteset_create (32 samples, 0.15%)</title><rect x="25.2423%" y="453" width="0.1543%" height="15" fill="rgb(246,81,33)" fg:x="5236" fg:w="32"/><text x="25.4923%" y="463.50"></text></g><g><title>labs2024.exe`core::slice::iter::impl$181::fold (32 samples, 0.15%)</title><rect x="25.2423%" y="437" width="0.1543%" height="15" fill="rgb(252,33,42)" fg:x="5236" fg:w="32"/><text x="25.4923%" y="447.50"></text></g><g><title>labs2024.exe`core::str::pattern::TwoWaySearcher::maximal_suffix (26 samples, 0.13%)</title><rect x="25.3965%" y="453" width="0.1253%" height="15" fill="rgb(209,212,41)" fg:x="5268" fg:w="26"/><text x="25.6465%" y="463.50"></text></g><g><title>labs2024.exe`core::str::pattern::StrSearcher::new (204 samples, 0.98%)</title><rect x="24.6927%" y="485" width="0.9835%" height="15" fill="rgb(207,154,6)" fg:x="5122" fg:w="204"/><text x="24.9427%" y="495.50"></text></g><g><title>labs2024.exe`core::str::pattern::TwoWaySearcher::new (127 samples, 0.61%)</title><rect x="25.0639%" y="469" width="0.6123%" height="15" fill="rgb(223,64,47)" fg:x="5199" fg:w="127"/><text x="25.3139%" y="479.50"></text></g><g><title>labs2024.exe`core::str::pattern::TwoWaySearcher::reverse_maximal_suffix (32 samples, 0.15%)</title><rect x="25.5219%" y="453" width="0.1543%" height="15" fill="rgb(211,161,38)" fg:x="5294" fg:w="32"/><text x="25.7719%" y="463.50"></text></g><g><title>labs2024.exe`core::str::impl$0::split(ref$&lt;str$&gt;, ref$ (234 samples, 1.13%)</title><rect x="24.5914%" y="501" width="1.1281%" height="15" fill="rgb(219,138,40)" fg:x="5101" fg:w="234"/><text x="24.8414%" y="511.50"></text></g><g><title>labs2024.exe`core::str::pattern::impl$28::into_searcher(ref$&lt;str$&gt;, ref$ (9 samples, 0.04%)</title><rect x="25.6761%" y="485" width="0.0434%" height="15" fill="rgb(241,228,46)" fg:x="5326" fg:w="9"/><text x="25.9261%" y="495.50"></text></g><g><title>labs2024.exe`core::iter::adapters::rev::impl$1::next(core::iter::adapters::rev::Rev&lt;core::ops::range::Range (12 samples, 0.06%)</title><rect x="28.4626%" y="437" width="0.0579%" height="15" fill="rgb(223,209,38)" fg:x="5904" fg:w="12"/><text x="28.7126%" y="447.50"></text></g><g><title>labs2024.exe`core::iter::range::impl$4::next_back(core::ops::range::Range (12 samples, 0.06%)</title><rect x="28.4626%" y="421" width="0.0579%" height="15" fill="rgb(236,164,45)" fg:x="5904" fg:w="12"/><text x="28.7126%" y="431.50"></text></g><g><title>labs2024.exe`core::iter::range::impl$2::spec_next_back(core::ops::range::Range (12 samples, 0.06%)</title><rect x="28.4626%" y="405" width="0.0579%" height="15" fill="rgb(231,15,5)" fg:x="5904" fg:w="12"/><text x="28.7126%" y="415.50"></text></g><g><title>labs2024.exe`core::cmp::impls::impl$54::lt (12 samples, 0.06%)</title><rect x="28.4626%" y="389" width="0.0579%" height="15" fill="rgb(252,35,15)" fg:x="5904" fg:w="12"/><text x="28.7126%" y="399.50"></text></g><g><title>labs2024.exe`core::cmp::impls::impl$54::lt (10 samples, 0.05%)</title><rect x="28.5397%" y="405" width="0.0482%" height="15" fill="rgb(248,181,18)" fg:x="5920" fg:w="10"/><text x="28.7897%" y="415.50"></text></g><g><title>labs2024.exe`core::iter::range::impl$3::next(core::ops::range::Range (39 samples, 0.19%)</title><rect x="28.5205%" y="437" width="0.1880%" height="15" fill="rgb(233,39,42)" fg:x="5916" fg:w="39"/><text x="28.7705%" y="447.50"></text></g><g><title>labs2024.exe`core::iter::range::impl$2::spec_next(core::ops::range::Range (39 samples, 0.19%)</title><rect x="28.5205%" y="421" width="0.1880%" height="15" fill="rgb(238,110,33)" fg:x="5916" fg:w="39"/><text x="28.7705%" y="431.50"></text></g><g><title>labs2024.exe`core::iter::range::impl$37::forward_unchecked (25 samples, 0.12%)</title><rect x="28.5880%" y="405" width="0.1205%" height="15" fill="rgb(233,195,10)" fg:x="5930" fg:w="25"/><text x="28.8380%" y="415.50"></text></g><g><title>labs2024.exe`core::num::impl$11::unchecked_add (25 samples, 0.12%)</title><rect x="28.5880%" y="389" width="0.1205%" height="15" fill="rgb(254,105,3)" fg:x="5930" fg:w="25"/><text x="28.8380%" y="399.50"></text></g><g><title>labs2024.exe`core::slice::impl$0::get(ref$&lt;slice2$ (1,134 samples, 5.47%)</title><rect x="28.7085%" y="437" width="5.4669%" height="15" fill="rgb(221,225,9)" fg:x="5955" fg:w="1134"/><text x="28.9585%" y="447.50">labs202..</text></g><g><title>labs2024.exe`core::slice::index::impl$2::get(unsigned long long, ref$&lt;slice2$ (1,134 samples, 5.47%)</title><rect x="28.7085%" y="421" width="5.4669%" height="15" fill="rgb(224,227,45)" fg:x="5955" fg:w="1134"/><text x="28.9585%" y="431.50">labs202..</text></g><g><title>labs2024.exe`core::str::pattern::TwoWaySearcher::next(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1,864 samples, 8.99%)</title><rect x="26.0040%" y="453" width="8.9862%" height="15" fill="rgb(229,198,43)" fg:x="5394" fg:w="1864"/><text x="26.2540%" y="463.50">labs2024.exe`..</text></g><g><title>labs2024.exe`core::str::pattern::TwoWaySearcher::byteset_contains (169 samples, 0.81%)</title><rect x="34.1754%" y="437" width="0.8147%" height="15" fill="rgb(206,209,35)" fg:x="7089" fg:w="169"/><text x="34.4254%" y="447.50"></text></g><g><title>labs2024.exe`core::str::iter::impl$60::next(core::str::iter::Split&lt;ref$ (1,956 samples, 9.43%)</title><rect x="25.7195%" y="501" width="9.4297%" height="15" fill="rgb(245,195,53)" fg:x="5335" fg:w="1956"/><text x="25.9695%" y="511.50">labs2024.exe`..</text></g><g><title>labs2024.exe`core::str::iter::SplitInternal&lt;ref$&lt;str$&gt; &gt;::next (1,956 samples, 9.43%)</title><rect x="25.7195%" y="485" width="9.4297%" height="15" fill="rgb(240,92,26)" fg:x="5335" fg:w="1956"/><text x="25.9695%" y="495.50">labs2024.exe`..</text></g><g><title>labs2024.exe`core::str::pattern::impl$30::next_match (1,950 samples, 9.40%)</title><rect x="25.7484%" y="469" width="9.4008%" height="15" fill="rgb(207,40,23)" fg:x="5341" fg:w="1950"/><text x="25.9984%" y="479.50">labs2024.exe`..</text></g><g><title>labs2024.exe`core::str::pattern::impl$30::next (33 samples, 0.16%)</title><rect x="34.9901%" y="453" width="0.1591%" height="15" fill="rgb(223,111,35)" fg:x="7258" fg:w="33"/><text x="35.2401%" y="463.50"></text></g><g><title>labs2024.exe`labs2024::IndexedData::new (6 samples, 0.03%)</title><rect x="35.1492%" y="501" width="0.0289%" height="15" fill="rgb(229,147,28)" fg:x="7291" fg:w="6"/><text x="35.3992%" y="511.50"></text></g><g><title>labs2024.exe`labs2024::impl$1::default (6 samples, 0.03%)</title><rect x="35.1492%" y="485" width="0.0289%" height="15" fill="rgb(211,29,28)" fg:x="7291" fg:w="6"/><text x="35.3992%" y="495.50"></text></g><g><title>labs2024.exe`std::collections::hash::map::impl$8::default (6 samples, 0.03%)</title><rect x="35.1492%" y="469" width="0.0289%" height="15" fill="rgb(228,72,33)" fg:x="7291" fg:w="6"/><text x="35.3992%" y="479.50"></text></g><g><title>labs2024.exe`std::collections::hash::map::impl$87::default (6 samples, 0.03%)</title><rect x="35.1492%" y="453" width="0.0289%" height="15" fill="rgb(205,214,31)" fg:x="7291" fg:w="6"/><text x="35.3992%" y="463.50"></text></g><g><title>labs2024.exe`std::sys::common::thread_local::fast_local::Key&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::try_initialize&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt;,std::collections::hash::map::impl$82::new::KEYS::__getit::closure_env$0&gt; (6 samples, 0.03%)</title><rect x="35.1492%" y="437" width="0.0289%" height="15" fill="rgb(224,111,15)" fg:x="7291" fg:w="6"/><text x="35.3992%" y="447.50"></text></g><g><title>labs2024.exe`std::sys::common::thread_local::lazy::LazyKeyInner&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt;::initialize (6 samples, 0.03%)</title><rect x="35.1492%" y="421" width="0.0289%" height="15" fill="rgb(253,21,26)" fg:x="7291" fg:w="6"/><text x="35.3992%" y="431.50"></text></g><g><title>labs2024.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (6 samples, 0.03%)</title><rect x="35.1492%" y="405" width="0.0289%" height="15" fill="rgb(245,139,43)" fg:x="7291" fg:w="6"/><text x="35.3992%" y="415.50"></text></g><g><title>labs2024.exe`core::ptr::write(enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$&lt;u64,u64&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;core::cell::Cell&lt;tuple$ (6 samples, 0.03%)</title><rect x="35.1492%" y="389" width="0.0289%" height="15" fill="rgb(252,170,7)" fg:x="7291" fg:w="6"/><text x="35.3992%" y="399.50"></text></g><g><title>labs2024.exe`std::sys::windows::rand::hashmap_random_keys (6 samples, 0.03%)</title><rect x="35.1492%" y="373" width="0.0289%" height="15" fill="rgb(231,118,14)" fg:x="7291" fg:w="6"/><text x="35.3992%" y="383.50"></text></g><g><title>labs2024.exe`std::sys::windows::c::nt_success (6 samples, 0.03%)</title><rect x="35.1492%" y="357" width="0.0289%" height="15" fill="rgb(238,83,0)" fg:x="7291" fg:w="6"/><text x="35.3992%" y="367.50"></text></g><g><title>`0x7FFEBB3E177C (6 samples, 0.03%)</title><rect x="35.1492%" y="341" width="0.0289%" height="15" fill="rgb(221,39,39)" fg:x="7291" fg:w="6"/><text x="35.3992%" y="351.50"></text></g><g><title>`0x7FFEBB3E18D6 (5 samples, 0.02%)</title><rect x="35.1540%" y="325" width="0.0241%" height="15" fill="rgb(222,119,46)" fg:x="7292" fg:w="5"/><text x="35.4040%" y="335.50"></text></g><g><title>`0x7FFEBB3E55D3 (5 samples, 0.02%)</title><rect x="35.1540%" y="309" width="0.0241%" height="15" fill="rgb(222,165,49)" fg:x="7292" fg:w="5"/><text x="35.4040%" y="319.50"></text></g><g><title>`0x7FFEBB3E7969 (5 samples, 0.02%)</title><rect x="35.1540%" y="293" width="0.0241%" height="15" fill="rgb(219,113,52)" fg:x="7292" fg:w="5"/><text x="35.4040%" y="303.50"></text></g><g><title>`0x7FFEBB3E7E85 (5 samples, 0.02%)</title><rect x="35.1540%" y="277" width="0.0241%" height="15" fill="rgb(214,7,15)" fg:x="7292" fg:w="5"/><text x="35.4040%" y="287.50"></text></g><g><title>`0x7FFEBB6E61E2 (5 samples, 0.02%)</title><rect x="35.1540%" y="261" width="0.0241%" height="15" fill="rgb(235,32,4)" fg:x="7292" fg:w="5"/><text x="35.4040%" y="271.50"></text></g><g><title>`0x7FFEBDE5A25A (5 samples, 0.02%)</title><rect x="35.1540%" y="245" width="0.0241%" height="15" fill="rgb(238,90,54)" fg:x="7292" fg:w="5"/><text x="35.4040%" y="255.50"></text></g><g><title>`0x7FFEBDE48CAC (5 samples, 0.02%)</title><rect x="35.1540%" y="229" width="0.0241%" height="15" fill="rgb(213,208,19)" fg:x="7292" fg:w="5"/><text x="35.4040%" y="239.50"></text></g><g><title>`0x7FFEBDE58940 (3 samples, 0.01%)</title><rect x="35.1637%" y="213" width="0.0145%" height="15" fill="rgb(233,156,4)" fg:x="7294" fg:w="3"/><text x="35.4137%" y="223.50"></text></g><g><title>`0x7FFEBDE5D62D (3 samples, 0.01%)</title><rect x="35.1637%" y="197" width="0.0145%" height="15" fill="rgb(207,194,5)" fg:x="7294" fg:w="3"/><text x="35.4137%" y="207.50"></text></g><g><title>`0x7FFEBDE9CDEE (3 samples, 0.01%)</title><rect x="35.1637%" y="181" width="0.0145%" height="15" fill="rgb(206,111,30)" fg:x="7294" fg:w="3"/><text x="35.4137%" y="191.50"></text></g><g><title>`0x7FFEBDE9D03D (3 samples, 0.01%)</title><rect x="35.1637%" y="165" width="0.0145%" height="15" fill="rgb(243,70,54)" fg:x="7294" fg:w="3"/><text x="35.4137%" y="175.50"></text></g><g><title>`0x7FFEBDE5869F (3 samples, 0.01%)</title><rect x="35.1637%" y="149" width="0.0145%" height="15" fill="rgb(242,28,8)" fg:x="7294" fg:w="3"/><text x="35.4137%" y="159.50"></text></g><g><title>`0x7FFEA3011132 (31 samples, 0.15%)</title><rect x="35.2456%" y="469" width="0.1494%" height="15" fill="rgb(219,106,18)" fg:x="7311" fg:w="31"/><text x="35.4956%" y="479.50"></text></g><g><title>`0x7FFEA30111EA (105 samples, 0.51%)</title><rect x="35.4385%" y="469" width="0.5062%" height="15" fill="rgb(244,222,10)" fg:x="7351" fg:w="105"/><text x="35.6885%" y="479.50"></text></g><g><title>`0x7FFEA3011241 (60 samples, 0.29%)</title><rect x="35.9447%" y="469" width="0.2893%" height="15" fill="rgb(236,179,52)" fg:x="7456" fg:w="60"/><text x="36.1947%" y="479.50"></text></g><g><title>`0x7FFEA3011248 (4 samples, 0.02%)</title><rect x="36.2339%" y="469" width="0.0193%" height="15" fill="rgb(213,23,39)" fg:x="7516" fg:w="4"/><text x="36.4839%" y="479.50"></text></g><g><title>labs2024.exe`_mi_malloc_generic(mi_heap_s*, unsigned long long, bool, unsigned long long) (5 samples, 0.02%)</title><rect x="36.2677%" y="293" width="0.0241%" height="15" fill="rgb(238,48,10)" fg:x="7523" fg:w="5"/><text x="36.5177%" y="303.50"></text></g><g><title>labs2024.exe`mi_page_queue_find_free_ex(mi_heap_s*, mi_page_queue_s*, bool) (5 samples, 0.02%)</title><rect x="36.2677%" y="277" width="0.0241%" height="15" fill="rgb(251,196,23)" fg:x="7523" fg:w="5"/><text x="36.5177%" y="287.50"></text></g><g><title>labs2024.exe`mi_page_extend_free(mi_heap_s*, mi_page_s*, mi_tld_s*) (5 samples, 0.02%)</title><rect x="36.2677%" y="261" width="0.0241%" height="15" fill="rgb(250,152,24)" fg:x="7523" fg:w="5"/><text x="36.5177%" y="271.50"></text></g><g><title>labs2024.exe`mi_page_free_list_extend(mi_page_s* const, const unsigned long long, const unsigned long long, mi_stats_s* const) (5 samples, 0.02%)</title><rect x="36.2677%" y="245" width="0.0241%" height="15" fill="rgb(209,150,17)" fg:x="7523" fg:w="5"/><text x="36.5177%" y="255.50"></text></g><g><title>labs2024.exe`alloc::vec::impl$10::clone (10 samples, 0.05%)</title><rect x="36.2532%" y="469" width="0.0482%" height="15" fill="rgb(234,202,34)" fg:x="7520" fg:w="10"/><text x="36.5032%" y="479.50"></text></g><g><title>labs2024.exe`alloc::slice::impl$0::to_vec_in (10 samples, 0.05%)</title><rect x="36.2532%" y="453" width="0.0482%" height="15" fill="rgb(253,148,53)" fg:x="7520" fg:w="10"/><text x="36.5032%" y="463.50"></text></g><g><title>labs2024.exe`alloc::slice::hack::to_vec (10 samples, 0.05%)</title><rect x="36.2532%" y="437" width="0.0482%" height="15" fill="rgb(218,129,16)" fg:x="7520" fg:w="10"/><text x="36.5032%" y="447.50"></text></g><g><title>labs2024.exe`alloc::slice::hack::impl$1::to_vec (10 samples, 0.05%)</title><rect x="36.2532%" y="421" width="0.0482%" height="15" fill="rgb(216,85,19)" fg:x="7520" fg:w="10"/><text x="36.5032%" y="431.50"></text></g><g><title>labs2024.exe`alloc::vec::Vec::with_capacity_in (10 samples, 0.05%)</title><rect x="36.2532%" y="405" width="0.0482%" height="15" fill="rgb(235,228,7)" fg:x="7520" fg:w="10"/><text x="36.5032%" y="415.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec::with_capacity_in (10 samples, 0.05%)</title><rect x="36.2532%" y="389" width="0.0482%" height="15" fill="rgb(245,175,0)" fg:x="7520" fg:w="10"/><text x="36.5032%" y="399.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec::allocate_in (10 samples, 0.05%)</title><rect x="36.2532%" y="373" width="0.0482%" height="15" fill="rgb(208,168,36)" fg:x="7520" fg:w="10"/><text x="36.5032%" y="383.50"></text></g><g><title>labs2024.exe`alloc::alloc::impl$1::allocate (9 samples, 0.04%)</title><rect x="36.2580%" y="357" width="0.0434%" height="15" fill="rgb(246,171,24)" fg:x="7521" fg:w="9"/><text x="36.5080%" y="367.50"></text></g><g><title>labs2024.exe`alloc::alloc::Global::alloc_impl (9 samples, 0.04%)</title><rect x="36.2580%" y="341" width="0.0434%" height="15" fill="rgb(215,142,24)" fg:x="7521" fg:w="9"/><text x="36.5080%" y="351.50"></text></g><g><title>labs2024.exe`alloc::alloc::alloc (9 samples, 0.04%)</title><rect x="36.2580%" y="325" width="0.0434%" height="15" fill="rgb(250,187,7)" fg:x="7521" fg:w="9"/><text x="36.5080%" y="335.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_aligned_at(mi_heap_s*, unsigned long long, unsigned long long, unsigned long long) (7 samples, 0.03%)</title><rect x="36.2677%" y="309" width="0.0337%" height="15" fill="rgb(228,66,33)" fg:x="7523" fg:w="7"/><text x="36.5177%" y="319.50"></text></g><g><title>labs2024.exe`alloc::string::impl$6::clone (233 samples, 1.12%)</title><rect x="35.1974%" y="485" width="1.1233%" height="15" fill="rgb(234,215,21)" fg:x="7301" fg:w="233"/><text x="35.4474%" y="495.50"></text></g><g><title>labs2024.exe`memcpy (4 samples, 0.02%)</title><rect x="36.3014%" y="469" width="0.0193%" height="15" fill="rgb(222,191,20)" fg:x="7530" fg:w="4"/><text x="36.5514%" y="479.50"></text></g><g><title>labs2024.exe`std::collections::hash::map::HashMap&lt;alloc::string::String,f64,std::collections::hash::map::RandomState&gt;::insert (9 samples, 0.04%)</title><rect x="36.3255%" y="485" width="0.0434%" height="15" fill="rgb(245,79,54)" fg:x="7535" fg:w="9"/><text x="36.5755%" y="495.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$8::c_rounds (13 samples, 0.06%)</title><rect x="36.4267%" y="245" width="0.0627%" height="15" fill="rgb(240,10,37)" fg:x="7556" fg:w="13"/><text x="36.6767%" y="255.50"></text></g><g><title>labs2024.exe`core::hash::impls::impl$5::hash (19 samples, 0.09%)</title><rect x="36.4123%" y="373" width="0.0916%" height="15" fill="rgb(214,192,32)" fg:x="7553" fg:w="19"/><text x="36.6623%" y="383.50"></text></g><g><title>labs2024.exe`alloc::string::impl$23::hash (19 samples, 0.09%)</title><rect x="36.4123%" y="357" width="0.0916%" height="15" fill="rgb(209,36,54)" fg:x="7553" fg:w="19"/><text x="36.6623%" y="367.50"></text></g><g><title>labs2024.exe`core::hash::impls::impl$2::hash(ref$ (19 samples, 0.09%)</title><rect x="36.4123%" y="341" width="0.0916%" height="15" fill="rgb(220,10,11)" fg:x="7553" fg:w="19"/><text x="36.6623%" y="351.50"></text></g><g><title>labs2024.exe`std::collections::hash::map::impl$86::write_str(std::collections::hash::map::DefaultHasher*, ref$ (19 samples, 0.09%)</title><rect x="36.4123%" y="325" width="0.0916%" height="15" fill="rgb(221,106,17)" fg:x="7553" fg:w="19"/><text x="36.6623%" y="335.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$4::write_str(core::hash::sip::SipHasher13*, ref$ (19 samples, 0.09%)</title><rect x="36.4123%" y="309" width="0.0916%" height="15" fill="rgb(251,142,44)" fg:x="7553" fg:w="19"/><text x="36.6623%" y="319.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::write_str(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$ (19 samples, 0.09%)</title><rect x="36.4123%" y="293" width="0.0916%" height="15" fill="rgb(238,13,15)" fg:x="7553" fg:w="19"/><text x="36.6623%" y="303.50"></text></g><g><title>labs2024.exe`core::hash::Hasher::write_u8(core::hash::sip::Hasher (17 samples, 0.08%)</title><rect x="36.4219%" y="277" width="0.0820%" height="15" fill="rgb(208,107,27)" fg:x="7555" fg:w="17"/><text x="36.6719%" y="287.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (16 samples, 0.08%)</title><rect x="36.4267%" y="261" width="0.0771%" height="15" fill="rgb(205,136,37)" fg:x="7556" fg:w="16"/><text x="36.6767%" y="271.50"></text></g><g><title>labs2024.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="36.4894%" y="245" width="0.0145%" height="15" fill="rgb(250,205,27)" fg:x="7569" fg:w="3"/><text x="36.7394%" y="255.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (7 samples, 0.03%)</title><rect x="36.5376%" y="325" width="0.0337%" height="15" fill="rgb(210,80,43)" fg:x="7579" fg:w="7"/><text x="36.7876%" y="335.50"></text></g><g><title>labs2024.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (3 samples, 0.01%)</title><rect x="36.5569%" y="309" width="0.0145%" height="15" fill="rgb(247,160,36)" fg:x="7583" fg:w="3"/><text x="36.8069%" y="319.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$8::c_rounds (3 samples, 0.01%)</title><rect x="36.5714%" y="325" width="0.0145%" height="15" fill="rgb(234,13,49)" fg:x="7586" fg:w="3"/><text x="36.8214%" y="335.50"></text></g><g><title>labs2024.exe`core::num::impl$9::rotate_left (3 samples, 0.01%)</title><rect x="36.6148%" y="309" width="0.0145%" height="15" fill="rgb(234,122,0)" fg:x="7595" fg:w="3"/><text x="36.8648%" y="319.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,f64&gt;,alloc::alloc::Global&gt;::reserve(unsigned long long, hashbrown::map::make_hasher::closure_env$0 (46 samples, 0.22%)</title><rect x="36.4123%" y="405" width="0.2218%" height="15" fill="rgb(207,146,38)" fg:x="7553" fg:w="46"/><text x="36.6623%" y="415.50"></text></g><g><title>labs2024.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;alloc::string::String&gt; &gt; (46 samples, 0.22%)</title><rect x="36.4123%" y="389" width="0.2218%" height="15" fill="rgb(207,177,25)" fg:x="7553" fg:w="46"/><text x="36.6623%" y="399.50"></text></g><g><title>labs2024.exe`std::collections::hash::map::impl$86::finish (26 samples, 0.13%)</title><rect x="36.5087%" y="373" width="0.1253%" height="15" fill="rgb(211,178,42)" fg:x="7573" fg:w="26"/><text x="36.7587%" y="383.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$4::finish (26 samples, 0.13%)</title><rect x="36.5087%" y="357" width="0.1253%" height="15" fill="rgb(230,69,54)" fg:x="7573" fg:w="26"/><text x="36.7587%" y="367.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (26 samples, 0.13%)</title><rect x="36.5087%" y="341" width="0.1253%" height="15" fill="rgb(214,135,41)" fg:x="7573" fg:w="26"/><text x="36.7587%" y="351.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$8::d_rounds (10 samples, 0.05%)</title><rect x="36.5858%" y="325" width="0.0482%" height="15" fill="rgb(237,67,25)" fg:x="7589" fg:w="10"/><text x="36.8358%" y="335.50"></text></g><g><title>labs2024.exe`core::intrinsics::copy_nonoverlapping (62 samples, 0.30%)</title><rect x="36.6340%" y="357" width="0.2989%" height="15" fill="rgb(222,189,50)" fg:x="7599" fg:w="62"/><text x="36.8840%" y="367.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::bucket_ptr (3 samples, 0.01%)</title><rect x="36.9426%" y="357" width="0.0145%" height="15" fill="rgb(245,148,34)" fg:x="7663" fg:w="3"/><text x="37.1926%" y="367.50"></text></g><g><title>labs2024.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (6 samples, 0.03%)</title><rect x="36.9908%" y="293" width="0.0289%" height="15" fill="rgb(222,29,6)" fg:x="7673" fg:w="6"/><text x="37.2408%" y="303.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_insert_slot_in_group (16 samples, 0.08%)</title><rect x="36.9619%" y="325" width="0.0771%" height="15" fill="rgb(221,189,43)" fg:x="7667" fg:w="16"/><text x="37.2119%" y="335.50"></text></g><g><title>labs2024.exe`hashbrown::raw::sse2::Group::match_empty_or_deleted (12 samples, 0.06%)</title><rect x="36.9812%" y="309" width="0.0579%" height="15" fill="rgb(207,36,27)" fg:x="7671" fg:w="12"/><text x="37.2312%" y="319.50"></text></g><g><title>labs2024.exe`core::num::nonzero::NonZeroU16::new (4 samples, 0.02%)</title><rect x="37.0197%" y="293" width="0.0193%" height="15" fill="rgb(217,90,24)" fg:x="7679" fg:w="4"/><text x="37.2697%" y="303.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::fix_insert_slot (8 samples, 0.04%)</title><rect x="37.0390%" y="325" width="0.0386%" height="15" fill="rgb(224,66,35)" fg:x="7683" fg:w="8"/><text x="37.2890%" y="335.50"></text></g><g><title>labs2024.exe`core::num::impl$9::rotate_left (3 samples, 0.01%)</title><rect x="37.3475%" y="149" width="0.0145%" height="15" fill="rgb(221,13,50)" fg:x="7747" fg:w="3"/><text x="37.5975%" y="159.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$8::c_rounds (56 samples, 0.27%)</title><rect x="37.1210%" y="165" width="0.2700%" height="15" fill="rgb(236,68,49)" fg:x="7700" fg:w="56"/><text x="37.3710%" y="175.50"></text></g><g><title>labs2024.exe`core::num::impl$9::wrapping_add (6 samples, 0.03%)</title><rect x="37.3620%" y="149" width="0.0289%" height="15" fill="rgb(229,146,28)" fg:x="7750" fg:w="6"/><text x="37.6120%" y="159.50"></text></g><g><title>labs2024.exe`core::hash::impls::impl$5::hash (74 samples, 0.36%)</title><rect x="37.0920%" y="293" width="0.3567%" height="15" fill="rgb(225,31,38)" fg:x="7694" fg:w="74"/><text x="37.3420%" y="303.50"></text></g><g><title>labs2024.exe`alloc::string::impl$23::hash (71 samples, 0.34%)</title><rect x="37.1065%" y="277" width="0.3423%" height="15" fill="rgb(250,208,3)" fg:x="7697" fg:w="71"/><text x="37.3565%" y="287.50"></text></g><g><title>labs2024.exe`core::hash::impls::impl$2::hash(ref$ (71 samples, 0.34%)</title><rect x="37.1065%" y="261" width="0.3423%" height="15" fill="rgb(246,54,23)" fg:x="7697" fg:w="71"/><text x="37.3565%" y="271.50"></text></g><g><title>labs2024.exe`std::collections::hash::map::impl$86::write_str(std::collections::hash::map::DefaultHasher*, ref$ (71 samples, 0.34%)</title><rect x="37.1065%" y="245" width="0.3423%" height="15" fill="rgb(243,76,11)" fg:x="7697" fg:w="71"/><text x="37.3565%" y="255.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$4::write_str(core::hash::sip::SipHasher13*, ref$ (71 samples, 0.34%)</title><rect x="37.1065%" y="229" width="0.3423%" height="15" fill="rgb(245,21,50)" fg:x="7697" fg:w="71"/><text x="37.3565%" y="239.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::write_str(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$ (71 samples, 0.34%)</title><rect x="37.1065%" y="213" width="0.3423%" height="15" fill="rgb(228,9,43)" fg:x="7697" fg:w="71"/><text x="37.3565%" y="223.50"></text></g><g><title>labs2024.exe`core::hash::Hasher::write_u8(core::hash::sip::Hasher (70 samples, 0.34%)</title><rect x="37.1113%" y="197" width="0.3375%" height="15" fill="rgb(208,100,47)" fg:x="7698" fg:w="70"/><text x="37.3613%" y="207.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (70 samples, 0.34%)</title><rect x="37.1113%" y="181" width="0.3375%" height="15" fill="rgb(232,26,8)" fg:x="7698" fg:w="70"/><text x="37.3613%" y="191.50"></text></g><g><title>labs2024.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (12 samples, 0.06%)</title><rect x="37.3909%" y="165" width="0.0579%" height="15" fill="rgb(216,166,38)" fg:x="7756" fg:w="12"/><text x="37.6409%" y="175.50"></text></g><g><title>labs2024.exe`core::intrinsics::copy_nonoverlapping (8 samples, 0.04%)</title><rect x="37.4102%" y="149" width="0.0386%" height="15" fill="rgb(251,202,51)" fg:x="7760" fg:w="8"/><text x="37.6602%" y="159.50"></text></g><g><title>labs2024.exe`std::collections::hash::map::impl$83::build_hasher (4 samples, 0.02%)</title><rect x="37.4488%" y="293" width="0.0193%" height="15" fill="rgb(254,216,34)" fg:x="7768" fg:w="4"/><text x="37.6988%" y="303.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (7 samples, 0.03%)</title><rect x="37.5066%" y="245" width="0.0337%" height="15" fill="rgb(251,32,27)" fg:x="7780" fg:w="7"/><text x="37.7566%" y="255.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$8::c_rounds (4 samples, 0.02%)</title><rect x="37.5404%" y="245" width="0.0193%" height="15" fill="rgb(208,127,28)" fg:x="7787" fg:w="4"/><text x="37.7904%" y="255.50"></text></g><g><title>labs2024.exe`core::num::impl$9::rotate_left (3 samples, 0.01%)</title><rect x="37.5886%" y="229" width="0.0145%" height="15" fill="rgb(224,137,22)" fg:x="7797" fg:w="3"/><text x="37.8386%" y="239.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_insert_slot (137 samples, 0.66%)</title><rect x="36.9619%" y="341" width="0.6605%" height="15" fill="rgb(254,70,32)" fg:x="7667" fg:w="137"/><text x="37.2119%" y="351.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::probe_seq (113 samples, 0.54%)</title><rect x="37.0776%" y="325" width="0.5448%" height="15" fill="rgb(229,75,37)" fg:x="7691" fg:w="113"/><text x="37.3276%" y="335.50"></text></g><g><title>labs2024.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;alloc::string::String&gt; &gt; (113 samples, 0.54%)</title><rect x="37.0776%" y="309" width="0.5448%" height="15" fill="rgb(252,64,23)" fg:x="7691" fg:w="113"/><text x="37.3276%" y="319.50"></text></g><g><title>labs2024.exe`std::collections::hash::map::impl$86::finish (32 samples, 0.15%)</title><rect x="37.4681%" y="293" width="0.1543%" height="15" fill="rgb(232,162,48)" fg:x="7772" fg:w="32"/><text x="37.7181%" y="303.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$4::finish (32 samples, 0.15%)</title><rect x="37.4681%" y="277" width="0.1543%" height="15" fill="rgb(246,160,12)" fg:x="7772" fg:w="32"/><text x="37.7181%" y="287.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (32 samples, 0.15%)</title><rect x="37.4681%" y="261" width="0.1543%" height="15" fill="rgb(247,166,0)" fg:x="7772" fg:w="32"/><text x="37.7181%" y="271.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$8::d_rounds (13 samples, 0.06%)</title><rect x="37.5597%" y="245" width="0.0627%" height="15" fill="rgb(249,219,21)" fg:x="7791" fg:w="13"/><text x="37.8097%" y="255.50"></text></g><g><title>labs2024.exe`core::num::impl$9::wrapping_add (4 samples, 0.02%)</title><rect x="37.6030%" y="229" width="0.0193%" height="15" fill="rgb(205,209,3)" fg:x="7800" fg:w="4"/><text x="37.8530%" y="239.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_insert_slot (139 samples, 0.67%)</title><rect x="36.9619%" y="357" width="0.6701%" height="15" fill="rgb(243,44,1)" fg:x="7667" fg:w="139"/><text x="37.2119%" y="367.50"></text></g><g><title>labs2024.exe`core::ptr::mut_ptr::impl$0::write_bytes (6 samples, 0.03%)</title><rect x="37.6320%" y="325" width="0.0289%" height="15" fill="rgb(206,159,16)" fg:x="7806" fg:w="6"/><text x="37.8820%" y="335.50"></text></g><g><title>labs2024.exe`core::intrinsics::write_bytes (6 samples, 0.03%)</title><rect x="37.6320%" y="309" width="0.0289%" height="15" fill="rgb(244,77,30)" fg:x="7806" fg:w="6"/><text x="37.8820%" y="319.50"></text></g><g><title>`0x7FFEA3011759 (6 samples, 0.03%)</title><rect x="37.6320%" y="293" width="0.0289%" height="15" fill="rgb(218,69,12)" fg:x="7806" fg:w="6"/><text x="37.8820%" y="303.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize (7 samples, 0.03%)</title><rect x="37.6320%" y="357" width="0.0337%" height="15" fill="rgb(212,87,7)" fg:x="7806" fg:w="7"/><text x="37.8820%" y="367.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::fallible_with_capacity (7 samples, 0.03%)</title><rect x="37.6320%" y="341" width="0.0337%" height="15" fill="rgb(245,114,25)" fg:x="7806" fg:w="7"/><text x="37.8820%" y="351.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,f64&gt;,alloc::alloc::Global&gt;::reserve_rehash&lt;tuple$&lt;alloc::string::String,f64&gt;,alloc::alloc::Global,hashbrown::map::make_hasher::closure_env$0&lt;alloc::string::String,f64,std::collections::hash::map::RandomState&gt; &gt;(unsigned long long, hashbrown::map::make_hasher::closure_env$0 (216 samples, 1.04%)</title><rect x="36.6340%" y="405" width="1.0413%" height="15" fill="rgb(210,61,42)" fg:x="7599" fg:w="216"/><text x="36.8840%" y="415.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::reserve_rehash_inner(unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt; &gt;,usize&gt;,assoc$&lt;Output,u64&gt; &gt; &gt; &gt;, hashbrown::raw::Fallibility, hashbrown::raw::TableLayout, enum2$&lt;core::option::Option&lt;void (*)(ptr_mut$ (216 samples, 1.04%)</title><rect x="36.6340%" y="389" width="1.0413%" height="15" fill="rgb(211,52,33)" fg:x="7599" fg:w="216"/><text x="36.8840%" y="399.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::resize_inner(unsigned long long, ref$&lt;dyn$&lt;core::ops::function::Fn&lt;tuple$&lt;ref_mut$&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt; &gt;,usize&gt;,assoc$ (216 samples, 1.04%)</title><rect x="36.6340%" y="373" width="1.0413%" height="15" fill="rgb(234,58,33)" fg:x="7599" fg:w="216"/><text x="36.8840%" y="383.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::fix_insert_slot (4 samples, 0.02%)</title><rect x="37.6946%" y="389" width="0.0193%" height="15" fill="rgb(220,115,36)" fg:x="7819" fg:w="4"/><text x="37.9446%" y="399.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::is_bucket_full (4 samples, 0.02%)</title><rect x="37.6946%" y="373" width="0.0193%" height="15" fill="rgb(243,153,54)" fg:x="7819" fg:w="4"/><text x="37.9446%" y="383.50"></text></g><g><title>labs2024.exe`hashbrown::raw::is_full (4 samples, 0.02%)</title><rect x="37.6946%" y="357" width="0.0193%" height="15" fill="rgb(251,47,18)" fg:x="7819" fg:w="4"/><text x="37.9446%" y="367.50"></text></g><g><title>labs2024.exe`hashbrown::raw::bitmask::impl$3::next (16 samples, 0.08%)</title><rect x="37.7139%" y="389" width="0.0771%" height="15" fill="rgb(242,102,42)" fg:x="7823" fg:w="16"/><text x="37.9639%" y="399.50"></text></g><g><title>labs2024.exe`hashbrown::raw::bitmask::BitMask::remove_lowest_bit (16 samples, 0.08%)</title><rect x="37.7139%" y="373" width="0.0771%" height="15" fill="rgb(234,31,38)" fg:x="7823" fg:w="16"/><text x="37.9639%" y="383.50"></text></g><g><title>labs2024.exe`hashbrown::raw::h2 (6 samples, 0.03%)</title><rect x="37.7911%" y="389" width="0.0289%" height="15" fill="rgb(221,117,51)" fg:x="7839" fg:w="6"/><text x="38.0411%" y="399.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,f64&gt;,alloc::alloc::Global&gt;::find_or_find_insert_slot(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;alloc::string::String,alloc::string::String,f64&gt;, hashbrown::map::make_hasher::closure_env$0 (332 samples, 1.60%)</title><rect x="36.4123%" y="421" width="1.6005%" height="15" fill="rgb(212,20,18)" fg:x="7553" fg:w="332"/><text x="36.6623%" y="431.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_or_find_insert_slot_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (70 samples, 0.34%)</title><rect x="37.6754%" y="405" width="0.3375%" height="15" fill="rgb(245,133,36)" fg:x="7815" fg:w="70"/><text x="37.9254%" y="415.50"></text></g><g><title>labs2024.exe`hashbrown::raw::sse2::Group::match_byte (38 samples, 0.18%)</title><rect x="37.8296%" y="389" width="0.1832%" height="15" fill="rgb(212,6,19)" fg:x="7847" fg:w="38"/><text x="38.0796%" y="399.50"></text></g><g><title>labs2024.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (38 samples, 0.18%)</title><rect x="37.8296%" y="373" width="0.1832%" height="15" fill="rgb(218,1,36)" fg:x="7847" fg:w="38"/><text x="38.0796%" y="383.50"></text></g><g><title>labs2024.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,f64&gt; &gt;::write(tuple$ (16 samples, 0.08%)</title><rect x="38.0128%" y="405" width="0.0771%" height="15" fill="rgb(246,84,54)" fg:x="7885" fg:w="16"/><text x="38.2628%" y="415.50"></text></g><g><title>labs2024.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;alloc::string::String,f64&gt;*, tuple$ (16 samples, 0.08%)</title><rect x="38.0128%" y="389" width="0.0771%" height="15" fill="rgb(242,110,6)" fg:x="7885" fg:w="16"/><text x="38.2628%" y="399.50"></text></g><g><title>labs2024.exe`core::ptr::write(tuple$&lt;alloc::string::String,f64&gt;*, tuple$ (16 samples, 0.08%)</title><rect x="38.0128%" y="373" width="0.0771%" height="15" fill="rgb(214,47,5)" fg:x="7885" fg:w="16"/><text x="38.2628%" y="383.50"></text></g><g><title>labs2024.exe`hashbrown::map::HashMap&lt;alloc::string::String,f64,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::insert&lt;alloc::string::String,f64,std::collections::hash::map::RandomState,alloc::alloc::Global&gt; (371 samples, 1.79%)</title><rect x="36.3737%" y="437" width="1.7886%" height="15" fill="rgb(218,159,25)" fg:x="7545" fg:w="371"/><text x="36.6237%" y="447.50">l..</text></g><g><title>labs2024.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,f64&gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$ (31 samples, 0.15%)</title><rect x="38.0128%" y="421" width="0.1494%" height="15" fill="rgb(215,211,28)" fg:x="7885" fg:w="31"/><text x="38.2628%" y="431.50"></text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::record_item_insert_at (15 samples, 0.07%)</title><rect x="38.0900%" y="405" width="0.0723%" height="15" fill="rgb(238,59,32)" fg:x="7901" fg:w="15"/><text x="38.3400%" y="415.50"></text></g><g><title>labs2024.exe`hashbrown::raw::special_is_empty (14 samples, 0.07%)</title><rect x="38.0948%" y="389" width="0.0675%" height="15" fill="rgb(226,82,3)" fg:x="7902" fg:w="14"/><text x="38.3448%" y="399.50"></text></g><g><title>labs2024.exe`labs2024::compute_idf(std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::vec::Vec (621 samples, 2.99%)</title><rect x="35.1781%" y="501" width="2.9938%" height="15" fill="rgb(240,164,32)" fg:x="7297" fg:w="621"/><text x="35.4281%" y="511.50">lab..</text></g><g><title>labs2024.exe`std::collections::hash::map::impl$39::next(std::collections::hash::map::Iter&lt;alloc::string::String,alloc::vec::Vec (374 samples, 1.80%)</title><rect x="36.3689%" y="485" width="1.8030%" height="15" fill="rgb(232,46,7)" fg:x="7544" fg:w="374"/><text x="36.6189%" y="495.50">l..</text></g><g><title>labs2024.exe`hashbrown::map::impl$61::next(hashbrown::map::Iter&lt;alloc::string::String,alloc::vec::Vec (374 samples, 1.80%)</title><rect x="36.3689%" y="469" width="1.8030%" height="15" fill="rgb(229,129,53)" fg:x="7544" fg:w="374"/><text x="36.6189%" y="479.50">l..</text></g><g><title>labs2024.exe`hashbrown::raw::impl$27::next(hashbrown::raw::RawIter&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec (373 samples, 1.80%)</title><rect x="36.3737%" y="453" width="1.7982%" height="15" fill="rgb(234,188,29)" fg:x="7545" fg:w="373"/><text x="36.6237%" y="463.50">l..</text></g><g><title>labs2024.exe`_mi_page_malloc(mi_heap_s*, mi_page_s*, unsigned long long, bool) (7 samples, 0.03%)</title><rect x="39.5844%" y="261" width="0.0337%" height="15" fill="rgb(246,141,4)" fg:x="8211" fg:w="7"/><text x="39.8344%" y="271.50"></text></g><g><title>labs2024.exe`mi_page_fresh_alloc(mi_heap_s*, mi_page_queue_s*, unsigned long long, unsigned long long) (4 samples, 0.02%)</title><rect x="39.6230%" y="261" width="0.0193%" height="15" fill="rgb(229,23,39)" fg:x="8219" fg:w="4"/><text x="39.8730%" y="271.50"></text></g><g><title>labs2024.exe`_mi_segment_page_alloc(mi_heap_s*, unsigned long long, unsigned long long, mi_segments_tld_s*, mi_os_tld_s*) (4 samples, 0.02%)</title><rect x="39.6230%" y="245" width="0.0193%" height="15" fill="rgb(206,12,3)" fg:x="8219" fg:w="4"/><text x="39.8730%" y="255.50"></text></g><g><title>labs2024.exe`mi_segments_page_alloc(mi_heap_s*, mi_page_kind_e, unsigned long long, unsigned long long, mi_segments_tld_s*, mi_os_tld_s*) (4 samples, 0.02%)</title><rect x="39.6230%" y="229" width="0.0193%" height="15" fill="rgb(252,226,20)" fg:x="8219" fg:w="4"/><text x="39.8730%" y="239.50"></text></g><g><title>labs2024.exe`_mi_heap_collect_retired(mi_heap_s*, bool) (5 samples, 0.02%)</title><rect x="39.6519%" y="229" width="0.0241%" height="15" fill="rgb(216,123,35)" fg:x="8225" fg:w="5"/><text x="39.9019%" y="239.50"></text></g><g><title>labs2024.exe`_mi_os_commit(void*, unsigned long long, bool*, mi_stats_s*) (3 samples, 0.01%)</title><rect x="39.6809%" y="101" width="0.0145%" height="15" fill="rgb(212,68,40)" fg:x="8231" fg:w="3"/><text x="39.9309%" y="111.50"></text></g><g><title>labs2024.exe`_mi_prim_commit(void*, unsigned long long, bool*) (3 samples, 0.01%)</title><rect x="39.6809%" y="85" width="0.0145%" height="15" fill="rgb(254,125,32)" fg:x="8231" fg:w="3"/><text x="39.9309%" y="95.50"></text></g><g><title>`0x7FFEBB721868 (3 samples, 0.01%)</title><rect x="39.6809%" y="69" width="0.0145%" height="15" fill="rgb(253,97,22)" fg:x="8231" fg:w="3"/><text x="39.9309%" y="79.50"></text></g><g><title>`0x7FFEBDECFC54 (3 samples, 0.01%)</title><rect x="39.6809%" y="53" width="0.0145%" height="15" fill="rgb(241,101,14)" fg:x="8231" fg:w="3"/><text x="39.9309%" y="63.50"></text></g><g><title>labs2024.exe`mi_segment_alloc(unsigned long long, unsigned long long, int, mi_segments_tld_s*, mi_os_tld_s*, mi_page_s**) (5 samples, 0.02%)</title><rect x="39.6760%" y="181" width="0.0241%" height="15" fill="rgb(238,103,29)" fg:x="8230" fg:w="5"/><text x="39.9260%" y="191.50"></text></g><g><title>labs2024.exe`mi_segment_os_alloc(unsigned long long, unsigned long long, bool, int, unsigned long long*, unsigned long long*, unsigned long long*, bool, mi_segments_tld_s*, mi_os_tld_s*) (4 samples, 0.02%)</title><rect x="39.6809%" y="165" width="0.0193%" height="15" fill="rgb(233,195,47)" fg:x="8231" fg:w="4"/><text x="39.9309%" y="175.50"></text></g><g><title>labs2024.exe`_mi_arena_alloc_aligned(unsigned long long, unsigned long long, unsigned long long, bool, bool, int, mi_memid_s*, mi_os_tld_s*) (4 samples, 0.02%)</title><rect x="39.6809%" y="149" width="0.0193%" height="15" fill="rgb(246,218,30)" fg:x="8231" fg:w="4"/><text x="39.9309%" y="159.50"></text></g><g><title>labs2024.exe`mi_arena_try_alloc(int, unsigned long long, unsigned long long, bool, bool, int, mi_memid_s*, mi_os_tld_s*) (4 samples, 0.02%)</title><rect x="39.6809%" y="133" width="0.0193%" height="15" fill="rgb(219,145,47)" fg:x="8231" fg:w="4"/><text x="39.9309%" y="143.50"></text></g><g><title>labs2024.exe`mi_arena_try_alloc_at(mi_arena_s*, unsigned long long, unsigned long long, bool, mi_memid_s*, mi_os_tld_s*) (4 samples, 0.02%)</title><rect x="39.6809%" y="117" width="0.0193%" height="15" fill="rgb(243,12,26)" fg:x="8231" fg:w="4"/><text x="39.9309%" y="127.50"></text></g><g><title>labs2024.exe`_mi_segment_page_alloc(mi_heap_s*, unsigned long long, unsigned long long, mi_segments_tld_s*, mi_os_tld_s*) (10 samples, 0.05%)</title><rect x="39.6760%" y="213" width="0.0482%" height="15" fill="rgb(214,87,16)" fg:x="8230" fg:w="10"/><text x="39.9260%" y="223.50"></text></g><g><title>labs2024.exe`mi_segments_page_alloc(mi_heap_s*, mi_page_kind_e, unsigned long long, unsigned long long, mi_segments_tld_s*, mi_os_tld_s*) (10 samples, 0.05%)</title><rect x="39.6760%" y="197" width="0.0482%" height="15" fill="rgb(208,99,42)" fg:x="8230" fg:w="10"/><text x="39.9260%" y="207.50"></text></g><g><title>labs2024.exe`mi_segments_page_find_and_allocate(unsigned long long, int, mi_segments_tld_s*) (5 samples, 0.02%)</title><rect x="39.7001%" y="181" width="0.0241%" height="15" fill="rgb(253,99,2)" fg:x="8235" fg:w="5"/><text x="39.9501%" y="191.50"></text></g><g><title>labs2024.exe`mi_segment_span_allocate(mi_segment_s*, unsigned long long, unsigned long long, mi_segments_tld_s*) (4 samples, 0.02%)</title><rect x="39.7050%" y="165" width="0.0193%" height="15" fill="rgb(220,168,23)" fg:x="8236" fg:w="4"/><text x="39.9550%" y="175.50"></text></g><g><title>labs2024.exe`mi_segment_commit(mi_segment_s*, unsigned char*, unsigned long long, mi_stats_s*) (4 samples, 0.02%)</title><rect x="39.7050%" y="149" width="0.0193%" height="15" fill="rgb(242,38,24)" fg:x="8236" fg:w="4"/><text x="39.9550%" y="159.50"></text></g><g><title>labs2024.exe`mi_option_get(mi_option_e) (4 samples, 0.02%)</title><rect x="39.7050%" y="133" width="0.0193%" height="15" fill="rgb(225,182,9)" fg:x="8236" fg:w="4"/><text x="39.9550%" y="143.50"></text></g><g><title>labs2024.exe`_mi_prim_clock_now() (4 samples, 0.02%)</title><rect x="39.7050%" y="117" width="0.0193%" height="15" fill="rgb(243,178,37)" fg:x="8236" fg:w="4"/><text x="39.9550%" y="127.50"></text></g><g><title>labs2024.exe`mi_to_msecs(_LARGE_INTEGER) (4 samples, 0.02%)</title><rect x="39.7050%" y="101" width="0.0193%" height="15" fill="rgb(232,139,19)" fg:x="8236" fg:w="4"/><text x="39.9550%" y="111.50"></text></g><g><title>labs2024.exe`mi_page_extend_free(mi_heap_s*, mi_page_s*, mi_tld_s*) (23 samples, 0.11%)</title><rect x="39.7242%" y="213" width="0.1109%" height="15" fill="rgb(225,201,24)" fg:x="8240" fg:w="23"/><text x="39.9742%" y="223.50"></text></g><g><title>labs2024.exe`mi_page_free_list_extend(mi_page_s* const, const unsigned long long, const unsigned long long, mi_stats_s* const) (21 samples, 0.10%)</title><rect x="39.7339%" y="197" width="0.1012%" height="15" fill="rgb(221,47,46)" fg:x="8242" fg:w="21"/><text x="39.9839%" y="207.50"></text></g><g><title>labs2024.exe`_mi_malloc_generic(mi_heap_s*, unsigned long long, bool, unsigned long long) (53 samples, 0.26%)</title><rect x="39.5844%" y="277" width="0.2555%" height="15" fill="rgb(249,23,13)" fg:x="8211" fg:w="53"/><text x="39.8344%" y="287.50"></text></g><g><title>labs2024.exe`mi_page_queue_find_free_ex(mi_heap_s*, mi_page_queue_s*, bool) (41 samples, 0.20%)</title><rect x="39.6423%" y="261" width="0.1977%" height="15" fill="rgb(219,9,5)" fg:x="8223" fg:w="41"/><text x="39.8923%" y="271.50"></text></g><g><title>labs2024.exe`mi_page_fresh(mi_heap_s*, mi_page_queue_s*) (39 samples, 0.19%)</title><rect x="39.6519%" y="245" width="0.1880%" height="15" fill="rgb(254,171,16)" fg:x="8225" fg:w="39"/><text x="39.9019%" y="255.50"></text></g><g><title>labs2024.exe`mi_page_fresh_alloc(mi_heap_s*, mi_page_queue_s*, unsigned long long, unsigned long long) (34 samples, 0.16%)</title><rect x="39.6760%" y="229" width="0.1639%" height="15" fill="rgb(230,171,20)" fg:x="8230" fg:w="34"/><text x="39.9260%" y="239.50"></text></g><g><title>labs2024.exe`_mi_memcpy(void*, void const*, unsigned long long) (196 samples, 0.94%)</title><rect x="39.8399%" y="277" width="0.9449%" height="15" fill="rgb(210,71,41)" fg:x="8264" fg:w="196"/><text x="40.0899%" y="287.50"></text></g><g><title>labs2024.exe`mi_free_block_local(mi_page_s*, mi_block_s*, bool, bool) (4 samples, 0.02%)</title><rect x="40.7848%" y="277" width="0.0193%" height="15" fill="rgb(206,173,20)" fg:x="8460" fg:w="4"/><text x="41.0348%" y="287.50"></text></g><g><title>labs2024.exe`_mi_page_retire(mi_page_s*) (3 samples, 0.01%)</title><rect x="40.7897%" y="261" width="0.0145%" height="15" fill="rgb(233,88,34)" fg:x="8461" fg:w="3"/><text x="41.0397%" y="271.50"></text></g><g><title>labs2024.exe`_mi_heap_realloc_zero(mi_heap_s*, void*, unsigned long long, bool) (255 samples, 1.23%)</title><rect x="39.5844%" y="293" width="1.2293%" height="15" fill="rgb(223,209,46)" fg:x="8211" fg:w="255"/><text x="39.8344%" y="303.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::reserve_for_push&lt;alloc::string::String,alloc::alloc::Global&gt; (256 samples, 1.23%)</title><rect x="39.5844%" y="373" width="1.2342%" height="15" fill="rgb(250,43,18)" fg:x="8211" fg:w="256"/><text x="39.8344%" y="383.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec&lt;alloc::string::String,alloc::alloc::Global&gt;::grow_amortized (256 samples, 1.23%)</title><rect x="39.5844%" y="357" width="1.2342%" height="15" fill="rgb(208,13,10)" fg:x="8211" fg:w="256"/><text x="39.8344%" y="367.50"></text></g><g><title>labs2024.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (256 samples, 1.23%)</title><rect x="39.5844%" y="341" width="1.2342%" height="15" fill="rgb(212,200,36)" fg:x="8211" fg:w="256"/><text x="39.8344%" y="351.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (256 samples, 1.23%)</title><rect x="39.5844%" y="325" width="1.2342%" height="15" fill="rgb(225,90,30)" fg:x="8211" fg:w="256"/><text x="39.8344%" y="335.50"></text></g><g><title>labs2024.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (256 samples, 1.23%)</title><rect x="39.5844%" y="309" width="1.2342%" height="15" fill="rgb(236,182,39)" fg:x="8211" fg:w="256"/><text x="39.8344%" y="319.50"></text></g><g><title>labs2024.exe`alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;::push (574 samples, 2.77%)</title><rect x="39.4061%" y="389" width="2.7672%" height="15" fill="rgb(212,144,35)" fg:x="8174" fg:w="574"/><text x="39.6561%" y="399.50">la..</text></g><g><title>labs2024.exe`core::ptr::write (281 samples, 1.35%)</title><rect x="40.8186%" y="373" width="1.3547%" height="15" fill="rgb(228,63,44)" fg:x="8467" fg:w="281"/><text x="41.0686%" y="383.50"></text></g><g><title>labs2024.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;alloc::string::String&gt;, serde_json::de::Deserializer (8 samples, 0.04%)</title><rect x="43.4604%" y="373" width="0.0386%" height="15" fill="rgb(228,109,6)" fg:x="9015" fg:w="8"/><text x="43.7104%" y="383.50"></text></g><g><title>labs2024.exe`serde::de::impls::impl$8::deserialize(serde_json::de::Deserializer (8 samples, 0.04%)</title><rect x="43.4604%" y="357" width="0.0386%" height="15" fill="rgb(238,117,24)" fg:x="9015" fg:w="8"/><text x="43.7104%" y="367.50"></text></g><g><title>labs2024.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::eat_char (10 samples, 0.05%)</title><rect x="43.5472%" y="357" width="0.0482%" height="15" fill="rgb(242,26,26)" fg:x="9033" fg:w="10"/><text x="43.7972%" y="367.50"></text></g><g><title>labs2024.exe`serde_json::read::impl$10::discard (10 samples, 0.05%)</title><rect x="43.5472%" y="341" width="0.0482%" height="15" fill="rgb(221,92,48)" fg:x="9033" fg:w="10"/><text x="43.7972%" y="351.50"></text></g><g><title>labs2024.exe`serde_json::read::impl$7::discard (10 samples, 0.05%)</title><rect x="43.5472%" y="325" width="0.0482%" height="15" fill="rgb(209,209,32)" fg:x="9033" fg:w="10"/><text x="43.7972%" y="335.50"></text></g><g><title>labs2024.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_whitespace (50 samples, 0.24%)</title><rect x="43.4990%" y="373" width="0.2410%" height="15" fill="rgb(221,70,22)" fg:x="9023" fg:w="50"/><text x="43.7490%" y="383.50"></text></g><g><title>labs2024.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (30 samples, 0.14%)</title><rect x="43.5954%" y="357" width="0.1446%" height="15" fill="rgb(248,145,5)" fg:x="9043" fg:w="30"/><text x="43.8454%" y="367.50"></text></g><g><title>labs2024.exe`serde_json::read::impl$10::peek (30 samples, 0.14%)</title><rect x="43.5954%" y="341" width="0.1446%" height="15" fill="rgb(226,116,26)" fg:x="9043" fg:w="30"/><text x="43.8454%" y="351.50"></text></g><g><title>labs2024.exe`serde_json::read::impl$7::peek (30 samples, 0.14%)</title><rect x="43.5954%" y="325" width="0.1446%" height="15" fill="rgb(244,5,17)" fg:x="9043" fg:w="30"/><text x="43.8454%" y="335.50"></text></g><g><title>`0x7FFEA30110E8 (5 samples, 0.02%)</title><rect x="44.0872%" y="341" width="0.0241%" height="15" fill="rgb(252,159,33)" fg:x="9145" fg:w="5"/><text x="44.3372%" y="351.50"></text></g><g><title>`0x7FFEA3011106 (3 samples, 0.01%)</title><rect x="44.1113%" y="341" width="0.0145%" height="15" fill="rgb(206,71,0)" fg:x="9150" fg:w="3"/><text x="44.3613%" y="351.50"></text></g><g><title>`0x7FFEA301123D (12 samples, 0.06%)</title><rect x="44.1691%" y="341" width="0.0579%" height="15" fill="rgb(233,118,54)" fg:x="9162" fg:w="12"/><text x="44.4191%" y="351.50"></text></g><g><title>`0x7FFEA301132F (9 samples, 0.04%)</title><rect x="44.2270%" y="341" width="0.0434%" height="15" fill="rgb(234,83,48)" fg:x="9174" fg:w="9"/><text x="44.4770%" y="351.50"></text></g><g><title>`0x7FFEA30113AF (3 samples, 0.01%)</title><rect x="44.2800%" y="341" width="0.0145%" height="15" fill="rgb(228,3,54)" fg:x="9185" fg:w="3"/><text x="44.5300%" y="351.50"></text></g><g><title>`0x7FFEA30113B6 (3 samples, 0.01%)</title><rect x="44.2945%" y="341" width="0.0145%" height="15" fill="rgb(226,155,13)" fg:x="9188" fg:w="3"/><text x="44.5445%" y="351.50"></text></g><g><title>`0x7FFEA30113BD (5 samples, 0.02%)</title><rect x="44.3186%" y="341" width="0.0241%" height="15" fill="rgb(241,28,37)" fg:x="9193" fg:w="5"/><text x="44.5686%" y="351.50"></text></g><g><title>labs2024.exe`memcpy (8 samples, 0.04%)</title><rect x="44.3427%" y="341" width="0.0386%" height="15" fill="rgb(233,93,10)" fg:x="9198" fg:w="8"/><text x="44.5927%" y="351.50"></text></g><g><title>labs2024.exe`_mi_page_malloc(mi_heap_s*, mi_page_s*, unsigned long long, bool) (5 samples, 0.02%)</title><rect x="44.5934%" y="69" width="0.0241%" height="15" fill="rgb(225,113,19)" fg:x="9250" fg:w="5"/><text x="44.8434%" y="79.50"></text></g><g><title>labs2024.exe`mi_page_extend_free(mi_heap_s*, mi_page_s*, mi_tld_s*) (11 samples, 0.05%)</title><rect x="44.6367%" y="53" width="0.0530%" height="15" fill="rgb(241,2,18)" fg:x="9259" fg:w="11"/><text x="44.8867%" y="63.50"></text></g><g><title>labs2024.exe`mi_page_free_list_extend(mi_page_s* const, const unsigned long long, const unsigned long long, mi_stats_s* const) (10 samples, 0.05%)</title><rect x="44.6416%" y="37" width="0.0482%" height="15" fill="rgb(228,207,21)" fg:x="9260" fg:w="10"/><text x="44.8916%" y="47.50"></text></g><g><title>labs2024.exe`_mi_heap_collect_retired(mi_heap_s*, bool) (3 samples, 0.01%)</title><rect x="44.6898%" y="37" width="0.0145%" height="15" fill="rgb(213,211,35)" fg:x="9270" fg:w="3"/><text x="44.9398%" y="47.50"></text></g><g><title>labs2024.exe`mi_page_fresh(mi_heap_s*, mi_page_queue_s*) (5 samples, 0.02%)</title><rect x="44.6898%" y="53" width="0.0241%" height="15" fill="rgb(209,83,10)" fg:x="9270" fg:w="5"/><text x="44.9398%" y="63.50"></text></g><g><title>labs2024.exe`_mi_malloc_generic(mi_heap_s*, unsigned long long, bool, unsigned long long) (29 samples, 0.14%)</title><rect x="44.5837%" y="85" width="0.1398%" height="15" fill="rgb(209,164,1)" fg:x="9248" fg:w="29"/><text x="44.8337%" y="95.50"></text></g><g><title>labs2024.exe`mi_page_queue_find_free_ex(mi_heap_s*, mi_page_queue_s*, bool) (20 samples, 0.10%)</title><rect x="44.6271%" y="69" width="0.0964%" height="15" fill="rgb(213,184,43)" fg:x="9257" fg:w="20"/><text x="44.8771%" y="79.50"></text></g><g><title>labs2024.exe`_mi_is_power_of_two(unsigned long long) (5 samples, 0.02%)</title><rect x="45.0658%" y="69" width="0.0241%" height="15" fill="rgb(231,61,34)" fg:x="9348" fg:w="5"/><text x="45.3158%" y="79.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_aligned_at(mi_heap_s*, unsigned long long, unsigned long long, unsigned long long) (266 samples, 1.28%)</title><rect x="44.4632%" y="101" width="1.2824%" height="15" fill="rgb(235,75,3)" fg:x="9223" fg:w="266"/><text x="44.7132%" y="111.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_zero_aligned_at(mi_heap_s* const, const unsigned long long, const unsigned long long, const unsigned long long, const bool) (212 samples, 1.02%)</title><rect x="44.7235%" y="85" width="1.0220%" height="15" fill="rgb(220,106,47)" fg:x="9277" fg:w="212"/><text x="44.9735%" y="95.50"></text></g><g><title>labs2024.exe`_mi_page_malloc(mi_heap_s*, mi_page_s*, unsigned long long, bool) (136 samples, 0.66%)</title><rect x="45.0899%" y="69" width="0.6556%" height="15" fill="rgb(210,196,33)" fg:x="9353" fg:w="136"/><text x="45.3399%" y="79.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_small(mi_heap_s*, unsigned long long) (8 samples, 0.04%)</title><rect x="45.7456%" y="101" width="0.0386%" height="15" fill="rgb(229,154,42)" fg:x="9489" fg:w="8"/><text x="45.9956%" y="111.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_small_zero(mi_heap_s*, unsigned long long, bool) (8 samples, 0.04%)</title><rect x="45.7456%" y="85" width="0.0386%" height="15" fill="rgb(228,114,26)" fg:x="9489" fg:w="8"/><text x="45.9956%" y="95.50"></text></g><g><title>labs2024.exe`_mi_page_malloc(mi_heap_s*, mi_page_s*, unsigned long long, bool) (7 samples, 0.03%)</title><rect x="45.7504%" y="69" width="0.0337%" height="15" fill="rgb(208,144,1)" fg:x="9490" fg:w="7"/><text x="46.0004%" y="79.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_aligned(mi_heap_s*, unsigned long long, unsigned long long) (23 samples, 0.11%)</title><rect x="45.7841%" y="85" width="0.1109%" height="15" fill="rgb(239,112,37)" fg:x="9497" fg:w="23"/><text x="46.0341%" y="95.50"></text></g><g><title>labs2024.exe`_mi_is_power_of_two(unsigned long long) (10 samples, 0.05%)</title><rect x="45.8468%" y="69" width="0.0482%" height="15" fill="rgb(210,96,50)" fg:x="9510" fg:w="10"/><text x="46.0968%" y="79.50"></text></g><g><title>labs2024.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (334 samples, 1.61%)</title><rect x="44.3812%" y="229" width="1.6102%" height="15" fill="rgb(222,178,2)" fg:x="9206" fg:w="334"/><text x="44.6312%" y="239.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::with_capacity_in (334 samples, 1.61%)</title><rect x="44.3812%" y="213" width="1.6102%" height="15" fill="rgb(226,74,18)" fg:x="9206" fg:w="334"/><text x="44.6312%" y="223.50"></text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::allocate_in (334 samples, 1.61%)</title><rect x="44.3812%" y="197" width="1.6102%" height="15" fill="rgb(225,67,54)" fg:x="9206" fg:w="334"/><text x="44.6312%" y="207.50"></text></g><g><title>labs2024.exe`alloc::alloc::impl$1::allocate (330 samples, 1.59%)</title><rect x="44.4005%" y="181" width="1.5909%" height="15" fill="rgb(251,92,32)" fg:x="9210" fg:w="330"/><text x="44.6505%" y="191.50"></text></g><g><title>labs2024.exe`alloc::alloc::Global::alloc_impl (330 samples, 1.59%)</title><rect x="44.4005%" y="165" width="1.5909%" height="15" fill="rgb(228,149,22)" fg:x="9210" fg:w="330"/><text x="44.6505%" y="175.50"></text></g><g><title>labs2024.exe`alloc::alloc::alloc (330 samples, 1.59%)</title><rect x="44.4005%" y="149" width="1.5909%" height="15" fill="rgb(243,54,13)" fg:x="9210" fg:w="330"/><text x="44.6505%" y="159.50"></text></g><g><title>labs2024.exe`labs2024::_::__rust_alloc (328 samples, 1.58%)</title><rect x="44.4102%" y="133" width="1.5813%" height="15" fill="rgb(243,180,28)" fg:x="9212" fg:w="328"/><text x="44.6602%" y="143.50"></text></g><g><title>labs2024.exe`mimalloc::impl$0::alloc (328 samples, 1.58%)</title><rect x="44.4102%" y="117" width="1.5813%" height="15" fill="rgb(208,167,24)" fg:x="9212" fg:w="328"/><text x="44.6602%" y="127.50"></text></g><g><title>labs2024.exe`mi_malloc_aligned(unsigned long long, unsigned long long) (43 samples, 0.21%)</title><rect x="45.7841%" y="101" width="0.2073%" height="15" fill="rgb(245,73,45)" fg:x="9497" fg:w="43"/><text x="46.0341%" y="111.50"></text></g><g><title>labs2024.exe`mi_prim_get_default_heap() (20 samples, 0.10%)</title><rect x="45.8950%" y="85" width="0.0964%" height="15" fill="rgb(237,203,48)" fg:x="9520" fg:w="20"/><text x="46.1450%" y="95.50"></text></g><g><title>labs2024.exe`serde::de::impls::impl$6::visit_str(serde::de::impls::StringVisitor, ref$ (340 samples, 1.64%)</title><rect x="44.3812%" y="341" width="1.6391%" height="15" fill="rgb(211,197,16)" fg:x="9206" fg:w="340"/><text x="44.6312%" y="351.50"></text></g><g><title>labs2024.exe`alloc::str::impl$4::to_owned(ref$ (340 samples, 1.64%)</title><rect x="44.3812%" y="325" width="1.6391%" height="15" fill="rgb(243,99,51)" fg:x="9206" fg:w="340"/><text x="44.6312%" y="335.50"></text></g><g><title>labs2024.exe`alloc::slice::impl$9::to_owned(ref$&lt;slice2$ (340 samples, 1.64%)</title><rect x="44.3812%" y="309" width="1.6391%" height="15" fill="rgb(215,123,29)" fg:x="9206" fg:w="340"/><text x="44.6312%" y="319.50"></text></g><g><title>labs2024.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (340 samples, 1.64%)</title><rect x="44.3812%" y="293" width="1.6391%" height="15" fill="rgb(239,186,37)" fg:x="9206" fg:w="340"/><text x="44.6312%" y="303.50"></text></g><g><title>labs2024.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (340 samples, 1.64%)</title><rect x="44.3812%" y="277" width="1.6391%" height="15" fill="rgb(252,136,39)" fg:x="9206" fg:w="340"/><text x="44.6312%" y="287.50"></text></g><g><title>labs2024.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (340 samples, 1.64%)</title><rect x="44.3812%" y="261" width="1.6391%" height="15" fill="rgb(223,213,32)" fg:x="9206" fg:w="340"/><text x="44.6312%" y="271.50"></text></g><g><title>labs2024.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (340 samples, 1.64%)</title><rect x="44.3812%" y="245" width="1.6391%" height="15" fill="rgb(233,115,5)" fg:x="9206" fg:w="340"/><text x="44.6312%" y="255.50"></text></g><g><title>labs2024.exe`core::ptr::const_ptr::impl$0::copy_to_nonoverlapping (6 samples, 0.03%)</title><rect x="45.9914%" y="229" width="0.0289%" height="15" fill="rgb(207,226,44)" fg:x="9540" fg:w="6"/><text x="46.2414%" y="239.50"></text></g><g><title>labs2024.exe`core::intrinsics::copy_nonoverlapping (6 samples, 0.03%)</title><rect x="45.9914%" y="213" width="0.0289%" height="15" fill="rgb(208,126,0)" fg:x="9540" fg:w="6"/><text x="46.2414%" y="223.50"></text></g><g><title>labs2024.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::parse_whitespace (10 samples, 0.05%)</title><rect x="46.0203%" y="341" width="0.0482%" height="15" fill="rgb(244,66,21)" fg:x="9546" fg:w="10"/><text x="46.2703%" y="351.50"></text></g><g><title>labs2024.exe`serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;::peek (10 samples, 0.05%)</title><rect x="46.0203%" y="325" width="0.0482%" height="15" fill="rgb(222,97,12)" fg:x="9546" fg:w="10"/><text x="46.2703%" y="335.50"></text></g><g><title>labs2024.exe`serde_json::read::impl$10::peek (10 samples, 0.05%)</title><rect x="46.0203%" y="309" width="0.0482%" height="15" fill="rgb(219,213,19)" fg:x="9546" fg:w="10"/><text x="46.2703%" y="319.50"></text></g><g><title>labs2024.exe`serde_json::read::impl$7::peek (10 samples, 0.05%)</title><rect x="46.0203%" y="293" width="0.0482%" height="15" fill="rgb(252,169,30)" fg:x="9546" fg:w="10"/><text x="46.2703%" y="303.50"></text></g><g><title>labs2024.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::Range (27 samples, 0.13%)</title><rect x="50.2676%" y="309" width="0.1302%" height="15" fill="rgb(206,32,51)" fg:x="10427" fg:w="27"/><text x="50.5176%" y="319.50"></text></g><g><title>labs2024.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (27 samples, 0.13%)</title><rect x="50.2676%" y="293" width="0.1302%" height="15" fill="rgb(250,172,42)" fg:x="10427" fg:w="27"/><text x="50.5176%" y="303.50"></text></g><g><title>labs2024.exe`enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,serde_json::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,serde_json::error::Error&gt; &gt;, enum2$&lt;serde_json::read::Reference&lt;str$&gt; &gt; (*)(ref$ (8 samples, 0.04%)</title><rect x="50.3977%" y="309" width="0.0386%" height="15" fill="rgb(209,34,43)" fg:x="10454" fg:w="8"/><text x="50.6477%" y="319.50"></text></g><g><title>labs2024.exe`serde_json::de::impl$7::deserialize_seq&lt;serde_json::read::StrRead,serde::de::impls::impl$19::deserialize::VecVisitor&lt;alloc::string::String&gt; &gt;(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, serde::de::impls::impl$19::deserialize::VecVisitor (2,541 samples, 12.25%)</title><rect x="38.1912%" y="421" width="12.2499%" height="15" fill="rgb(223,11,35)" fg:x="7922" fg:w="2541"/><text x="38.4412%" y="431.50">labs2024.exe`serde..</text></g><g><title>labs2024.exe`serde::de::impls::impl$19::deserialize::impl$0::visit_seq&lt;alloc::string::String,serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt; &gt;(serde::de::impls::impl$19::deserialize::VecVisitor&lt;alloc::string::String&gt;, serde_json::de::SeqAccess (2,541 samples, 12.25%)</title><rect x="38.1912%" y="405" width="12.2499%" height="15" fill="rgb(251,219,26)" fg:x="7922" fg:w="2541"/><text x="38.4412%" y="415.50">labs2024.exe`serde..</text></g><g><title>labs2024.exe`serde_json::de::impl$9::next_element_seed&lt;serde_json::read::StrRead,core::marker::PhantomData&lt;alloc::string::String&gt; &gt;(serde_json::de::SeqAccess&lt;serde_json::read::StrRead&gt;*, core::marker::PhantomData (1,715 samples, 8.27%)</title><rect x="42.1733%" y="389" width="8.2678%" height="15" fill="rgb(231,119,3)" fg:x="8748" fg:w="1715"/><text x="42.4233%" y="399.50">labs2024.exe..</text></g><g><title>labs2024.exe`serde_json::de::impl$7::deserialize_string&lt;serde_json::read::StrRead,serde::de::impls::StringVisitor&gt;(serde_json::de::Deserializer (1,390 samples, 6.70%)</title><rect x="43.7401%" y="373" width="6.7011%" height="15" fill="rgb(216,97,11)" fg:x="9073" fg:w="1390"/><text x="43.9901%" y="383.50">labs2024...</text></g><g><title>labs2024.exe`serde_json::de::impl$7::deserialize_str(serde_json::de::Deserializer (1,363 samples, 6.57%)</title><rect x="43.8702%" y="357" width="6.5709%" height="15" fill="rgb(223,59,9)" fg:x="9100" fg:w="1363"/><text x="44.1202%" y="367.50">labs2024...</text></g><g><title>labs2024.exe`serde_json::read::impl$10::parse_str(serde_json::read::StrRead*, alloc::vec::Vec (907 samples, 4.37%)</title><rect x="46.0686%" y="341" width="4.3726%" height="15" fill="rgb(233,93,31)" fg:x="9556" fg:w="907"/><text x="46.3186%" y="351.50">labs2..</text></g><g><title>labs2024.exe`serde_json::read::SliceRead::parse_str_bytes(alloc::vec::Vec (845 samples, 4.07%)</title><rect x="46.3674%" y="325" width="4.0737%" height="15" fill="rgb(239,81,33)" fg:x="9618" fg:w="845"/><text x="46.6174%" y="335.50">labs..</text></g><g><title>labs2024.exe`enum2$&lt;core::option::Option&lt;alloc::string::String&gt; &gt;::is_some (2,543 samples, 12.26%)</title><rect x="38.1912%" y="437" width="12.2596%" height="15" fill="rgb(213,120,34)" fg:x="7922" fg:w="2543"/><text x="38.4412%" y="447.50">labs2024.exe`enum2..</text></g><g><title>labs2024.exe`labs2024::_::impl$0::deserialize::impl$2::visit_map(labs2024::_::impl$0::deserialize::__Visitor, serde_json::de::MapAccess (2,545 samples, 12.27%)</title><rect x="38.1912%" y="453" width="12.2692%" height="15" fill="rgb(243,49,53)" fg:x="7922" fg:w="2545"/><text x="38.4412%" y="463.50">labs2024.exe`labs2..</text></g><g><title>labs2024.exe`serde_json::de::from_str(ref$ (2,547 samples, 12.28%)</title><rect x="38.1864%" y="501" width="12.2788%" height="15" fill="rgb(247,216,33)" fg:x="7921" fg:w="2547"/><text x="38.4364%" y="511.50">labs2024.exe`serde..</text></g><g><title>labs2024.exe`serde_json::de::from_trait&lt;serde_json::read::StrRead,labs2024::FileData&gt; (2,547 samples, 12.28%)</title><rect x="38.1864%" y="485" width="12.2788%" height="15" fill="rgb(226,26,14)" fg:x="7921" fg:w="2547"/><text x="38.4364%" y="495.50">labs2024.exe`serde..</text></g><g><title>labs2024.exe`serde_json::de::impl$7::deserialize_struct&lt;serde_json::read::StrRead,labs2024::_::impl$0::deserialize::__Visitor&gt;(serde_json::de::Deserializer&lt;serde_json::read::StrRead&gt;*, ref$&lt;str$&gt;, ref$&lt;slice2$&lt;ref$ (2,547 samples, 12.28%)</title><rect x="38.1864%" y="469" width="12.2788%" height="15" fill="rgb(215,49,53)" fg:x="7921" fg:w="2547"/><text x="38.4364%" y="479.50">labs2024.exe`serde..</text></g><g><title>labs2024.exe`core::num::impl$9::rotate_left (64 samples, 0.31%)</title><rect x="52.4804%" y="309" width="0.3085%" height="15" fill="rgb(245,162,40)" fg:x="10886" fg:w="64"/><text x="52.7304%" y="319.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$8::c_rounds (112 samples, 0.54%)</title><rect x="52.3405%" y="325" width="0.5399%" height="15" fill="rgb(229,68,17)" fg:x="10857" fg:w="112"/><text x="52.5905%" y="335.50"></text></g><g><title>labs2024.exe`core::num::impl$9::wrapping_add (19 samples, 0.09%)</title><rect x="52.7889%" y="309" width="0.0916%" height="15" fill="rgb(213,182,10)" fg:x="10950" fg:w="19"/><text x="53.0389%" y="319.50"></text></g><g><title>labs2024.exe`core::hash::impls::impl$5::hash(ref$ (550 samples, 2.65%)</title><rect x="51.1787%" y="437" width="2.6515%" height="15" fill="rgb(245,125,30)" fg:x="10616" fg:w="550"/><text x="51.4287%" y="447.50">la..</text></g><g><title>labs2024.exe`core::hash::impls::impl$2::hash(ref$ (550 samples, 2.65%)</title><rect x="51.1787%" y="421" width="2.6515%" height="15" fill="rgb(232,202,2)" fg:x="10616" fg:w="550"/><text x="51.4287%" y="431.50">la..</text></g><g><title>labs2024.exe`std::collections::hash::map::impl$86::write_str(std::collections::hash::map::DefaultHasher*, ref$ (550 samples, 2.65%)</title><rect x="51.1787%" y="405" width="2.6515%" height="15" fill="rgb(237,140,51)" fg:x="10616" fg:w="550"/><text x="51.4287%" y="415.50">la..</text></g><g><title>labs2024.exe`core::hash::sip::impl$4::write_str(core::hash::sip::SipHasher13*, ref$ (550 samples, 2.65%)</title><rect x="51.1787%" y="389" width="2.6515%" height="15" fill="rgb(236,157,25)" fg:x="10616" fg:w="550"/><text x="51.4287%" y="399.50">la..</text></g><g><title>labs2024.exe`core::hash::sip::impl$5::write_str(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$ (550 samples, 2.65%)</title><rect x="51.1787%" y="373" width="2.6515%" height="15" fill="rgb(219,209,0)" fg:x="10616" fg:w="550"/><text x="51.4287%" y="383.50">la..</text></g><g><title>labs2024.exe`core::hash::Hasher::write_u8(core::hash::sip::Hasher (527 samples, 2.54%)</title><rect x="51.2896%" y="357" width="2.5406%" height="15" fill="rgb(240,116,54)" fg:x="10639" fg:w="527"/><text x="51.5396%" y="367.50">la..</text></g><g><title>labs2024.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (511 samples, 2.46%)</title><rect x="51.3667%" y="341" width="2.4635%" height="15" fill="rgb(216,10,36)" fg:x="10655" fg:w="511"/><text x="51.6167%" y="351.50">la..</text></g><g><title>labs2024.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (197 samples, 0.95%)</title><rect x="52.8805%" y="325" width="0.9497%" height="15" fill="rgb(222,72,44)" fg:x="10969" fg:w="197"/><text x="53.1305%" y="335.50"></text></g><g><title>labs2024.exe`core::intrinsics::copy_nonoverlapping (29 samples, 0.14%)</title><rect x="53.6904%" y="309" width="0.1398%" height="15" fill="rgb(232,159,9)" fg:x="11137" fg:w="29"/><text x="53.9404%" y="319.50"></text></g><g><title>labs2024.exe`std::collections::hash::map::impl$83::build_hasher (101 samples, 0.49%)</title><rect x="53.8302%" y="437" width="0.4869%" height="15" fill="rgb(210,39,32)" fg:x="11166" fg:w="101"/><text x="54.0802%" y="447.50"></text></g><g><title>labs2024.exe`core::hash::sip::SipHasher13::new_with_keys (14 samples, 0.07%)</title><rect x="54.2496%" y="421" width="0.0675%" height="15" fill="rgb(216,194,45)" fg:x="11253" fg:w="14"/><text x="54.4996%" y="431.50"></text></g><g><title>labs2024.exe`core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::new_with_keys (14 samples, 0.07%)</title><rect x="54.2496%" y="405" width="0.0675%" height="15" fill="rgb(218,18,35)" fg:x="11253" fg:w="14"/><text x="54.4996%" y="415.50"></text></g><g><title>labs2024.exe`core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;::reset (14 samples, 0.07%)</title><rect x="54.2496%" y="389" width="0.0675%" height="15" fill="rgb(207,83,51)" fg:x="11253" fg:w="14"/><text x="54.4996%" y="399.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$8::c_rounds (19 samples, 0.09%)</title><rect x="55.5561%" y="373" width="0.0916%" height="15" fill="rgb(225,63,43)" fg:x="11524" fg:w="19"/><text x="55.8061%" y="383.50"></text></g><g><title>labs2024.exe`core::num::impl$9::rotate_left (8 samples, 0.04%)</title><rect x="55.6091%" y="357" width="0.0386%" height="15" fill="rgb(207,57,36)" fg:x="11535" fg:w="8"/><text x="55.8591%" y="367.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$5::write&lt;core::hash::sip::Sip13Rounds&gt;(core::hash::sip::Hasher&lt;core::hash::sip::Sip13Rounds&gt;*, ref$&lt;slice2$ (259 samples, 1.25%)</title><rect x="54.8378%" y="389" width="1.2486%" height="15" fill="rgb(216,99,33)" fg:x="11375" fg:w="259"/><text x="55.0878%" y="399.50"></text></g><g><title>labs2024.exe`core::hash::sip::u8to64_le(ref$&lt;slice2$ (91 samples, 0.44%)</title><rect x="55.6477%" y="373" width="0.4387%" height="15" fill="rgb(225,42,16)" fg:x="11543" fg:w="91"/><text x="55.8977%" y="383.50"></text></g><g><title>labs2024.exe`core::num::impl$9::rotate_left (16 samples, 0.08%)</title><rect x="56.2455%" y="373" width="0.0771%" height="15" fill="rgb(220,201,45)" fg:x="11667" fg:w="16"/><text x="56.4955%" y="383.50"></text></g><g><title>labs2024.exe`core::hash::sip::impl$8::c_rounds (90 samples, 0.43%)</title><rect x="56.0864%" y="389" width="0.4339%" height="15" fill="rgb(225,33,4)" fg:x="11634" fg:w="90"/><text x="56.3364%" y="399.50"></text></g><g><title>labs2024.exe`core::num::impl$9::wrapping_add (41 samples, 0.20%)</title><rect x="56.3226%" y="373" width="0.1977%" height="15" fill="rgb(224,33,50)" fg:x="11683" fg:w="41"/><text x="56.5726%" y="383.50"></text></g><g><title>labs2024.exe`core::num::impl$9::rotate_left (154 samples, 0.74%)</title><rect x="56.8770%" y="373" width="0.7424%" height="15" fill="rgb(246,198,51)" fg:x="11798" fg:w="154"/><text x="57.1270%" y="383.50"></text></g><g><title>labs2024.exe`core::hash::BuildHasher::hash_one&lt;std::collections::hash::map::RandomState,ref$&lt;str$&gt; &gt;(std::collections::hash::map::RandomState*, ref$ (1,486 samples, 7.16%)</title><rect x="50.7545%" y="453" width="7.1639%" height="15" fill="rgb(205,22,4)" fg:x="10528" fg:w="1486"/><text x="51.0045%" y="463.50">labs2024.e..</text></g><g><title>labs2024.exe`std::collections::hash::map::impl$86::finish (747 samples, 3.60%)</title><rect x="54.3171%" y="437" width="3.6012%" height="15" fill="rgb(206,3,8)" fg:x="11267" fg:w="747"/><text x="54.5671%" y="447.50">labs..</text></g><g><title>labs2024.exe`core::hash::sip::impl$4::finish (747 samples, 3.60%)</title><rect x="54.3171%" y="421" width="3.6012%" height="15" fill="rgb(251,23,15)" fg:x="11267" fg:w="747"/><text x="54.5671%" y="431.50">labs..</text></g><g><title>labs2024.exe`core::hash::sip::impl$5::finish(core::hash::sip::Hasher (747 samples, 3.60%)</title><rect x="54.3171%" y="405" width="3.6012%" height="15" fill="rgb(252,88,28)" fg:x="11267" fg:w="747"/><text x="54.5671%" y="415.50">labs..</text></g><g><title>labs2024.exe`core::hash::sip::impl$8::d_rounds (290 samples, 1.40%)</title><rect x="56.5203%" y="389" width="1.3981%" height="15" fill="rgb(212,127,14)" fg:x="11724" fg:w="290"/><text x="56.7703%" y="399.50"></text></g><g><title>labs2024.exe`core::num::impl$9::wrapping_add (62 samples, 0.30%)</title><rect x="57.6194%" y="373" width="0.2989%" height="15" fill="rgb(247,145,37)" fg:x="11952" fg:w="62"/><text x="57.8694%" y="383.50"></text></g><g><title>labs2024.exe`hashbrown::map::make_hash(std::collections::hash::map::RandomState*, ref$ (33 samples, 0.16%)</title><rect x="57.9183%" y="453" width="0.1591%" height="15" fill="rgb(209,117,53)" fg:x="12014" fg:w="33"/><text x="58.1683%" y="463.50"></text></g><g><title>labs2024.exe`hashbrown::raw::bitmask::impl$3::next (56 samples, 0.27%)</title><rect x="58.4824%" y="405" width="0.2700%" height="15" fill="rgb(212,90,42)" fg:x="12131" fg:w="56"/><text x="58.7324%" y="415.50"></text></g><g><title>labs2024.exe`hashbrown::raw::bitmask::BitMask::lowest_set_bit (56 samples, 0.27%)</title><rect x="58.4824%" y="389" width="0.2700%" height="15" fill="rgb(218,164,37)" fg:x="12131" fg:w="56"/><text x="58.7324%" y="399.50"></text></g><g><title>labs2024.exe`hashbrown::raw::h2 (186 samples, 0.90%)</title><rect x="58.7524%" y="405" width="0.8967%" height="15" fill="rgb(246,65,34)" fg:x="12187" fg:w="186"/><text x="59.0024%" y="415.50"></text></g><g><title>`0x7FFEA3010FC3 (19 samples, 0.09%)</title><rect x="81.8879%" y="277" width="0.0916%" height="15" fill="rgb(231,100,33)" fg:x="16986" fg:w="19"/><text x="82.1379%" y="287.50"></text></g><g><title>`0x7FFEA3010FD0 (10 samples, 0.05%)</title><rect x="81.9795%" y="277" width="0.0482%" height="15" fill="rgb(228,126,14)" fg:x="17005" fg:w="10"/><text x="82.2295%" y="287.50"></text></g><g><title>`0x7FFEA3010FD7 (343 samples, 1.65%)</title><rect x="82.0325%" y="277" width="1.6536%" height="15" fill="rgb(215,173,21)" fg:x="17016" fg:w="343"/><text x="82.2825%" y="287.50"></text></g><g><title>`0x7FFEA3010FE2 (4 samples, 0.02%)</title><rect x="83.6957%" y="277" width="0.0193%" height="15" fill="rgb(210,6,40)" fg:x="17361" fg:w="4"/><text x="83.9457%" y="287.50"></text></g><g><title>`0x7FFEA3010FF0 (4 samples, 0.02%)</title><rect x="83.7295%" y="277" width="0.0193%" height="15" fill="rgb(212,48,18)" fg:x="17368" fg:w="4"/><text x="83.9795%" y="287.50"></text></g><g><title>`0x7FFEA3010FF7 (237 samples, 1.14%)</title><rect x="83.7584%" y="277" width="1.1426%" height="15" fill="rgb(230,214,11)" fg:x="17374" fg:w="237"/><text x="84.0084%" y="287.50"></text></g><g><title>`0x7FFEA3010FFA (18 samples, 0.09%)</title><rect x="84.9009%" y="277" width="0.0868%" height="15" fill="rgb(254,105,39)" fg:x="17611" fg:w="18"/><text x="85.1509%" y="287.50"></text></g><g><title>`0x7FFEA301100A (4 samples, 0.02%)</title><rect x="85.0022%" y="277" width="0.0193%" height="15" fill="rgb(245,158,5)" fg:x="17632" fg:w="4"/><text x="85.2522%" y="287.50"></text></g><g><title>`0x7FFEA3011019 (16 samples, 0.08%)</title><rect x="85.0215%" y="277" width="0.0771%" height="15" fill="rgb(249,208,11)" fg:x="17636" fg:w="16"/><text x="85.2715%" y="287.50"></text></g><g><title>`0x7FFEA301103A (4 samples, 0.02%)</title><rect x="85.1034%" y="277" width="0.0193%" height="15" fill="rgb(210,39,28)" fg:x="17653" fg:w="4"/><text x="85.3534%" y="287.50"></text></g><g><title>`0x7FFEA3011059 (29 samples, 0.14%)</title><rect x="85.1468%" y="277" width="0.1398%" height="15" fill="rgb(211,56,53)" fg:x="17662" fg:w="29"/><text x="85.3968%" y="287.50"></text></g><g><title>`0x7FFEA3011062 (4 samples, 0.02%)</title><rect x="85.2914%" y="277" width="0.0193%" height="15" fill="rgb(226,201,30)" fg:x="17692" fg:w="4"/><text x="85.5414%" y="287.50"></text></g><g><title>`0x7FFEA3011066 (3 samples, 0.01%)</title><rect x="85.3107%" y="277" width="0.0145%" height="15" fill="rgb(239,101,34)" fg:x="17696" fg:w="3"/><text x="85.5607%" y="287.50"></text></g><g><title>labs2024.exe`hashbrown::map::equivalent_key::closure$0(hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;*, tuple$&lt;alloc::string::String,alloc::vec::Vec (1,122 samples, 5.41%)</title><rect x="80.0897%" y="389" width="5.4091%" height="15" fill="rgb(226,209,5)" fg:x="16613" fg:w="1122"/><text x="80.3397%" y="399.50">labs202..</text></g><g><title>labs2024.exe`hashbrown::impl$0::equivalent(ref$ (1,122 samples, 5.41%)</title><rect x="80.0897%" y="373" width="5.4091%" height="15" fill="rgb(250,105,47)" fg:x="16613" fg:w="1122"/><text x="80.3397%" y="383.50">labs202..</text></g><g><title>labs2024.exe`core::cmp::impls::impl$9::eq(ref$&lt;str$&gt;*, ref$ (1,122 samples, 5.41%)</title><rect x="80.0897%" y="357" width="5.4091%" height="15" fill="rgb(230,72,3)" fg:x="16613" fg:w="1122"/><text x="80.3397%" y="367.50">labs202..</text></g><g><title>labs2024.exe`core::str::traits::impl$1::eq(ref$&lt;str$&gt;, ref$ (1,122 samples, 5.41%)</title><rect x="80.0897%" y="341" width="5.4091%" height="15" fill="rgb(232,218,39)" fg:x="16613" fg:w="1122"/><text x="80.3397%" y="351.50">labs202..</text></g><g><title>labs2024.exe`core::cmp::impls::impl$9::eq(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref$&lt;slice2$ (1,122 samples, 5.41%)</title><rect x="80.0897%" y="325" width="5.4091%" height="15" fill="rgb(248,166,6)" fg:x="16613" fg:w="1122"/><text x="80.3397%" y="335.50">labs202..</text></g><g><title>labs2024.exe`core::slice::cmp::impl$0::eq(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1,122 samples, 5.41%)</title><rect x="80.0897%" y="309" width="5.4091%" height="15" fill="rgb(247,89,20)" fg:x="16613" fg:w="1122"/><text x="80.3397%" y="319.50">labs202..</text></g><g><title>labs2024.exe`core::slice::cmp::impl$5::equal(ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (1,122 samples, 5.41%)</title><rect x="80.0897%" y="293" width="5.4091%" height="15" fill="rgb(248,130,54)" fg:x="16613" fg:w="1122"/><text x="80.3397%" y="303.50">labs202..</text></g><g><title>labs2024.exe`memcmp (36 samples, 0.17%)</title><rect x="85.3252%" y="277" width="0.1736%" height="15" fill="rgb(234,196,4)" fg:x="17699" fg:w="36"/><text x="85.5752%" y="287.50"></text></g><g><title>labs2024.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt; &gt;::as_ptr (64 samples, 0.31%)</title><rect x="85.4987%" y="373" width="0.3085%" height="15" fill="rgb(250,143,31)" fg:x="17735" fg:w="64"/><text x="85.7487%" y="383.50"></text></g><g><title>labs2024.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;alloc::string::String,alloc::vec::Vec (64 samples, 0.31%)</title><rect x="85.4987%" y="357" width="0.3085%" height="15" fill="rgb(211,110,34)" fg:x="17735" fg:w="64"/><text x="85.7487%" y="367.50"></text></g><g><title>labs2024.exe`core::ptr::mut_ptr::impl$0::offset(tuple$&lt;alloc::string::String,alloc::vec::Vec (64 samples, 0.31%)</title><rect x="85.4987%" y="341" width="0.3085%" height="15" fill="rgb(215,124,48)" fg:x="17735" fg:w="64"/><text x="85.7487%" y="351.50"></text></g><g><title>labs2024.exe`hashbrown::raw::impl$7::find::closure$0(hashbrown::raw::impl$7::find::closure_env$0&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global,hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,alloc::vec::Vec (5,444 samples, 26.24%)</title><rect x="59.6490%" y="405" width="26.2450%" height="15" fill="rgb(216,46,13)" fg:x="12373" fg:w="5444"/><text x="59.8990%" y="415.50">labs2024.exe`hashbrown::raw::impl$7::find:..</text></g><g><title>labs2024.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::bucket (82 samples, 0.40%)</title><rect x="85.4987%" y="389" width="0.3953%" height="15" fill="rgb(205,184,25)" fg:x="17735" fg:w="82"/><text x="85.7487%" y="399.50"></text></g><g><title>labs2024.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt; &gt;::from_base_index(core::ptr::non_null::NonNull&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec (18 samples, 0.09%)</title><rect x="85.8073%" y="373" width="0.0868%" height="15" fill="rgb(228,1,10)" fg:x="17799" fg:w="18"/><text x="86.0573%" y="383.50"></text></g><g><title>labs2024.exe`core::ptr::mut_ptr::impl$0::sub(tuple$&lt;alloc::string::String,alloc::vec::Vec (18 samples, 0.09%)</title><rect x="85.8073%" y="357" width="0.0868%" height="15" fill="rgb(213,116,27)" fg:x="17799" fg:w="18"/><text x="86.0573%" y="367.50"></text></g><g><title>labs2024.exe`hashbrown::raw::sse2::Group::load (54 samples, 0.26%)</title><rect x="85.8940%" y="405" width="0.2603%" height="15" fill="rgb(241,95,50)" fg:x="17817" fg:w="54"/><text x="86.1440%" y="415.50"></text></g><g><title>labs2024.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (54 samples, 0.26%)</title><rect x="85.8940%" y="389" width="0.2603%" height="15" fill="rgb(238,48,32)" fg:x="17817" fg:w="54"/><text x="86.1440%" y="399.50"></text></g><g><title>labs2024.exe`core::intrinsics::copy_nonoverlapping (54 samples, 0.26%)</title><rect x="85.8940%" y="373" width="0.2603%" height="15" fill="rgb(235,113,49)" fg:x="17817" fg:w="54"/><text x="86.1440%" y="383.50"></text></g><g><title>labs2024.exe`hashbrown::raw::sse2::Group::match_byte (858 samples, 4.14%)</title><rect x="86.1544%" y="405" width="4.1363%" height="15" fill="rgb(205,127,43)" fg:x="17871" fg:w="858"/><text x="86.4044%" y="415.50">labs2..</text></g><g><title>labs2024.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (858 samples, 4.14%)</title><rect x="86.1544%" y="389" width="4.1363%" height="15" fill="rgb(250,162,2)" fg:x="17871" fg:w="858"/><text x="86.4044%" y="399.50">labs2..</text></g><g><title>labs2024.exe`std::collections::hash::map::HashMap&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;,std::collections::hash::map::RandomState&gt;::get_mut(ref$ (8,266 samples, 39.85%)</title><rect x="50.4652%" y="501" width="39.8496%" height="15" fill="rgb(220,13,41)" fg:x="10468" fg:w="8266"/><text x="50.7152%" y="511.50">labs2024.exe`std::collections::hash::map::HashMap&lt;alloc::string::..</text></g><g><title>labs2024.exe`hashbrown::map::HashMap&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get_mut(ref$ (8,266 samples, 39.85%)</title><rect x="50.4652%" y="485" width="39.8496%" height="15" fill="rgb(249,221,25)" fg:x="10468" fg:w="8266"/><text x="50.7152%" y="495.50">labs2024.exe`hashbrown::map::HashMap&lt;alloc::string::String,alloc:..</text></g><g><title>labs2024.exe`hashbrown::map::HashMap&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;,std::collections::hash::map::RandomState,alloc::alloc::Global&gt;::get_inner_mut(ref$ (8,261 samples, 39.83%)</title><rect x="50.4893%" y="469" width="39.8255%" height="15" fill="rgb(215,208,19)" fg:x="10473" fg:w="8261"/><text x="50.7393%" y="479.50">labs2024.exe`hashbrown::map::HashMap&lt;alloc::string::String,alloc:..</text></g><g><title>labs2024.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::get_mut(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,alloc::vec::Vec (6,687 samples, 32.24%)</title><rect x="58.0774%" y="453" width="32.2374%" height="15" fill="rgb(236,175,2)" fg:x="12047" fg:w="6687"/><text x="58.3274%" y="463.50">labs2024.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::..</text></g><g><title>labs2024.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;str$,alloc::string::String,alloc::vec::Vec (6,687 samples, 32.24%)</title><rect x="58.0774%" y="437" width="32.2374%" height="15" fill="rgb(241,52,2)" fg:x="12047" fg:w="6687"/><text x="58.3274%" y="447.50">labs2024.exe`hashbrown::raw::RawTable&lt;tuple$&lt;alloc::..</text></g><g><title>labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (6,687 samples, 32.24%)</title><rect x="58.0774%" y="421" width="32.2374%" height="15" fill="rgb(248,140,14)" fg:x="12047" fg:w="6687"/><text x="58.3274%" y="431.50">labs2024.exe`hashbrown::raw::RawTableInner&lt;alloc::al..</text></g><g><title>labs2024.exe`hashbrown::raw::sse2::Group::match_empty (5 samples, 0.02%)</title><rect x="90.2907%" y="405" width="0.0241%" height="15" fill="rgb(253,22,42)" fg:x="18729" fg:w="5"/><text x="90.5407%" y="415.50"></text></g><g><title>labs2024.exe`hashbrown::raw::sse2::Group::match_byte (5 samples, 0.02%)</title><rect x="90.2907%" y="389" width="0.0241%" height="15" fill="rgb(234,61,47)" fg:x="18729" fg:w="5"/><text x="90.5407%" y="399.50"></text></g><g><title>labs2024.exe`core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.02%)</title><rect x="90.2907%" y="373" width="0.0241%" height="15" fill="rgb(208,226,15)" fg:x="18729" fg:w="5"/><text x="90.5407%" y="383.50"></text></g><g><title>labs2024.exe`enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,core::str::error::Utf8Error&gt; &gt;::is_err (74 samples, 0.36%)</title><rect x="90.3196%" y="469" width="0.3567%" height="15" fill="rgb(217,221,4)" fg:x="18735" fg:w="74"/><text x="90.5696%" y="479.50"></text></g><g><title>labs2024.exe`enum2$&lt;core::result::Result&lt;ref$&lt;str$&gt;,core::str::error::Utf8Error&gt; &gt;::is_ok (74 samples, 0.36%)</title><rect x="90.3196%" y="453" width="0.3567%" height="15" fill="rgb(212,174,34)" fg:x="18735" fg:w="74"/><text x="90.5696%" y="463.50"></text></g><g><title>labs2024.exe`core::str::converts::from_utf8 (74 samples, 0.36%)</title><rect x="90.3196%" y="437" width="0.3567%" height="15" fill="rgb(253,83,4)" fg:x="18735" fg:w="74"/><text x="90.5696%" y="447.50"></text></g><g><title>labs2024.exe`core::str::validations::run_utf8_validation (74 samples, 0.36%)</title><rect x="90.3196%" y="421" width="0.3567%" height="15" fill="rgb(250,195,49)" fg:x="18735" fg:w="74"/><text x="90.5696%" y="431.50"></text></g><g><title>labs2024.exe`core::str::validations::contains_nonascii (45 samples, 0.22%)</title><rect x="90.4594%" y="405" width="0.2169%" height="15" fill="rgb(241,192,25)" fg:x="18764" fg:w="45"/><text x="90.7094%" y="415.50"></text></g><g><title>labs2024.exe`mi_segment_os_alloc(unsigned long long, unsigned long long, bool, int, unsigned long long*, unsigned long long*, unsigned long long*, bool, mi_segments_tld_s*, mi_os_tld_s*) (3 samples, 0.01%)</title><rect x="90.7053%" y="197" width="0.0145%" height="15" fill="rgb(208,124,10)" fg:x="18815" fg:w="3"/><text x="90.9553%" y="207.50"></text></g><g><title>labs2024.exe`_mi_arena_alloc_aligned(unsigned long long, unsigned long long, unsigned long long, bool, bool, int, mi_memid_s*, mi_os_tld_s*) (3 samples, 0.01%)</title><rect x="90.7053%" y="181" width="0.0145%" height="15" fill="rgb(222,33,0)" fg:x="18815" fg:w="3"/><text x="90.9553%" y="191.50"></text></g><g><title>labs2024.exe`mi_arena_try_alloc(int, unsigned long long, unsigned long long, bool, bool, int, mi_memid_s*, mi_os_tld_s*) (3 samples, 0.01%)</title><rect x="90.7053%" y="165" width="0.0145%" height="15" fill="rgb(234,209,28)" fg:x="18815" fg:w="3"/><text x="90.9553%" y="175.50"></text></g><g><title>labs2024.exe`mi_arena_try_alloc_at(mi_arena_s*, unsigned long long, unsigned long long, bool, mi_memid_s*, mi_os_tld_s*) (3 samples, 0.01%)</title><rect x="90.7053%" y="149" width="0.0145%" height="15" fill="rgb(224,11,23)" fg:x="18815" fg:w="3"/><text x="90.9553%" y="159.50"></text></g><g><title>labs2024.exe`_mi_os_commit(void*, unsigned long long, bool*, mi_stats_s*) (3 samples, 0.01%)</title><rect x="90.7053%" y="133" width="0.0145%" height="15" fill="rgb(232,99,1)" fg:x="18815" fg:w="3"/><text x="90.9553%" y="143.50"></text></g><g><title>labs2024.exe`_mi_prim_commit(void*, unsigned long long, bool*) (3 samples, 0.01%)</title><rect x="90.7053%" y="117" width="0.0145%" height="15" fill="rgb(237,95,45)" fg:x="18815" fg:w="3"/><text x="90.9553%" y="127.50"></text></g><g><title>`0x7FFEBB721868 (3 samples, 0.01%)</title><rect x="90.7053%" y="101" width="0.0145%" height="15" fill="rgb(208,109,11)" fg:x="18815" fg:w="3"/><text x="90.9553%" y="111.50"></text></g><g><title>`0x7FFEBDECFC54 (3 samples, 0.01%)</title><rect x="90.7053%" y="85" width="0.0145%" height="15" fill="rgb(216,190,48)" fg:x="18815" fg:w="3"/><text x="90.9553%" y="95.50"></text></g><g><title>labs2024.exe`mi_segment_alloc(unsigned long long, unsigned long long, int, mi_segments_tld_s*, mi_os_tld_s*, mi_page_s**) (4 samples, 0.02%)</title><rect x="90.7053%" y="213" width="0.0193%" height="15" fill="rgb(251,171,36)" fg:x="18815" fg:w="4"/><text x="90.9553%" y="223.50"></text></g><g><title>labs2024.exe`mi_page_fresh_alloc(mi_heap_s*, mi_page_queue_s*, unsigned long long, unsigned long long) (7 samples, 0.03%)</title><rect x="90.7053%" y="261" width="0.0337%" height="15" fill="rgb(230,62,22)" fg:x="18815" fg:w="7"/><text x="90.9553%" y="271.50"></text></g><g><title>labs2024.exe`_mi_segment_page_alloc(mi_heap_s*, unsigned long long, unsigned long long, mi_segments_tld_s*, mi_os_tld_s*) (7 samples, 0.03%)</title><rect x="90.7053%" y="245" width="0.0337%" height="15" fill="rgb(225,114,35)" fg:x="18815" fg:w="7"/><text x="90.9553%" y="255.50"></text></g><g><title>labs2024.exe`mi_segments_page_alloc(mi_heap_s*, mi_page_kind_e, unsigned long long, unsigned long long, mi_segments_tld_s*, mi_os_tld_s*) (7 samples, 0.03%)</title><rect x="90.7053%" y="229" width="0.0337%" height="15" fill="rgb(215,118,42)" fg:x="18815" fg:w="7"/><text x="90.9553%" y="239.50"></text></g><g><title>labs2024.exe`mi_segments_page_find_and_allocate(unsigned long long, int, mi_segments_tld_s*) (3 samples, 0.01%)</title><rect x="90.7246%" y="213" width="0.0145%" height="15" fill="rgb(243,119,21)" fg:x="18819" fg:w="3"/><text x="90.9746%" y="223.50"></text></g><g><title>labs2024.exe`_mi_segment_page_alloc(mi_heap_s*, unsigned long long, unsigned long long, mi_segments_tld_s*, mi_os_tld_s*) (6 samples, 0.03%)</title><rect x="90.7535%" y="213" width="0.0289%" height="15" fill="rgb(252,177,53)" fg:x="18825" fg:w="6"/><text x="91.0035%" y="223.50"></text></g><g><title>labs2024.exe`mi_segments_page_alloc(mi_heap_s*, mi_page_kind_e, unsigned long long, unsigned long long, mi_segments_tld_s*, mi_os_tld_s*) (6 samples, 0.03%)</title><rect x="90.7535%" y="197" width="0.0289%" height="15" fill="rgb(237,209,29)" fg:x="18825" fg:w="6"/><text x="91.0035%" y="207.50"></text></g><g><title>labs2024.exe`mi_segments_page_find_and_allocate(unsigned long long, int, mi_segments_tld_s*) (4 samples, 0.02%)</title><rect x="90.7631%" y="181" width="0.0193%" height="15" fill="rgb(212,65,23)" fg:x="18827" fg:w="4"/><text x="91.0131%" y="191.50"></text></g><g><title>labs2024.exe`mi_page_extend_free(mi_heap_s*, mi_page_s*, mi_tld_s*) (14 samples, 0.07%)</title><rect x="90.7824%" y="213" width="0.0675%" height="15" fill="rgb(230,222,46)" fg:x="18831" fg:w="14"/><text x="91.0324%" y="223.50"></text></g><g><title>labs2024.exe`mi_page_free_list_extend(mi_page_s* const, const unsigned long long, const unsigned long long, mi_stats_s* const) (14 samples, 0.07%)</title><rect x="90.7824%" y="197" width="0.0675%" height="15" fill="rgb(215,135,32)" fg:x="18831" fg:w="14"/><text x="91.0324%" y="207.50"></text></g><g><title>labs2024.exe`_mi_malloc_generic(mi_heap_s*, unsigned long long, bool, unsigned long long) (34 samples, 0.16%)</title><rect x="90.6908%" y="277" width="0.1639%" height="15" fill="rgb(246,101,22)" fg:x="18812" fg:w="34"/><text x="90.9408%" y="287.50"></text></g><g><title>labs2024.exe`mi_page_queue_find_free_ex(mi_heap_s*, mi_page_queue_s*, bool) (24 samples, 0.12%)</title><rect x="90.7390%" y="261" width="0.1157%" height="15" fill="rgb(206,107,13)" fg:x="18822" fg:w="24"/><text x="90.9890%" y="271.50"></text></g><g><title>labs2024.exe`mi_page_fresh(mi_heap_s*, mi_page_queue_s*) (23 samples, 0.11%)</title><rect x="90.7439%" y="245" width="0.1109%" height="15" fill="rgb(250,100,44)" fg:x="18823" fg:w="23"/><text x="90.9939%" y="255.50"></text></g><g><title>labs2024.exe`mi_page_fresh_alloc(mi_heap_s*, mi_page_queue_s*, unsigned long long, unsigned long long) (21 samples, 0.10%)</title><rect x="90.7535%" y="229" width="0.1012%" height="15" fill="rgb(231,147,38)" fg:x="18825" fg:w="21"/><text x="91.0035%" y="239.50"></text></g><g><title>labs2024.exe`_mi_memcpy(void*, void const*, unsigned long long) (449 samples, 2.16%)</title><rect x="90.8547%" y="277" width="2.1646%" height="15" fill="rgb(229,8,40)" fg:x="18846" fg:w="449"/><text x="91.1047%" y="287.50">l..</text></g><g><title>labs2024.exe`mi_segment_span_free(mi_segment_s*, unsigned long long, unsigned long long, bool, mi_segments_tld_s*) (3 samples, 0.01%)</title><rect x="93.0193%" y="229" width="0.0145%" height="15" fill="rgb(221,135,30)" fg:x="19295" fg:w="3"/><text x="93.2693%" y="239.50"></text></g><g><title>labs2024.exe`mi_segment_schedule_purge(mi_segment_s*, unsigned char*, unsigned long long, mi_stats_s*) (3 samples, 0.01%)</title><rect x="93.0193%" y="213" width="0.0145%" height="15" fill="rgb(249,193,18)" fg:x="19295" fg:w="3"/><text x="93.2693%" y="223.50"></text></g><g><title>labs2024.exe`_mi_segment_page_free(mi_page_s*, bool, mi_segments_tld_s*) (4 samples, 0.02%)</title><rect x="93.0193%" y="277" width="0.0193%" height="15" fill="rgb(209,133,39)" fg:x="19295" fg:w="4"/><text x="93.2693%" y="287.50"></text></g><g><title>labs2024.exe`mi_segment_page_clear(mi_page_s*, mi_segments_tld_s*) (4 samples, 0.02%)</title><rect x="93.0193%" y="261" width="0.0193%" height="15" fill="rgb(232,100,14)" fg:x="19295" fg:w="4"/><text x="93.2693%" y="271.50"></text></g><g><title>labs2024.exe`mi_segment_span_free_coalesce(mi_page_s*, mi_segments_tld_s*) (4 samples, 0.02%)</title><rect x="93.0193%" y="245" width="0.0193%" height="15" fill="rgb(224,185,1)" fg:x="19295" fg:w="4"/><text x="93.2693%" y="255.50"></text></g><g><title>labs2024.exe`_mi_heap_realloc_zero(mi_heap_s*, void*, unsigned long long, bool) (489 samples, 2.36%)</title><rect x="90.6860%" y="293" width="2.3574%" height="15" fill="rgb(223,139,8)" fg:x="18811" fg:w="489"/><text x="90.9360%" y="303.50">l..</text></g><g><title>labs2024.exe`mi_heap_malloc_aligned_at(mi_heap_s*, unsigned long long, unsigned long long, unsigned long long) (4 samples, 0.02%)</title><rect x="93.0434%" y="293" width="0.0193%" height="15" fill="rgb(232,213,38)" fg:x="19300" fg:w="4"/><text x="93.2934%" y="303.50"></text></g><g><title>labs2024.exe`mi_heap_malloc_zero_aligned_at_fallback(mi_heap_s* const, const unsigned long long, const unsigned long long, const unsigned long long, const bool) (4 samples, 0.02%)</title><rect x="93.0434%" y="277" width="0.0193%" height="15" fill="rgb(207,94,22)" fg:x="19300" fg:w="4"/><text x="93.2934%" y="287.50"></text></g><g><title>labs2024.exe`_mi_malloc_generic(mi_heap_s*, unsigned long long, bool, unsigned long long) (3 samples, 0.01%)</title><rect x="93.0483%" y="261" width="0.0145%" height="15" fill="rgb(219,183,54)" fg:x="19301" fg:w="3"/><text x="93.2983%" y="271.50"></text></g><g><title>labs2024.exe`mi_page_queue_find_free_ex(mi_heap_s*, mi_page_queue_s*, bool) (3 samples, 0.01%)</title><rect x="93.0483%" y="245" width="0.0145%" height="15" fill="rgb(216,185,54)" fg:x="19301" fg:w="3"/><text x="93.2983%" y="255.50"></text></g><g><title>labs2024.exe`mi_page_fresh(mi_heap_s*, mi_page_queue_s*) (3 samples, 0.01%)</title><rect x="93.0483%" y="229" width="0.0145%" height="15" fill="rgb(254,217,39)" fg:x="19301" fg:w="3"/><text x="93.2983%" y="239.50"></text></g><g><title>labs2024.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::len (495 samples, 2.39%)</title><rect x="90.6812%" y="389" width="2.3863%" height="15" fill="rgb(240,178,23)" fg:x="18810" fg:w="495"/><text x="90.9312%" y="399.50">la..</text></g><g><title>labs2024.exe`alloc::raw_vec::impl$1::reserve::do_reserve_and_handle&lt;u8,alloc::alloc::Global&gt;(alloc::raw_vec::RawVec (495 samples, 2.39%)</title><rect x="90.6812%" y="373" width="2.3863%" height="15" fill="rgb(218,11,47)" fg:x="18810" fg:w="495"/><text x="90.9312%" y="383.50">la..</text></g><g><title>labs2024.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::grow_amortized (494 samples, 2.38%)</title><rect x="90.6860%" y="357" width="2.3815%" height="15" fill="rgb(218,51,51)" fg:x="18811" fg:w="494"/><text x="90.9360%" y="367.50">la..</text></g><g><title>labs2024.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (494 samples, 2.38%)</title><rect x="90.6860%" y="341" width="2.3815%" height="15" fill="rgb(238,126,27)" fg:x="18811" fg:w="494"/><text x="90.9360%" y="351.50">la..</text></g><g><title>labs2024.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (494 samples, 2.38%)</title><rect x="90.6860%" y="325" width="2.3815%" height="15" fill="rgb(249,202,22)" fg:x="18811" fg:w="494"/><text x="90.9360%" y="335.50">la..</text></g><g><title>labs2024.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (494 samples, 2.38%)</title><rect x="90.6860%" y="309" width="2.3815%" height="15" fill="rgb(254,195,49)" fg:x="18811" fg:w="494"/><text x="90.9360%" y="319.50">la..</text></g><g><title>`0x7FFEA3011299 (6 samples, 0.03%)</title><rect x="93.1013%" y="373" width="0.0289%" height="15" fill="rgb(208,123,14)" fg:x="19312" fg:w="6"/><text x="93.3513%" y="383.50"></text></g><g><title>`0x7FFEA301129E (3 samples, 0.01%)</title><rect x="93.1302%" y="373" width="0.0145%" height="15" fill="rgb(224,200,8)" fg:x="19318" fg:w="3"/><text x="93.3802%" y="383.50"></text></g><g><title>`0x7FFEA30112A3 (42 samples, 0.20%)</title><rect x="93.1447%" y="373" width="0.2025%" height="15" fill="rgb(217,61,36)" fg:x="19321" fg:w="42"/><text x="93.3947%" y="383.50"></text></g><g><title>`0x7FFEA30112A7 (23 samples, 0.11%)</title><rect x="93.3472%" y="373" width="0.1109%" height="15" fill="rgb(206,35,45)" fg:x="19363" fg:w="23"/><text x="93.5972%" y="383.50"></text></g><g><title>`0x7FFEA30112AC (20 samples, 0.10%)</title><rect x="93.4580%" y="373" width="0.0964%" height="15" fill="rgb(217,65,33)" fg:x="19386" fg:w="20"/><text x="93.7080%" y="383.50"></text></g><g><title>`0x7FFEA30112B1 (28 samples, 0.13%)</title><rect x="93.5545%" y="373" width="0.1350%" height="15" fill="rgb(222,158,48)" fg:x="19406" fg:w="28"/><text x="93.8045%" y="383.50"></text></g><g><title>`0x7FFEA30112B6 (6 samples, 0.03%)</title><rect x="93.6894%" y="373" width="0.0289%" height="15" fill="rgb(254,2,54)" fg:x="19434" fg:w="6"/><text x="93.9394%" y="383.50"></text></g><g><title>`0x7FFEA30112C6 (4 samples, 0.02%)</title><rect x="93.7232%" y="373" width="0.0193%" height="15" fill="rgb(250,143,38)" fg:x="19441" fg:w="4"/><text x="93.9732%" y="383.50"></text></g><g><title>`0x7FFEA30112D6 (46 samples, 0.22%)</title><rect x="93.7425%" y="373" width="0.2218%" height="15" fill="rgb(248,25,0)" fg:x="19445" fg:w="46"/><text x="93.9925%" y="383.50"></text></g><g><title>`0x7FFEA30112DE (29 samples, 0.14%)</title><rect x="93.9642%" y="373" width="0.1398%" height="15" fill="rgb(206,152,27)" fg:x="19491" fg:w="29"/><text x="94.2142%" y="383.50"></text></g><g><title>`0x7FFEA30112E6 (27 samples, 0.13%)</title><rect x="94.1040%" y="373" width="0.1302%" height="15" fill="rgb(240,77,30)" fg:x="19520" fg:w="27"/><text x="94.3540%" y="383.50"></text></g><g><title>`0x7FFEA30112EE (26 samples, 0.13%)</title><rect x="94.2342%" y="373" width="0.1253%" height="15" fill="rgb(231,5,3)" fg:x="19547" fg:w="26"/><text x="94.4842%" y="383.50"></text></g><g><title>`0x7FFEA301132F (6 samples, 0.03%)</title><rect x="94.3692%" y="373" width="0.0289%" height="15" fill="rgb(207,226,32)" fg:x="19575" fg:w="6"/><text x="94.6192%" y="383.50"></text></g><g><title>labs2024.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_from_slice(ref$&lt;slice2$ (777 samples, 3.75%)</title><rect x="90.6812%" y="437" width="3.7458%" height="15" fill="rgb(222,207,47)" fg:x="18810" fg:w="777"/><text x="90.9312%" y="447.50">labs..</text></g><g><title>labs2024.exe`alloc::vec::spec_extend::impl$4::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::slice::iter::Iter (777 samples, 3.75%)</title><rect x="90.6812%" y="421" width="3.7458%" height="15" fill="rgb(229,115,45)" fg:x="18810" fg:w="777"/><text x="90.9312%" y="431.50">labs..</text></g><g><title>labs2024.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::append_elements(ptr_const$&lt;slice2$ (777 samples, 3.75%)</title><rect x="90.6812%" y="405" width="3.7458%" height="15" fill="rgb(224,191,6)" fg:x="18810" fg:w="777"/><text x="90.9312%" y="415.50">labs..</text></g><g><title>labs2024.exe`core::ptr::mut_ptr::impl$0::add (280 samples, 1.35%)</title><rect x="93.0772%" y="389" width="1.3499%" height="15" fill="rgb(230,227,24)" fg:x="19307" fg:w="280"/><text x="93.3272%" y="399.50"></text></g><g><title>labs2024.exe`core::slice::memchr::contains_zero_byte (5 samples, 0.02%)</title><rect x="94.7597%" y="421" width="0.0241%" height="15" fill="rgb(228,80,19)" fg:x="19656" fg:w="5"/><text x="95.0097%" y="431.50"></text></g><g><title>labs2024.exe`core::slice::memchr::memchr_aligned (76 samples, 0.37%)</title><rect x="94.4270%" y="437" width="0.3664%" height="15" fill="rgb(247,229,0)" fg:x="19587" fg:w="76"/><text x="94.6770%" y="447.50"></text></g><g><title>`0x7FFEBDECFA00 (6 samples, 0.03%)</title><rect x="94.8706%" y="373" width="0.0289%" height="15" fill="rgb(237,194,15)" fg:x="19679" fg:w="6"/><text x="95.1206%" y="383.50"></text></g><g><title>`0x7FFEBDECFA10 (4 samples, 0.02%)</title><rect x="94.8995%" y="373" width="0.0193%" height="15" fill="rgb(219,203,20)" fg:x="19685" fg:w="4"/><text x="95.1495%" y="383.50"></text></g><g><title>`0x7FFEBDECFA14 (996 samples, 4.80%)</title><rect x="94.9188%" y="373" width="4.8016%" height="15" fill="rgb(234,128,8)" fg:x="19689" fg:w="996"/><text x="95.1688%" y="383.50">`0x7FF..</text></g><g><title>labs2024.exe`std::io::BufRead::read_line::closure$0(std::io::BufRead::read_line::closure_env$0&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt;, alloc::vec::Vec (1,877 samples, 9.05%)</title><rect x="90.6764%" y="469" width="9.0488%" height="15" fill="rgb(248,202,8)" fg:x="18809" fg:w="1877"/><text x="90.9264%" y="479.50">labs2024.exe`..</text></g><g><title>labs2024.exe`std::io::read_until(std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;*, unsigned char, alloc::vec::Vec (1,877 samples, 9.05%)</title><rect x="90.6764%" y="453" width="9.0488%" height="15" fill="rgb(206,104,37)" fg:x="18809" fg:w="1877"/><text x="90.9264%" y="463.50">labs2024.exe`..</text></g><g><title>labs2024.exe`std::io::buffered::bufreader::impl$4::fill_buf(std::io::buffered::bufreader::BufReader (1,023 samples, 4.93%)</title><rect x="94.7934%" y="437" width="4.9318%" height="15" fill="rgb(223,8,27)" fg:x="19663" fg:w="1023"/><text x="95.0434%" y="447.50">labs20..</text></g><g><title>labs2024.exe`std::io::buffered::bufreader::buffer::Buffer::fill_buf (1,023 samples, 4.93%)</title><rect x="94.7934%" y="421" width="4.9318%" height="15" fill="rgb(216,217,28)" fg:x="19663" fg:w="1023"/><text x="95.0434%" y="431.50">labs20..</text></g><g><title>labs2024.exe`std::sys::windows::handle::Handle::read_buf (1,021 samples, 4.92%)</title><rect x="94.8031%" y="405" width="4.9221%" height="15" fill="rgb(249,199,1)" fg:x="19665" fg:w="1021"/><text x="95.0531%" y="415.50">labs20..</text></g><g><title>labs2024.exe`std::sys::windows::handle::Handle::synchronous_read (1,020 samples, 4.92%)</title><rect x="94.8079%" y="389" width="4.9173%" height="15" fill="rgb(240,85,17)" fg:x="19666" fg:w="1020"/><text x="95.0579%" y="399.50">labs20..</text></g><g><title>labs2024.exe`std::io::impl$26::next&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt;(std::io::Lines&lt;std::io::buffered::bufreader::BufReader (1,953 samples, 9.42%)</title><rect x="90.3148%" y="501" width="9.4152%" height="15" fill="rgb(206,108,45)" fg:x="18734" fg:w="1953"/><text x="90.5648%" y="511.50">labs2024.exe`..</text></g><g><title>labs2024.exe`std::io::append_to_string&lt;std::io::BufRead::read_line::closure_env$0&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;(alloc::string::String*, std::io::BufRead::read_line::closure_env$0&lt;std::io::buffered::bufreader::BufReader (1,953 samples, 9.42%)</title><rect x="90.3148%" y="485" width="9.4152%" height="15" fill="rgb(245,210,41)" fg:x="18734" fg:w="1953"/><text x="90.5648%" y="495.50">labs2024.exe`..</text></g><g><title>labs2024.exe`labs2024::load_data(ref$&lt;str$&gt;, enum2$&lt;core::option::Option (19,692 samples, 94.93%)</title><rect x="4.8064%" y="517" width="94.9332%" height="15" fill="rgb(206,13,37)" fg:x="997" fg:w="19692"/><text x="5.0564%" y="527.50">labs2024.exe`labs2024::load_data(ref$&lt;str$&gt;, enum2$&lt;core::option::Option</text></g><g><title>`0x7FFEBDE8AA48 (20,627 samples, 99.44%)</title><rect x="0.3134%" y="741" width="99.4408%" height="15" fill="rgb(250,61,18)" fg:x="65" fg:w="20627"/><text x="0.5634%" y="751.50">`0x7FFEBDE8AA48</text></g><g><title>`0x7FFEBCAF257D (20,627 samples, 99.44%)</title><rect x="0.3134%" y="725" width="99.4408%" height="15" fill="rgb(235,172,48)" fg:x="65" fg:w="20627"/><text x="0.5634%" y="735.50">`0x7FFEBCAF257D</text></g><g><title>labs2024.exe`__scrt_common_main_seh() (20,627 samples, 99.44%)</title><rect x="0.3134%" y="709" width="99.4408%" height="15" fill="rgb(249,201,17)" fg:x="65" fg:w="20627"/><text x="0.5634%" y="719.50">labs2024.exe`__scrt_common_main_seh()</text></g><g><title>labs2024.exe`invoke_main() (20,610 samples, 99.36%)</title><rect x="0.3953%" y="693" width="99.3588%" height="15" fill="rgb(219,208,6)" fg:x="82" fg:w="20610"/><text x="0.6453%" y="703.50">labs2024.exe`invoke_main()</text></g><g><title>labs2024.exe`main (20,610 samples, 99.36%)</title><rect x="0.3953%" y="677" width="99.3588%" height="15" fill="rgb(248,31,23)" fg:x="82" fg:w="20610"/><text x="0.6453%" y="687.50">labs2024.exe`main</text></g><g><title>labs2024.exe`std::rt::lang_start_internal (20,610 samples, 99.36%)</title><rect x="0.3953%" y="661" width="99.3588%" height="15" fill="rgb(245,15,42)" fg:x="82" fg:w="20610"/><text x="0.6453%" y="671.50">labs2024.exe`std::rt::lang_start_internal</text></g><g><title>labs2024.exe`std::panic::catch_unwind (20,610 samples, 99.36%)</title><rect x="0.3953%" y="645" width="99.3588%" height="15" fill="rgb(222,217,39)" fg:x="82" fg:w="20610"/><text x="0.6453%" y="655.50">labs2024.exe`std::panic::catch_unwind</text></g><g><title>labs2024.exe`std::panicking::try (20,610 samples, 99.36%)</title><rect x="0.3953%" y="629" width="99.3588%" height="15" fill="rgb(210,219,27)" fg:x="82" fg:w="20610"/><text x="0.6453%" y="639.50">labs2024.exe`std::panicking::try</text></g><g><title>labs2024.exe`std::panicking::try::do_call (20,610 samples, 99.36%)</title><rect x="0.3953%" y="613" width="99.3588%" height="15" fill="rgb(252,166,36)" fg:x="82" fg:w="20610"/><text x="0.6453%" y="623.50">labs2024.exe`std::panicking::try::do_call</text></g><g><title>labs2024.exe`std::rt::lang_start_internal::closure$2 (20,607 samples, 99.34%)</title><rect x="0.4098%" y="597" width="99.3444%" height="15" fill="rgb(245,132,34)" fg:x="85" fg:w="20607"/><text x="0.6598%" y="607.50">labs2024.exe`std::rt::lang_start_internal::closure$2</text></g><g><title>labs2024.exe`std::panic::catch_unwind (20,607 samples, 99.34%)</title><rect x="0.4098%" y="581" width="99.3444%" height="15" fill="rgb(236,54,3)" fg:x="85" fg:w="20607"/><text x="0.6598%" y="591.50">labs2024.exe`std::panic::catch_unwind</text></g><g><title>labs2024.exe`std::rt::lang_start::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::error::Error&gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;(std::rt::lang_start::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$ (20,607 samples, 99.34%)</title><rect x="0.4098%" y="565" width="99.3444%" height="15" fill="rgb(241,173,43)" fg:x="85" fg:w="20607"/><text x="0.6598%" y="575.50">labs2024.exe`std::rt::lang_start::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::error::Error&gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;(std::rt::lang_..</text></g><g><title>labs2024.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::error::Error&gt;,alloc::alloc::Global&gt; &gt; &gt; (*)(),enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::error::Error&gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::error::Error&gt;,alloc::alloc::Global&gt; &gt; &gt; (*) (20,607 samples, 99.34%)</title><rect x="0.4098%" y="549" width="99.3444%" height="15" fill="rgb(215,190,9)" fg:x="85" fg:w="20607"/><text x="0.6598%" y="559.50">labs2024.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::error::Error&gt;,alloc::alloc::Gl..</text></g><g><title>labs2024.exe`labs2024::main (20,607 samples, 99.34%)</title><rect x="0.4098%" y="533" width="99.3444%" height="15" fill="rgb(242,101,16)" fg:x="85" fg:w="20607"/><text x="0.6598%" y="543.50">labs2024.exe`labs2024::main</text></g><g><title>`0x7FFEBDE5C254 (3 samples, 0.01%)</title><rect x="99.8264%" y="533" width="0.0145%" height="15" fill="rgb(223,190,21)" fg:x="20707" fg:w="3"/><text x="100.0764%" y="543.50"></text></g><g><title>`0x7FFEBDE5C0CA (3 samples, 0.01%)</title><rect x="99.8264%" y="517" width="0.0145%" height="15" fill="rgb(215,228,25)" fg:x="20707" fg:w="3"/><text x="100.0764%" y="527.50"></text></g><g><title>`0x7FFEBDE5C4CC (3 samples, 0.01%)</title><rect x="99.8264%" y="501" width="0.0145%" height="15" fill="rgb(225,36,22)" fg:x="20707" fg:w="3"/><text x="100.0764%" y="511.50"></text></g><g><title>`0x7FF4BDB810CE (3 samples, 0.01%)</title><rect x="99.8264%" y="485" width="0.0145%" height="15" fill="rgb(251,106,46)" fg:x="20707" fg:w="3"/><text x="100.0764%" y="495.50"></text></g><g><title>`0x7FFE7E065712 (3 samples, 0.01%)</title><rect x="99.8264%" y="469" width="0.0145%" height="15" fill="rgb(208,90,1)" fg:x="20707" fg:w="3"/><text x="100.0764%" y="479.50"></text></g><g><title>`0x7FFE7E06A88A (3 samples, 0.01%)</title><rect x="99.8264%" y="453" width="0.0145%" height="15" fill="rgb(243,10,4)" fg:x="20707" fg:w="3"/><text x="100.0764%" y="463.50"></text></g><g><title>`0x7FFE7E051DED (3 samples, 0.01%)</title><rect x="99.8264%" y="437" width="0.0145%" height="15" fill="rgb(212,137,27)" fg:x="20707" fg:w="3"/><text x="100.0764%" y="447.50"></text></g><g><title>`0x7FFEBDECFE54 (3 samples, 0.01%)</title><rect x="99.8264%" y="421" width="0.0145%" height="15" fill="rgb(231,220,49)" fg:x="20707" fg:w="3"/><text x="100.0764%" y="431.50"></text></g><g><title>`0x7FFEBDF0E8B3 (11 samples, 0.05%)</title><rect x="99.8120%" y="693" width="0.0530%" height="15" fill="rgb(237,96,20)" fg:x="20704" fg:w="11"/><text x="100.0620%" y="703.50"></text></g><g><title>`0x7FFEBDE546BB (11 samples, 0.05%)</title><rect x="99.8120%" y="677" width="0.0530%" height="15" fill="rgb(239,229,30)" fg:x="20704" fg:w="11"/><text x="100.0620%" y="687.50"></text></g><g><title>`0x7FFEBDE54906 (11 samples, 0.05%)</title><rect x="99.8120%" y="661" width="0.0530%" height="15" fill="rgb(219,65,33)" fg:x="20704" fg:w="11"/><text x="100.0620%" y="671.50"></text></g><g><title>`0x7FFEBDE558C4 (11 samples, 0.05%)</title><rect x="99.8120%" y="645" width="0.0530%" height="15" fill="rgb(243,134,7)" fg:x="20704" fg:w="11"/><text x="100.0620%" y="655.50"></text></g><g><title>`0x7FFEBDE5CE29 (11 samples, 0.05%)</title><rect x="99.8120%" y="629" width="0.0530%" height="15" fill="rgb(216,177,54)" fg:x="20704" fg:w="11"/><text x="100.0620%" y="639.50"></text></g><g><title>`0x7FFEBDE5C3F8 (9 samples, 0.04%)</title><rect x="99.8216%" y="613" width="0.0434%" height="15" fill="rgb(211,160,20)" fg:x="20706" fg:w="9"/><text x="100.0716%" y="623.50"></text></g><g><title>`0x7FFEBDE546BB (8 samples, 0.04%)</title><rect x="99.8264%" y="597" width="0.0386%" height="15" fill="rgb(239,85,39)" fg:x="20707" fg:w="8"/><text x="100.0764%" y="607.50"></text></g><g><title>`0x7FFEBDE54906 (8 samples, 0.04%)</title><rect x="99.8264%" y="581" width="0.0386%" height="15" fill="rgb(232,125,22)" fg:x="20707" fg:w="8"/><text x="100.0764%" y="591.50"></text></g><g><title>`0x7FFEBDE558C4 (8 samples, 0.04%)</title><rect x="99.8264%" y="565" width="0.0386%" height="15" fill="rgb(244,57,34)" fg:x="20707" fg:w="8"/><text x="100.0764%" y="575.50"></text></g><g><title>`0x7FFEBDE5CE29 (8 samples, 0.04%)</title><rect x="99.8264%" y="549" width="0.0386%" height="15" fill="rgb(214,203,32)" fg:x="20707" fg:w="8"/><text x="100.0764%" y="559.50"></text></g><g><title>`0x7FFEBDE5C3F8 (5 samples, 0.02%)</title><rect x="99.8409%" y="533" width="0.0241%" height="15" fill="rgb(207,58,43)" fg:x="20710" fg:w="5"/><text x="100.0909%" y="543.50"></text></g><g><title>`0x7FFEBDE546BB (4 samples, 0.02%)</title><rect x="99.8457%" y="517" width="0.0193%" height="15" fill="rgb(215,193,15)" fg:x="20711" fg:w="4"/><text x="100.0957%" y="527.50"></text></g><g><title>`0x7FFEBDE54906 (4 samples, 0.02%)</title><rect x="99.8457%" y="501" width="0.0193%" height="15" fill="rgb(232,15,44)" fg:x="20711" fg:w="4"/><text x="100.0957%" y="511.50"></text></g><g><title>`0x7FFEBDE40E8B (5 samples, 0.02%)</title><rect x="99.8650%" y="661" width="0.0241%" height="15" fill="rgb(212,3,48)" fg:x="20715" fg:w="5"/><text x="100.1150%" y="671.50"></text></g><g><title>`0x7FFEBDF0E8BB (13 samples, 0.06%)</title><rect x="99.8650%" y="693" width="0.0627%" height="15" fill="rgb(218,128,7)" fg:x="20715" fg:w="13"/><text x="100.1150%" y="703.50"></text></g><g><title>`0x7FFEBDE5A0A0 (13 samples, 0.06%)</title><rect x="99.8650%" y="677" width="0.0627%" height="15" fill="rgb(226,216,39)" fg:x="20715" fg:w="13"/><text x="100.1150%" y="687.50"></text></g><g><title>`0x7FFEBDE40F90 (8 samples, 0.04%)</title><rect x="99.8891%" y="661" width="0.0386%" height="15" fill="rgb(243,47,51)" fg:x="20720" fg:w="8"/><text x="100.1391%" y="671.50"></text></g><g><title>`0x7FFEBDE40BC8 (6 samples, 0.03%)</title><rect x="99.8988%" y="645" width="0.0289%" height="15" fill="rgb(241,183,40)" fg:x="20722" fg:w="6"/><text x="100.1488%" y="655.50"></text></g><g><title>`0x7FFEBDE9CDEE (3 samples, 0.01%)</title><rect x="99.9373%" y="661" width="0.0145%" height="15" fill="rgb(231,217,32)" fg:x="20730" fg:w="3"/><text x="100.1873%" y="671.50"></text></g><g><title>`0x7FFEBDE9D03D (3 samples, 0.01%)</title><rect x="99.9373%" y="645" width="0.0145%" height="15" fill="rgb(229,61,38)" fg:x="20730" fg:w="3"/><text x="100.1873%" y="655.50"></text></g><g><title>`0x7FFEBDE5869F (3 samples, 0.01%)</title><rect x="99.9373%" y="629" width="0.0145%" height="15" fill="rgb(225,210,5)" fg:x="20730" fg:w="3"/><text x="100.1873%" y="639.50"></text></g><g><title>`0x7FF4BDB813D6 (3 samples, 0.01%)</title><rect x="99.9373%" y="613" width="0.0145%" height="15" fill="rgb(231,79,45)" fg:x="20730" fg:w="3"/><text x="100.1873%" y="623.50"></text></g><g><title>`0x7FFE7E065CDD (3 samples, 0.01%)</title><rect x="99.9518%" y="581" width="0.0145%" height="15" fill="rgb(224,100,7)" fg:x="20733" fg:w="3"/><text x="100.2018%" y="591.50"></text></g><g><title>`0x7FFE7E0611D6 (3 samples, 0.01%)</title><rect x="99.9518%" y="565" width="0.0145%" height="15" fill="rgb(241,198,18)" fg:x="20733" fg:w="3"/><text x="100.2018%" y="575.50"></text></g><g><title>`0x7FF4BDB813D6 (4 samples, 0.02%)</title><rect x="99.9518%" y="597" width="0.0193%" height="15" fill="rgb(252,97,53)" fg:x="20733" fg:w="4"/><text x="100.2018%" y="607.50"></text></g><g><title>`0x7FFEBDE9CDEE (7 samples, 0.03%)</title><rect x="99.9518%" y="645" width="0.0337%" height="15" fill="rgb(220,88,7)" fg:x="20733" fg:w="7"/><text x="100.2018%" y="655.50"></text></g><g><title>`0x7FFEBDE9D03D (7 samples, 0.03%)</title><rect x="99.9518%" y="629" width="0.0337%" height="15" fill="rgb(213,176,14)" fg:x="20733" fg:w="7"/><text x="100.2018%" y="639.50"></text></g><g><title>`0x7FFEBDE5869F (7 samples, 0.03%)</title><rect x="99.9518%" y="613" width="0.0337%" height="15" fill="rgb(246,73,7)" fg:x="20733" fg:w="7"/><text x="100.2018%" y="623.50"></text></g><g><title>`0x7FFEBDF0EA39 (11 samples, 0.05%)</title><rect x="99.9373%" y="693" width="0.0530%" height="15" fill="rgb(245,64,36)" fg:x="20730" fg:w="11"/><text x="100.1873%" y="703.50"></text></g><g><title>`0x7FFEBDE9CE60 (11 samples, 0.05%)</title><rect x="99.9373%" y="677" width="0.0530%" height="15" fill="rgb(245,80,10)" fg:x="20730" fg:w="11"/><text x="100.1873%" y="687.50"></text></g><g><title>`0x7FFEBDE9CE60 (8 samples, 0.04%)</title><rect x="99.9518%" y="661" width="0.0386%" height="15" fill="rgb(232,107,50)" fg:x="20733" fg:w="8"/><text x="100.2018%" y="671.50"></text></g><g><title>`0x7FFEBDEA3EA3 (50 samples, 0.24%)</title><rect x="99.7541%" y="725" width="0.2410%" height="15" fill="rgb(253,3,0)" fg:x="20692" fg:w="50"/><text x="100.0041%" y="735.50"></text></g><g><title>`0x7FFEBDEFA744 (50 samples, 0.24%)</title><rect x="99.7541%" y="709" width="0.2410%" height="15" fill="rgb(212,99,53)" fg:x="20692" fg:w="50"/><text x="100.0041%" y="719.50"></text></g><g><title>all (20,743 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(249,111,54)" fg:x="0" fg:w="20743"/><text x="0.2500%" y="767.50"></text></g><g><title>`0x7FFEBDEA3DCE (51 samples, 0.25%)</title><rect x="99.7541%" y="741" width="0.2459%" height="15" fill="rgb(249,55,30)" fg:x="20692" fg:w="51"/><text x="100.0041%" y="751.50"></text></g></svg></svg>